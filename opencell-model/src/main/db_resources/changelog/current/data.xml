<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet id="#INTRD-1166_20211018_Business_attributes" author="MohammedELAZZOUZI">
		<insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="product activation date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-1"></column>
        	<column name="code" value="product activation date"></column>
        	<column name="description" value="Product activation date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="product quantity" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-2"></column>
        	<column name="code" value="product quantity"></column>
        	<column name="description" value="Product quantity"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="usage date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-3"></column>
        	<column name="code" value="usage date"></column>
        	<column name="description" value="Usage date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="usage quantity" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-4"></column>
        	<column name="code" value="usage quantity"></column>
        	<column name="description" value="Usage quantity"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="renewal date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-5"></column>
        	<column name="code" value="renewal date"></column>
        	<column name="description" value="Renewal date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="delivery date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-6"></column>
        	<column name="code" value="delivery date"></column>
        	<column name="description" value="Delivery date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="quote validation date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-7"></column>
        	<column name="code" value="quote validation date"></column>
        	<column name="description" value="Quote validation date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="subscription date" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-8"></column>
        	<column name="code" value="subscription date"></column>
        	<column name="description" value="Subscription date"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="subscription age months" />
        	<column name="attribute_type" value="INTEGER"></column>
        	<column name="id" valueNumeric="-9"></column>
        	<column name="code" value="subscription age months"></column>
        	<column name="description" value="Subscription age months"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="subscription age days" />
        	<column name="attribute_type" value="INTEGER"></column>
        	<column name="id" valueNumeric="-10"></column>
        	<column name="code" value="subscription age days"></column>
        	<column name="description" value="Subscription age days"></column>
        </insert>
         <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 1" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-11"></column>
        	<column name="code" value="EDR text parameter 1"></column>
        	<column name="description" value="EDR text parameter 1"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 2" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-12"></column>
        	<column name="code" value="EDR text parameter 2"></column>
        	<column name="description" value="EDR text parameter 2"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 3" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-13"></column>
        	<column name="code" value="EDR text parameter 3"></column>
        	<column name="description" value="EDR text parameter 3"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 4" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-14"></column>
        	<column name="code" value="EDR text parameter 4"></column>
        	<column name="description" value="EDR text parameter 4"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 5" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-15"></column>
        	<column name="code" value="EDR text parameter 5"></column>
        	<column name="description" value="EDR text parameter 5"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 6" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-16"></column>
        	<column name="code" value="EDR text parameter 6"></column>
        	<column name="description" value="EDR text parameter 6"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 7" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-17"></column>
        	<column name="code" value="EDR text parameter 7"></column>
        	<column name="description" value="EDR text parameter 7"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 8" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-18"></column>
        	<column name="code" value="EDR text parameter 8"></column>
        	<column name="description" value="EDR text parameter 8"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR text parameter 9" />
        	<column name="attribute_type" value="TEXT"></column>
        	<column name="id" valueNumeric="-19"></column>
        	<column name="code" value="EDR text parameter 9"></column>
        	<column name="description" value="EDR text parameter 9"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR date parameter 1" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-21"></column>
        	<column name="code" value="EDR date parameter 1"></column>
        	<column name="description" value="EDR date parameter 1"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR date parameter 2" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-22"></column>
        	<column name="code" value="EDR date parameter 2"></column>
        	<column name="description" value="EDR date parameter 2"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR date parameter 3" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-23"></column>
        	<column name="code" value="EDR date parameter 3"></column>
        	<column name="description" value="EDR date parameter 3"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR date parameter 4" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-24"></column>
        	<column name="code" value="EDR date parameter 4"></column>
        	<column name="description" value="EDR date parameter 4"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR date parameter 5" />
        	<column name="attribute_type" value="DATE"></column>
        	<column name="id" valueNumeric="-25"></column>
        	<column name="code" value="EDR date parameter 5"></column>
        	<column name="description" value="EDR date parameter 5"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR numeric parameter 1" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-31"></column>
        	<column name="code" value="EDR numeric parameter 1"></column>
        	<column name="description" value="EDR numeric parameter 1"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR numeric parameter 2" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-32"></column>
        	<column name="code" value="EDR numeric parameter 2"></column>
        	<column name="description" value="EDR numeric parameter 2"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR numeric parameter 3" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-33"></column>
        	<column name="code" value="EDR numeric parameter 3"></column>
        	<column name="description" value="EDR numeric parameter 3"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR numeric parameter 4" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-34"></column>
        	<column name="code" value="EDR numeric parameter 4"></column>
        	<column name="description" value="EDR numeric parameter 4"></column>
        </insert>
        <insert tableName="cpq_attribute">
        	<column name="version" value="0"></column>
        	<column name="disabled" valueNumeric="0" />
        	<column name="created" valueDate="${db.current.time}"></column>
        	<column name="creator" value="applicationInitializer"></column>
        	<column name="attribute_category" value="BUSINESS"></column>
        	<column name="uuid" value="EDR numeric parameter 5" />
        	<column name="attribute_type" value="NUMERIC"></column>
        	<column name="id" valueNumeric="-35"></column>
        	<column name="code" value="EDR numeric parameter 5"></column>
        	<column name="description" value="EDR numeric parameter 5"></column>
        </insert>
    </changeSet>
    
    <changeSet id="#INTRD-1166_20211110_Business_attributes" author="MohammedELAZZOUZI">
    	<sql>update cpq_attribute set code = replace(code, ' ', '_') where code like '% %'</sql>
    </changeSet>
    
    <changeSet id="#NTRD-2413_20211028_Business_attributes_add_el" author="MohammedELAZZOUZI">
		<update tableName="cpq_attribute"><column name="el_value">${serviceInstance.getActivationDate()}</column><where>id=-1</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${serviceInstance.getQuantity()}</column><where>id=-2</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getEventDate()}</column><where>id=-3</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getQuantity()}</column><where>id=-4</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${sub.getRenewalDate()}</column><where>id=-5</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${serviceInstance.getDeliveryDate()}</column><where>id=-6</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${quote.getValidationDate()}</column><where>id=-7</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${sub.getSubscriptionDate()}</column><where>id=-8</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${sub.getSubscriptionMonthsAge()}</column><where>id=-9</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${sub.getSubscriptionDaysAge()}</column><where>id=-10</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter1()}</column><where>id=-11</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter2()}</column><where>id=-12</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter3()}</column><where>id=-13</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter4()}</column><where>id=-14</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter5()}</column><where>id=-15</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter6()}</column><where>id=-16</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter7()}</column><where>id=-17</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter8()}</column><where>id=-18</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getParameter9()}</column><where>id=-19</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDateParam1()}</column><where>id=-21</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDateParam2()}</column><where>id=-22</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDateParam3()}</column><where>id=-23</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDateParam4()}</column><where>id=-24</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDateParam5()}</column><where>id=-25</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDecimalParam1()}</column><where>id=-31</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDecimalParam2()}</column><where>id=-32</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDecimalParam3()}</column><where>id=-33</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDecimalParam4()}</column><where>id=-34</where></update>
        <update tableName="cpq_attribute"><column name="el_value">${edr.getDecimalParam5()}</column><where>id=-35</where></update>
    </changeSet>
    
    <changeSet id="#5417_20200929 - Error while running CUSTOMERS_PER_SELLER report extracts" author="Mohamed-Ali-HAMMAL">
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select ce.code AS "Seller code"
					        , ce.description AS "Seller description"
					        , coalesce(ce.code, '') AS "Customer code"
					        , coalesce(replace(ce.description, ',', ' '), '') AS "Customer description"
					from  crm_seller s left
					        OUTER JOIN crm_customer c  on c.seller_id = s.id left
					        OUTER JOIN account_entity ce  on c.id = ce.id
					where( ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  )
					order by ce.code
			    ]]></column>
            <where>code='CUSTOMERS_PER_SELLER'</where>
        </update>
    </changeSet>

    <changeSet author="Mohammed_ELAZZOUZI" id="rebuild-data-cat_unit_of_measure">
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-1" />
            <column name="symbol" value="B" />
            <column name="code" value="byte" />
            <column name="description" value="Byte" />
            <column name="multiplicator" valueNumeric="1" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-2" />
            <column name="symbol" value="KB" />
            <column name="code" value="kilobyte" />
            <column name="description" value="Kilobyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1000" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-3" />
            <column name="symbol" value="MB" />
            <column name="code" value="megabyte" />
            <column name="description" value="Megabyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1000000" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-4" />
            <column name="symbol" value="GB" />
            <column name="code" value="gigabyte" />
            <column name="description" value="Gigabyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1000000000" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-5" />
            <column name="symbol" value="TB" />
            <column name="code" value="terabyte" />
            <column name="description" value="Terabyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1000000000000" />
        </insert>
                <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-6" />
            <column name="symbol" value="KiB" />
            <column name="code" value="kibi" />
            <column name="description" value="Kibibyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1024" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-7" />
            <column name="symbol" value="MiB" />
            <column name="code" value="mebibyte" />
            <column name="description" value="Mebibyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1048576" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-8" />
            <column name="symbol" value="GiB" />
            <column name="code" value="gibibyte" />
            <column name="description" value="Gibibyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1073741824" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-9" />
            <column name="symbol" value="TiB" />
            <column name="code" value="tebibyte" />
            <column name="description" value="Tebibyte" />
            <column name="parent_id" valueNumeric="-1" />
            <column name="multiplicator" valueNumeric="1099511627776" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-10" />
            <column name="symbol" value="s" />
            <column name="code" value="second" />
            <column name="description" value="Second" />
            <column name="multiplicator" valueNumeric="1" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-11" />
            <column name="symbol" value="min" />
            <column name="code" value="minute" />
            <column name="description" value="Minute" />
            <column name="multiplicator" valueNumeric="60" />
            <column name="parent_id" valueNumeric="-10" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-12" />
            <column name="symbol" value="h" />
            <column name="code" value="hour" />
            <column name="description" value="Hour" />
            <column name="multiplicator" valueNumeric="3600" />
            <column name="parent_id" valueNumeric="-10" />
        </insert>
        <insert tableName="cat_unit_of_measure">
            <column name="created" valueDate="2019-11-19 12:00:00.000" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="0" />

            <column name="id" valueNumeric="-13" />
            <column name="symbol" value="msg" />
            <column name="code" value="message" />
            <column name="description" value="Message" />
            <column name="multiplicator" valueNumeric="1" />
        </insert>
    </changeSet>

    <changeSet id="500X_20200218_purge_job" author="mohamed.el.youssoufi">
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-28" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="2019-02-18 00:00:00.000" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="PurgeMediationDataJobV2" />
            <column name="code" value="PurgeMediationDataJobV2" />
            <column name="creator" value="opencell.admin" />
            <column name="description" value="Purge not open EDR, WO, RTx"/>
            <column name="uuid" value="PurgeMediationDataJobV2" />
            <column name="cf_values" value='{"PurgeMediationDataJobV2_firstTransactionDate":[{"date":"2017-01-01T00:00:00Z"}]}'></column>
        </insert>
    </changeSet>

    <changeSet id="#4924_20200219" author="anasseh">
      <insert tableName="crm_provider_pay_methods">
            <column name="provider_id" valueNumeric="1" />
            <column name="payment_method" value="PAYPAL" />
        </insert>
      <insert tableName="crm_provider_pay_methods">
            <column name="provider_id" valueNumeric="1" />
            <column name="payment_method" value="STRIPE" />
        </insert>
   </changeSet>

    <changeSet id="#4924_20200219_2" author="anasseh">
       <insert tableName="ar_occ_template">
            <column name="id" valueNumeric="-46" />
            <column name="version" valueNumeric="0" />

            <column name="created" valueDate="${db.current.time}" />
            <column name="accounting_code_id" valueNumeric="-3" />
            <column name="account_code_client_side" value="411000000" />
            <column name="code" value="PAY_PAL" />
            <column name="description" value="Payment Paypal" />
            <column name="occ_category" value="CREDIT" />
        </insert>
       <insert tableName="ar_occ_template">
            <column name="id" valueNumeric="-47" />
            <column name="version" valueNumeric="0" />

            <column name="created" valueDate="${db.current.time}" />
            <column name="accounting_code_id" valueNumeric="-3" />
            <column name="account_code_client_side" value="411000000" />
            <column name="code" value="PAY_STP" />
            <column name="description" value="Payment Stripe" />
            <column name="occ_category" value="CREDIT" />
        </insert>
      </changeSet>

      <changeSet id="#5308_20200618 - Add script" author="AndriusKarpavicius">
        <insert tableName="meveo_script_instance">
            <column name="id" valueSequenceNext="meveo_script_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.validation.CheckReferencesWhenDeletingScript" />
            <column name="src_type" value="JAVA_CLASS" />
            <column name="description" value="Data integrity check at deletion - reference to custom table"/>
            <column name="created" valueDate="${db.current.time}" />
        </insert>
        <insert tableName="meveo_script_instance">
            <column name="id" valueSequenceNext="meveo_script_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.validation.CheckValidityDatesScript" />
            <column name="src_type" value="JAVA_CLASS" />
            <column name="description" value="Data integrity check at create - update - record validity overlap"/>
            <column name="created" valueDate="${db.current.time}" />
        </insert>
      </changeSet>

	<changeSet id="#5303_20200707 - CDR and Mediation" author="AmineTazi">
		<insert tableName="adm_permission">
            <column name="id" valueNumeric="-119" />
            <column name="name" value="CDR Manager" />
            <column name="permission" value="cdrManager" />
        </insert>
        <insert tableName="adm_permission">
            <column name="id" valueNumeric="-120" />
            <column name="name" value="CDR Visualizer" />
            <column name="permission" value="cdrVisualizer" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" value="-1"></column>
            <column name="permission_id" value="-119"></column>
        </insert>
                <insert tableName="adm_role_permission">
            <column name="role_id" value="-1"></column>
            <column name="permission_id" value="-120"></column>
        </insert>
	</changeSet>
	<changeSet id="#5418_20201030" author="Mohammed_ELAZZOUZI">
	    <insert tableName="adm_role">
            <column name="id" valueNumeric="-200" />
            <column name="version" valueNumeric="0" />
            <column name="role_description" value="API v2 full access" />
            <column name="role_name" value="APIv2_FULL_ACCESS" />
        </insert>
        <insert tableName="adm_user_role">
            <column name="user_id" valueNumeric="-1" />
            <column name="role_id" valueNumeric="-200" />
        </insert>
        <insert tableName="adm_user_role">
            <column name="user_id" valueNumeric="-2" />
            <column name="role_id" valueNumeric="-200" />
        </insert>
	</changeSet>
 	<changeSet id="#5303_20200814 - CDR and Mediation" author="AmineTazi">
		<insert tableName="adm_permission">
            <column name="id" valueNumeric="-121" />
            <column name="name" value="CDR Rate Manager" />
            <column name="permission" value="cdrRateManager" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" value="-1"></column>
            <column name="permission_id" value="-121"></column>
        </insert>
	</changeSet>

    <changeSet id="#5425_20200930 - Failed to execute some report extract" author="Mohamed-Ali-HAMMAL">
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select ce.code AS "Seller code"
					        , ce.description AS "Seller description"
					        , coalesce(ce.code, '') AS "Customer code"
					        , coalesce(replace(ce.description, ',', ' '), '') AS "Customer description"
					from  crm_seller s left
					        OUTER JOIN crm_customer c  on c.seller_id = s.id left
					        OUTER JOIN account_entity ce  on c.id = ce.id
					where( ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  )
					order by ce.code
			    ]]></column>
            <where>code='CUSTOMERS_PER_SELLER'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select ce.code AS "Seller code"
                    , ce.description AS "Seller description"
                    , coalesce(ce.code, '') AS "Customer code"
                    , coalesce(replace(ce.description, ',', ' '), '') AS "Customer description"
                    , coalesce(cae.code, '') AS "Customer Account code"
                    , coalesce(replace(cae.description, ',', ' '), '') AS "Customer Account description"
                    , coalesce(bae.code, '') AS "Billing Account code"
                    , coalesce(replace(bae.description, ',', ' '), '') AS "Billing Account description"
                    , coalesce(uae.code, '') AS "User Account code"
                    , coalesce(replace(uae.description, ',', ' '), '') AS "User Account description"
                    , coalesce(su.code, '') AS "Subscription code"
                    , coalesce(replace(su.description, ',', ' '), '') AS "Subscription description"
                    , coalesce(ap.acces_user_id, '') AS "Access Point id"
                from  crm_seller s full
                    OUTER JOIN crm_customer c  on c.seller_id = s.id full
                    OUTER JOIN account_entity ce  on c.id = ce.id full
                    OUTER JOIN ar_customer_account ca  on ca.customer_id = c.id full
                    OUTER JOIN account_entity cae  on ca.id = cae.id full
                    OUTER JOIN billing_billing_account ba  on ba.customer_account_id = ca.id full
                    OUTER JOIN account_entity bae  on ba.id = bae.id full
                    OUTER JOIN billing_user_account ua  on ua.billing_account_id = ba.id full
                    OUTER JOIN account_entity uae  on ua.id = uae.id full
                    OUTER JOIN billing_subscription su  on su.user_account_id = ua.id full
                    OUTER JOIN medina_access ap  on ap.subscription_id = su.id
                where ce.code ilike '%' || :SEARCH_CRITERION
                    || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  or cae.code ilike '%'
                    || :SEARCH_CRITERION || '%'  or cae.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or bae.code ilike '%' || :SEARCH_CRITERION || '%'  or bae.description ilike '%'
                    || :SEARCH_CRITERION || '%'  or uae.code ilike '%' || :SEARCH_CRITERION
                    || '%'  or uae.description ilike '%' || :SEARCH_CRITERION || '%'  or su.code ilike '%'
                    || :SEARCH_CRITERION || '%'  or su.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or ap.acces_user_id ilike '%' || :SEARCH_CRITERION || '%'
                order by ce.code
                    ,cae.code
                    ,bae.code
                    ,uae.code
                    ,su.code
                    ,ap.acces_user_id
			    ]]></column>
            <where>code='FULL_HIERARCHY'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select trim(to_char(date_trunc('month', i.invoice_date), 'Month')) || to_char(date_trunc('month', i.invoice_date), ' YYYY') AS "Month"
                    , ce.code AS "Seller code"
                    , ce.description AS "Seller description"
                    , ce.code AS "Customer code"
                    , ce.description AS "Customer description"
                    , cae.code AS "Customer Account code"
                    , cae.description AS "Customer Account description"
                    , bae.code AS "Billing Account code"
                    , bae.description AS "Billing Account description"
                    , it.code AS "Invoice type code"
                    , it.description AS "Invoice type description"
                    , to_char(sum(i.amount_without_tax), '9999999990.00') AS "Amount without tax"
                    , to_char(sum(i.amount_with_tax), '9999999990.00') AS "Amount with tax"
                from crm_seller s
                    INNER JOIN crm_customer c  on c.seller_id = s.id
                    INNER JOIN account_entity ce  on c.id = ce.id
                    INNER JOIN ar_customer_account ca  on ca.customer_id = c.id
                    INNER JOIN account_entity cae  on ca.id = cae.id
                    INNER JOIN billing_billing_account ba  on ba.customer_account_id = ca.id
                    INNER JOIN account_entity bae  on ba.id = bae.id
                    INNER JOIN billing_invoice i  on i.billing_account_id = ba.id
                    INNER JOIN billing_invoice_type it  on it.id = i.invoice_type_id
                where i.invoice_date > (date_trunc('month', CURRENT_DATE) - CAST(:MONTH_INTERVAL || ' month' AS INTERVAL))
                and(  ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or cae.code ilike '%' || :SEARCH_CRITERION || '%'  or cae.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or bae.code ilike '%' || :SEARCH_CRITERION || '%'  or bae.description ilike '%' || :SEARCH_CRITERION
                    || '%'  )  group by date_trunc('month', i.invoice_date)
                    , it.code
                    , it.description
                    , ce.code
                    , ce.description
                    , cae.code
                    , cae.description
                    , bae.code
                    , bae.description order by date_trunc('month', i.invoice_date) DESC
                    , it.code DESC
                    , ce.code
                    , cae.code
                    , bae.code
			    ]]></column>
            <where>code='INVOICED_BA_HIERARCHY'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select trim(to_char(date_trunc('month', i.invoice_date), 'Month')) || to_char(date_trunc('month', i.invoice_date), ' YYYY') AS  Month
                        , ce.code AS  "Seller code"
                        , ce.description AS  "Seller description"
                        , it.code AS  "Invoice type code"
                        , it.description AS  "Invoice type description"
                        , to_char(sum(i.amount_without_tax), '9999999990.00') AS  "Amount without tax"
                        , to_char(sum(i.amount_with_tax), '9999999990.00') AS  "Amount with tax"
                    from crm_seller s
                        INNER JOIN crm_customer c  on c.seller_id = s.id
                        INNER JOIN ar_customer_account ca  on ca.customer_id = c.id
                        INNER JOIN account_entity ce  on c.id = ce.id
                        INNER JOIN billing_billing_account ba  on ba.customer_account_id = ca.id
                        INNER JOIN billing_invoice i  on i.billing_account_id = ba.id
                        INNER JOIN billing_invoice_type it  on it.id = i.invoice_type_id
                    where i.invoice_date > (date_trunc('month', CURRENT_DATE) - CAST(:MONTH_INTERVAL || 'month' AS INTERVAL))
                    and(  ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  )
                    group by date_trunc('month', i.invoice_date)
                        , it.code
                        , it.description
                        , ce.code
                        , ce.description order by date_trunc('month', i.invoice_date) DESC
                        , it.code DESC
                        , ce.code
			    ]]></column>
            <where>code='INVOICED_S'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select trim(to_char(date_trunc('month', i.invoice_date), 'Month')) || to_char(date_trunc('month', i.invoice_date), ' YYYY') AS "Month"
                    , to_char(i.invoice_date, 'YYYY-MM-DD') AS "Invoice date"
                    , i.invoice_number AS "Invoice number"
                    , to_char(i.amount_without_tax, '9999999990.00') AS "Amount without tax"
                    , to_char(i.amount_with_tax, '9999999990.00') AS "Amount with tax"
                    , it.code AS "Invoice type code"
                    , it.description AS "Invoice type description"
                    , ce.code AS "Seller code"
                    , ce.description AS "Seller description"
                    , ce.code AS "Customer code"
                    , ce.description AS "Customer description"
                    , cae.code AS "Customer Account code"
                    , cae.description AS "Customer Account description"
                    , bae.code AS "Billing Account code"
                    , bae.description AS "Billing Account description"
                from crm_seller s
                    INNER JOIN crm_customer c  on c.seller_id = s.id
                    INNER JOIN account_entity ce  on c.id = ce.id
                    INNER JOIN ar_customer_account ca  on ca.customer_id = c.id
                    INNER JOIN account_entity cae  on ca.id = cae.id
                    INNER JOIN billing_billing_account ba  on ba.customer_account_id = ca.id
                    INNER JOIN account_entity bae  on ba.id = bae.id
                    INNER JOIN billing_invoice i  on i.billing_account_id = ba.id
                    INNER JOIN billing_invoice_type it  on it.id = i.invoice_type_id
                where i.invoice_date > (date_trunc('month', CURRENT_DATE) - CAST(:MONTH_INTERVAL || ' month' AS INTERVAL))
                and(  ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or cae.code ilike '%' || :SEARCH_CRITERION || '%'  or cae.description ilike '%' || :SEARCH_CRITERION
                    || '%'  or bae.code ilike '%' || :SEARCH_CRITERION || '%'  or bae.description ilike '%' || :SEARCH_CRITERION
                    || '%'  )
                order by date_trunc('month', i.invoice_date) DESC
                    , i.invoice_date DESC
                    , it.code
                    , i.invoice_number
			    ]]></column>
            <where>code='INVOICES'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[SELECT trim(to_char(date_trunc('month', ao.invoice_date), 'Month')) || to_char(date_trunc('month', ao.invoice_date), ' YYYY') AS "Month"
                ,ce.code AS "Customer code"
                ,ce.description AS "Customer description"
                ,cae.code AS "Customer Account code"
                ,cae.description AS "Customer Account description"
                ,bae.code AS "Billing Account code"
                ,bae.description AS "Billing Account description"
                ,to_char(sum(CASE
                            WHEN ao.transaction_category = 'DEBIT'
                                THEN ao.amount
                            ELSE 0
                            END), '99999999990.00') AS "Amount DEBIT"
                ,to_char(sum(CASE
                            WHEN ao.transaction_category = 'CREDIT'
                                THEN ao.amount
                            ELSE 0
                            END), '99999999990.00') AS "Amount CREDIT"
                ,to_char(sum(CASE
                            WHEN ao.transaction_category = 'DEBIT'
                                THEN ao.amount
                            ELSE - ao.amount
                            END), '99999999990.00') AS "Balance"
            FROM crm_seller s
                INNER JOIN crm_customer c ON c.seller_id = s.id
                INNER JOIN account_entity ce ON c.id = ce.id
                INNER JOIN ar_customer_account ca ON ca.customer_id = c.id
                INNER JOIN account_entity cae ON ca.id = cae.id
                INNER JOIN billing_billing_account ba ON ba.customer_account_id = ca.id
                INNER JOIN account_entity bae ON ba.id = bae.id
                INNER JOIN billing_invoice i ON i.billing_account_id = ba.id
                INNER JOIN ar_account_operation ao ON ao.customer_account_id = ca.id
                    AND ao.reference = i.invoice_number
                    AND ao.invoice_date = i.invoice_date
                    AND ao.amount = abs(i.amount_with_tax)
            WHERE ao.invoice_date IS NOT NULL
                AND ao.invoice_date > (date_trunc('month', CURRENT_DATE) - CAST(:MONTH_INTERVAL || ' month' AS INTERVAL))
                AND (
                    ce.code ilike '%' || :SEARCH_CRITERION || '%'
                    OR ce.description ilike '%' || :SEARCH_CRITERION || '%'
                    OR cae.code ilike '%' || :SEARCH_CRITERION || '%'
                    OR cae.description ilike '%' || :SEARCH_CRITERION || '%'
                    OR bae.code ilike '%' || :SEARCH_CRITERION || '%'
                    OR bae.description ilike '%' || :SEARCH_CRITERION || '%'
                    )
            GROUP BY date_trunc('month', ao.invoice_date)
                ,ce.code
                ,ce.description
                ,cae.code
                ,cae.description
                ,bae.code
                ,bae.description
            ORDER BY date_trunc('month', ao.invoice_date) DESC
                ,ce.code
                ,cae.code
                ,bae.code
			    ]]></column>
            <where>code='RECORDED_BA_HIERARCHY'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[SELECT trim(to_char(date_trunc('month', ao.invoice_date), 'Month')) || to_char(date_trunc('month', ao.invoice_date), ' YYYY') AS "Month"
                        ,ce.code AS "Seller code"
                        ,ce.description AS "Seller description"
                        ,to_char(sum(CASE
                                    WHEN ao.transaction_category = 'DEBIT'
                                        THEN ao.amount
                                    ELSE 0
                                    END), '99999999990.00') AS "Amount DEBIT"
                        ,to_char(sum(CASE
                                    WHEN ao.transaction_category = 'CREDIT'
                                        THEN ao.amount
                                    ELSE 0
                                    END), '99999999990.00') AS "Amount CREDIT"
                        ,to_char(sum(CASE
                                    WHEN ao.transaction_category = 'DEBIT'
                                        THEN ao.amount
                                    ELSE - ao.amount
                                    END), '99999999990.00') AS "Balance"
                    FROM crm_seller s
                        INNER JOIN crm_customer c ON c.seller_id = s.id
                        INNER JOIN account_entity ce on c.id = ce.id
                        INNER JOIN ar_customer_account ca ON ca.customer_id = c.id
                        INNER JOIN ar_account_operation ao ON ao.customer_account_id = ca.id
                    WHERE ao.invoice_date IS NOT NULL
                        AND ao.invoice_date > (date_trunc('month', CURRENT_DATE) - CAST(:MONTH_INTERVAL || ' month' AS INTERVAL))
                        AND (
                            ce.code ilike '%' || :SEARCH_CRITERION || '%'
                            OR ce.description ilike '%' || :SEARCH_CRITERION || '%'
                            )
                    GROUP BY date_trunc('month', ao.invoice_date)
                        ,ce.code
                        ,ce.description
                    ORDER BY date_trunc('month', ao.invoice_date) DESC
                        ,ce.code
			    ]]></column>
            <where>code='RECORDED_S'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select ce.code AS "Seller code"
                    , ce.description AS "Seller description"
                    , count(DISTINCT wo.id) AS "Transaction count"
                    , to_char(sum(wo.amount_without_tax), '99999999990.00') AS "Amount without tax"
                    , to_char(sum(wo.amount_with_tax), '99999999990.00') AS "Amount with tax"
                from  billing_wallet_operation wo
                    INNER JOIN billing_wallet wa  on wa.id = wo.wallet_id
                    INNER JOIN billing_user_account ua  on ua.id = wa.user_account_id
                    INNER JOIN billing_billing_account ba  on ba.id = ua.billing_account_id
                    INNER JOIN ar_customer_account ca  on ca.id = ba.customer_account_id
                    INNER JOIN crm_customer c  on c.id = ca.customer_id
                    INNER JOIN crm_seller s  on s.id = c.seller_id
                    INNER JOIN account_entity ce  on c.id = ce.id
                where  (  wo.STATUS = 'OPEN'  or (  wo.STATUS = 'TREATED'
                    and EXISTS (  select 1 from billing_rated_transaction rt where wo.rated_transaction_id = rt.id and rt.STATUS = 'OPEN' )  )  )
                and(  ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  )
                group by ce.code, ce.description
                order by ce.code
			    ]]></column>
            <where>code='UNBILLED_S'</where>
        </update>
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[select ce.code AS "Seller code"
                        , ce.description AS "Seller description"
                        , ce.code AS "Customer code"
                        , ce.description AS "Customer description"
                        , cae.code AS "Customer Account code"
                        , cae.description AS "Customer Account description"
                        , bae.code AS "Billing Account code"
                        , bae.description AS "Billing Account description"
                        , uae.code AS "User Account code"
                        , uae.description AS "User Account description"
                        , count(DISTINCT wo.id) AS "Transaction count"
                        , to_char(sum(wo.amount_without_tax), '99999999990.00') AS "Amount without tax"
                        , to_char(sum(wo.amount_with_tax), '99999999990.00') AS "Amount with tax"
                    from  billing_wallet_operation wo
                        INNER JOIN billing_wallet wa  on wa.id = wo.wallet_id
                        INNER JOIN billing_user_account ua  on ua.id = wa.user_account_id
                        INNER JOIN account_entity uae  on ua.id = uae.id
                        INNER JOIN billing_billing_account ba  on ba.id = ua.billing_account_id
                        INNER JOIN account_entity bae  on ba.id = bae.id
                        INNER JOIN ar_customer_account ca  on ca.id = ba.customer_account_id
                        INNER JOIN account_entity cae  on ca.id = cae.id
                        INNER JOIN crm_customer c  on c.id = ca.customer_id
                        INNER JOIN account_entity ce  on c.id = ce.id
                        INNER JOIN crm_seller s  on s.id = c.seller_id
                    where  (  wo.STATUS = 'OPEN'  or (  wo.STATUS = 'TREATED'
                        and EXISTS (  select 1 from billing_rated_transaction rt where wo.rated_transaction_id = rt.id and rt.STATUS = 'OPEN' )  )  )
                    and(  ce.code ilike '%' || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  or ce.code ilike '%'
                        || :SEARCH_CRITERION || '%'  or ce.description ilike '%' || :SEARCH_CRITERION || '%'  or cae.code ilike '%'
                        || :SEARCH_CRITERION || '%'  or cae.description ilike '%' || :SEARCH_CRITERION || '%'  or bae.code ilike '%'
                        || :SEARCH_CRITERION || '%'  or bae.description ilike '%' || :SEARCH_CRITERION || '%'  or uae.code ilike '%'
                        || :SEARCH_CRITERION || '%'  or uae.description ilike '%' || :SEARCH_CRITERION || '%'  )
                    group by ce.code
                        , ce.description
                        , cae.code
                        , cae.description
                        , bae.code
                        , bae.description
                        , uae.code
                        , uae.description order by ce.code
                        , ce.code
                        , cae.code
                        , bae.code
                        , uae.code
			    ]]></column>
            <where>code='UNBILLED_UA_HIERARCHY'</where>
        </update>
    </changeSet>

	<changeSet id="#5486_remove_CF_for_old_RT_Aggregation" author="Mohammed_ELAZZOUZI">
		<sql>delete from ${db.schema.adapted}crm_custom_field_tmpl where applies_to='JobInstance_RatedTransactionsJob' and code in('activateAggregation','globalAggregation','aggregateByDay','aggregationLevel','aggregateByOrder','aggregateByParam1','aggregateByParam2','aggregateByParam3','aggregateByExtraParam','aggregateByUnitAmount')</sql>
	</changeSet>

    <changeSet id="5407_20201030" author="Mohammed_ELAZZOUZI">
    	<update tableName="billing_billing_run">
    	<column name="status" value="INVOICES_GENERATED"/>
    	<where>status='INVOICES_GENERRATED'</where>
    	</update>
    </changeSet>
    <changeSet id="#5610_20201102 - bad dept operation type" author="NabilOUACHI">
        <update tableName="ar_occ_template">
            <column name="occ_category" value="CREDIT"></column>
            <where>code='EXP_WRT'</where>
        </update>
    </changeSet>

    <changeSet id="5657_20201201" author="NabilOuachi">
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueNumeric="-2" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="SendInvoiceJob_billingRun"/>
            <column name="applies_to" value="JobInstance_SendInvoiceJob"/>
            <column name="description" value="Billing Runs"/>
            <column name="field_type" value="ENTITY"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>
            <column name="storage_type" value="LIST"/>
            <column name="gui_position" value=""/>
            <column name="allow_edit" value="1"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>

        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueNumeric="-3" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="invoiceDateRangeFrom"/>
            <column name="description" value="From invoice date EL"/>
            <column name="field_type" value="STRING"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_SendInvoiceJob"/>
            <column name="allow_edit" value="1"/>
            <column name="max_value" value="9223372036854775807"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>

        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueNumeric="-4" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="invoiceDateRangeTo"/>
            <column name="description" value="To invoice date EL"/>
            <column name="field_type" value="STRING"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_SendInvoiceJob"/>
            <column name="allow_edit" value="1"/>
            <column name="max_value" value="9223372036854775807"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
    </changeSet>
    <changeSet id="#5632_20201207_RT_TYPE_DATA" author="NabilOUACHI">
        <update tableName="billing_rated_transaction">
            <column name="type" value="MINIMUM"/>
            <where>code like 'RT_MIN%' and wallet_id is null</where>
        </update>
    </changeSet>

    <changeSet id="#5116_10122020" author="AbdelmounaimAkadid">
     	<insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-30" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="updated" valueDate="${db.current.time}" />
            <column name="code" value="APIv2PermissionsSyncJob" />
            <column name="description" value="APIv2PermissionsSyncJob" />
            <column name="job_category" value="UTILS" />
            <column name="job_template" value="APIv2PermissionsSyncJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="opencell.admin" />
            <column name="timerentity_id" value="null" />
            <column name="uuid" value="APIv2PermissionsSyncJob" />
       	</insert>
	</changeSet>

	<changeSet id="5743_20201215" author="AmineBENAICHA">
        <update tableName="meveo_job_instance" >
            <column name="cf_values"
                    value='{"PurgeMediationDataJob_edrStatusCf":[ { "listString":[ "AGGREGATED", "MEDIATING", "OPEN", "RATED", "REJECTED" ] } ], "PurgeMediationDataJob_firstTransactionDate":[ { "date":null } ], "PurgeMediationDataJob_woStatusCf":[ { "listString":[ "CANCELED", "OPEN", "RERATED", "RESERVED", "SCHEDULED", "TO_RERATE", "TREATED" ] } ], "PurgeMediationDataJob_rtStatusCf":[ { "listString":[ "BILLED", "CANCELED", "OPEN", "REJECTED", "RERATED" ] } ] }'/>
            <where>id = -24</where>
        </update>
    </changeSet>

    <changeSet id="5678_20210214" author="anasseh">
	      <sql><![CDATA[UPDATE ${db.schema.adapted}ar_payment_history set operation_category ='CREDIT' where payment_id is not null ]]> </sql>
	      <sql><![CDATA[UPDATE ${db.schema.adapted}ar_payment_history set operation_category ='DEBIT' where refund_id is not null ]]> </sql>
   </changeSet>


    <changeSet id="#5592-2021-02-02_41" author="ZBariki">
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="2015-03-19 00:04:19.913" />
            <column name="job_category" value="INVOICING" />
            <column name="job_template" value="ArticleMappingJob" />
            <column name="code" value="Article_Mapp_Job_V2" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="timerentity_id" valueNumeric="-1" />
            <column name="uuid" value="Article_Mapp_Job_V2" />
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ArticleMappingJob_billingRun"/>
            <column name="applies_to" value="JobInstance_ArticleMappingJob"/>
            <column name="description" value="Billing Runs"/>
            <column name="field_type" value="ENTITY"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>
            <column name="storage_type" value="LIST"/>
            <column name="allow_edit" value="1"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FirstTransactionDate"/>
            <column name="description" value="First transaction date"/>
            <column name="field_type" value="DATE"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_ArticleMappingJob"/>
            <column name="allow_edit" value="1"/>
            <column name="max_value" value="9223372036854775807"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="LastTransactionDate"/>
            <column name="description" value="Last transaction date"/>
            <column name="field_type" value="DATE"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_ArticleMappingJob"/>
            <column name="allow_edit" value="1"/>
            <column name="max_value" value="9223372036854775807"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
    </changeSet>
    <changeSet id="#5890-2021-02-02_42" author="ZBariki">
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="2015-03-19 00:04:19.913" />
            <column name="job_category" value="INVOICING" />
            <column name="job_template" value="InvoiceLinesJob" />
            <column name="code" value="Invoice_Lines_Job_V2" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="timerentity_id" valueNumeric="-1" />
            <column name="uuid" value="Invoice_Lines_Job_V2" />
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="InvoiceLinesJob_billingRun"/>
            <column name="applies_to" value="JobInstance_InvoiceLinesJob"/>
            <column name="description" value="Billing Runs"/>
            <column name="field_type" value="ENTITY"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>
            <column name="storage_type" value="LIST"/>
            <column name="allow_edit" value="1"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="AggregationOptions"/>
            <column name="description" value="Aggregation options"/>
            <column name="field_type" value="STRING"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_InvoiceLinesJob"/>
            <column name="allow_edit" value="1"/>
            <column name="max_value" value="9223372036854775807"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
    </changeSet>

     <changeSet id="#5916_20210128" author="MohammedELAZZOUZI">
       <insert tableName="billing_seq_invoice">
           <column name="id" valueNumeric="-5" />
           <column name="version" valueNumeric="0" />
           <column name="code" value="ADV" />
           <column name="description" value="Advanced Payment Invoice sequence" />
           <column name="sequence_size" valueNumeric="9" />
           <column name="created" valueDate="2021-02-03 00:00:00.000" />
           <column name="creator" value="OPENCELL.ADMIN" />
       </insert>
       <insert tableName="billing_invoice_type">
           <column name="id" valueNumeric="-5" />
           <column name="version" valueNumeric="0" />
           <column name="created" valueDate="2021-02-03 00:00:00.000" />
           <column name="code" value="ADV" />
           <column name="description" value="Advanced Payment Invoicee" />
           <column name="creator" value="OPENCELL.ADMIN" />
           <column name="invoice_sequence_id" valueNumeric="-5" />
           <column name="occ_template_id" valueNumeric="-25" />
           <column name="occ_templ_negative_id" value="-40" />
           <column name="matching_auto" valueNumeric="0" />
           <column name="prefix_el" value="ADV" />
           <column name="uuid" value="InvoiceType-ADV" />
       </insert>

      </changeSet>

<!-- TODO fix by abdelmounaim-->
<!--    <changeSet id="#5921-2021-02-02_43" author="ZBariki">-->
<!--        <insert tableName="meveo_job_instance">-->
<!--            <column name="id" valueSequenceNext="meveo_job_instance_seq" />-->
<!--            <column name="version" valueNumeric="0" />-->
<!--            <column name="disabled" valueNumeric="1" />-->
<!--            <column name="created" valueDate="2015-03-19 00:04:19.913" />-->
<!--            <column name="job_category" value="INVOICING" />-->
<!--            <column name="job_template" value="InvoicingJobV2" />-->
<!--            <column name="code" value="Invoicing_Job_V2" />-->
<!--            <column name="description" value="Invoicing Job V2"/>-->
<!--            <column name="creator" value="OPENCELL.ADMIN" />-->
<!--            <column name="timerentity_id" valueNumeric="-1" />-->
<!--            <column name="uuid" value="Invoicing_Job_V2" />-->
<!--        </insert>-->
<!--        <insert tableName="crm_custom_field_tmpl">-->
<!--            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />-->
<!--            <column name="version" valueNumeric="0" />-->
<!--            <column name="disabled" valueNumeric="0" />-->
<!--            <column name="created" valueDate="${db.current.time}" />-->
<!--            <column name="code" value="InvoicingJobV2_billingRun"/>-->
<!--            <column name="applies_to" value="JobInstance_InvoicingJobV2"/>-->
<!--            <column name="description" value="Billing Run"/>-->
<!--            <column name="field_type" value="ENTITY"/>-->
<!--            <column name="value_required" value="0"/>-->
<!--            <column name="creator" value="applicationInitializer"/>-->
<!--            <column name="versionable" value="0"/>-->
<!--            <column name="entity_clazz" value="org.meveo.model.billing.BillingRun"/>-->
<!--            <column name="storage_type" value="LIST"/>-->
<!--            <column name="allow_edit" value="1"/>-->
<!--            <column name="hide_on_new" value="0"/>-->
<!--            <column name="inh_as_def_value" value="0"/>-->
<!--            <column name="cf_protectable" value="0"/>-->
<!--        </insert>-->
<!--    </changeSet>

    <changeSet id="#5890-2021-02-05_43" author="ZBARIKI">
        <update tableName="crm_custom_field_tmpl">
            <column name="field_type" value="LIST"/>
            <where>code='AggregationOptions'</where>
        </update>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id"
                    valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'AggregationOptions')"/>
            <column name="listvalues" value="NO_AGGREGATION"/>
            <column name="listvalues_key" value="NO_AGGREGATION"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id"
                    valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'AggregationOptions')"/>
            <column name="listvalues" value="ARTICLE_LABEL"/>
            <column name="listvalues_key" value="ARTICLE_LABEL"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id"
                    valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'AggregationOptions')"/>
            <column name="listvalues" value="UNIT_AMOUNT"/>
            <column name="listvalues_key" value="UNIT_AMOUNT"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id"
                    valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'AggregationOptions')"/>
            <column name="listvalues" value="DATE"/>
            <column name="listvalues_key" value="DATE"/>
        </insert>
    </changeSet>-->

    <changeSet id="#5951_20210209_data" author="AbdelmounaimAkadid">
        <insert tableName="billing_tax_class">
        	<column name="id" value="-3"/>
            <column name="code" value="NO_TAX"/>
            <column name="description_i18n" value='{"FRA":"Pas de TVA","ENG":"No VAT"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_class_no_tax" />
        </insert>
        <insert tableName="billing_tax_class">
        	<column name="id" value="-4"/>
            <column name="code" value="REDUCED"/>
            <column name="description_i18n" value='{"FRA":"TVA réduite","ENG":"Reduced VAT"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_class_reduced" />
        </insert>
        <insert tableName="billing_tax_class">
        	<column name="id" value="-5"/>
            <column name="code" value="NORMAL"/>
            <column name="description_i18n" value='{"FRA":"TVA normale","ENG":"Normal VAT"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_class_normal" />
        </insert>

        <insert tableName="billing_tax_category">
        	<column name="id" value="-2"/>
            <column name="code" value="EXEMPTED"/>
            <column name="description_i18n" value='{"FRA":"Exempté","ENG":"Exempted"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_category_exempted" />
        </insert>
        <insert tableName="billing_tax_category">
        	<column name="id" value="-3"/>
            <column name="code" value="REGULAR"/>
            <column name="description_i18n" value='{"FRA":"Standard","ENG":"Regular"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_category_regular" />
        </insert>

        <update tableName="billing_tax">
            <column name="tax_percentage" value="0"/>
            <column name="accounting_code_id" value="-18"/>
            <column name="description_i18n" value='{"FRA":"TVA 0%","ENG":"VAT 0%"}'/>
            <where>code='TAX_00'</where>
        </update>
        <insert tableName="billing_tax">
        	<column name="id" value="-4"/>
            <column name="code" value="TAX_10"/>
            <column name="tax_percentage" value="10"/>
            <column name="accounting_code_id" value="-18"/>
            <column name="description_i18n" value='{"FRA":"TVA 10%","ENG":"VAT 10%"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_tax_10" />
        </insert>
        <insert tableName="billing_tax">
        	<column name="id" value="-5"/>
            <column name="code" value="TAX_20"/>
            <column name="tax_percentage" value="20"/>
            <column name="accounting_code_id" value="-18"/>
            <column name="description_i18n" value='{"FRA":"TVA 20%","ENG":"VAT 20%"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_tax_20" />
        </insert>

        <insert tableName="billing_tax_mapping">
            <column name="id" value='-11'/>
            <column name="tax_category_id" value="-2"/>
            <column name="tax_id" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
		<insert tableName="billing_tax_mapping">
		    <column name="id" value='-12'/>
            <column name="tax_class_id" value="-3"/>
            <column name="tax_id" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
        <insert tableName="billing_tax_mapping">
        	<column name="id" value='-13'/>
            <column name="tax_category_id" value="-3"/>
            <column name="tax_class_id" value="-4"/>
            <column name="tax_id" value='-4'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
        <insert tableName="billing_tax_mapping">
        	<column name="id" value='-14'/>
            <column name="tax_category_id" value="-3"/>
            <column name="tax_class_id" value="-5"/>
            <column name="tax_id" value='-5'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>

        <insert tableName="billing_invoice_cat">
        	<column name="id" value='-3'/>
            <column name="code" value="ICAT_DEFAULT"/>
            <column name="description_i18n" value='{"FRA":"Rubrique facture par défaut","ENG":"Default invoice category"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_invoice_cat_icat_default" />
        </insert>
        <insert tableName="billing_invoice_sub_cat">
        	<column name="id" value='-3'/>
        	<column name="invoice_category_id" value='-3'/>
        	<column name="version" valueNumeric="0" />
            <column name="code" value="ISCAT_DEFAULT"/>
            <column name="description_i18n" value='{"FRA":"Sous-rubrique facture par défaut","ENG":"Default invoice sub-category"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_invoice_cat_iscat_default" />
        </insert>

        <insert tableName="billing_accounting_article">
        	<column name="id" value='-1'/>
        	<column name="version" valueNumeric="0" />
        	<column name="code" value="ADV-STD"/>
        	<column name="tax_class_id" value="-1"/>
            <column name="invoice_sub_category_id" value="-3"/>
            <column name="description_i18n" value='{"FRA":"Acompte","ENG":"Advance payment"}'/>
            <column name="description" value='Advance payment'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_accounting_article-ADV-STD" />
        </insert>
        <insert tableName="billing_accounting_article">
        	<column name="id" value='-2'/>
        	<column name="version" valueNumeric="0" />
        	<column name="code" value="DISC-STD"/>
            <column name="tax_class_id" value="-5"/>
            <column name="invoice_sub_category_id" value="-3"/>
            <column name="description_i18n" value='{"FRA":"Remise de pied de facture","ENG":"Invoice discount"}'/>
            <column name="description" value='Invoice discount'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_accounting_article-DISC-STD" />
        </insert>
        <insert tableName="billing_accounting_article">
        	<column name="id" value='-3'/>
        	<column name="version" valueNumeric="0" />
        	<column name="code" value="ART-STD"/>
            <column name="tax_class_id" value="-5"/>
            <column name="invoice_sub_category_id" value="-3"/>
            <column name="description_i18n" value='{"FRA":"Article standard","ENG":"Standard article"}'/>
            <column name="description" value='Standard article'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_accounting_article-ART-STD" />
        </insert>
        <insert tableName="billing_accounting_article">
            <column name="id" value='-4'/>
            <column name="version" valueNumeric="0"/>
            <column name="code" value="MIN-STD"/>
            <column name="tax_class_id" value="-5"/>
            <column name="invoice_sub_category_id" value="-3"/>
            <column name="description_i18n" value='{"FRA":"Complément du minimum de facturation","ENG":"Invoice minimum complement"}'/>
            <column name="description" value='Invoice minimum complement'/>
            <column name="created" valueDate="${db.current.time}"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="uuid" value="billing_accounting_article-MIN-STD"/>
        </insert>

    </changeSet>
    <changeSet id="#5946_08032021" author="KhalidHORRI">
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-31"/>
            <column name="version" valueNumeric="0"/>
            <column name="disabled" valueNumeric="0"/>
            <column name="created" valueDate="2021-03-08 00:04:19.913"/>
            <column name="job_category" value="UTILS"/>
            <column name="job_template" value="DiscountPlanStatusJob"/>
            <column name="code" value="DiscountPlanStatusJob"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
            <column name="timerentity_id" valueNumeric="-3"/>
            <column name="uuid" value="Discount_Plan_Status_Job"/>
            <column name="cf_values" value='{"waitingMillis":[{"long":0}],"nbRuns":[{"long":-1}]}'/>
        </insert>
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-32"/>
            <column name="version" valueNumeric="0"/>
            <column name="disabled" valueNumeric="0"/>
            <column name="created" valueDate="2021-03-08 00:04:19.913"/>
            <column name="job_category" value="UTILS"/>
            <column name="job_template" value="DiscountPlanInstanceStatusJob"/>
            <column name="code" value="DiscountPlanInstanceStatusJob"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
            <column name="timerentity_id" valueNumeric="-3"/>
            <column name="uuid" value="Discount_Plan_Instance_Status_Job"/>
            <column name="cf_values" value='{"waitingMillis":[{"long":0}],"nbRuns":[{"long":-1}]}'/>
        </insert>
    </changeSet>

    <changeSet author="ZBARIKI" id="#6048_20210326">
        <sql dbms="postgresql"><![CDATA[UPDATE ${db.schema.adapted}meveo_script_instance SET
            script = 'package org.meveo.service.script;

import static org.apache.commons.lang3.StringUtils.isNotBlank;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections4.MapUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.model.billing.SubCategoryInvoiceAgregate;
import org.meveo.model.billing.WalletInstance;
import org.meveo.model.crm.Customer;
import org.meveo.service.base.BusinessEntityService;
import org.meveo.service.billing.impl.ChargeInstanceService;
import org.meveo.service.billing.impl.CounterInstanceService;
import org.meveo.service.billing.impl.CounterPeriodService;
import org.meveo.service.billing.impl.EdrService;
import org.meveo.service.billing.impl.InvoiceService;
import org.meveo.service.billing.impl.ProductInstanceService;
import org.meveo.service.billing.impl.RatedTransactionService;
import org.meveo.service.billing.impl.RejectedBillingAccountService;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.billing.impl.WalletOperationService;
import org.meveo.service.billing.impl.WalletService;
import org.meveo.service.crm.impl.CustomerService;
import org.meveo.service.medina.impl.AccessService;
import org.meveo.service.order.OrderItemService;
import org.meveo.service.payments.impl.AccountOperationService;
import org.meveo.service.payments.impl.MatchingAmountService;
import org.meveo.service.payments.impl.PaymentHistoryService;
import org.meveo.service.script.Script;

/**
 *
 * @author Said Ramli
 */
@SuppressWarnings({ "unchecked", "unused" })
public class DeleteCustomersScript extends Script {

    private final AccountOperationService accountOperationService = (AccountOperationService) getServiceInterface(
            AccountOperationService.class.getSimpleName());
    private final CustomerService customerService = (CustomerService) getServiceInterface(
            CustomerService.class.getSimpleName());
    private final InvoiceService invoiceService = (InvoiceService) getServiceInterface(
            InvoiceService.class.getSimpleName());
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(
            SubscriptionService.class.getSimpleName());
    private final RatedTransactionService ratedTransactionService = (RatedTransactionService) getServiceInterface(
            RatedTransactionService.class.getSimpleName());
    private final WalletService walletService = (WalletService) getServiceInterface(
            WalletService.class.getSimpleName());
    private final RejectedBillingAccountService rejectedBillingAccountService = (RejectedBillingAccountService) getServiceInterface(
            RejectedBillingAccountService.class.getSimpleName());
    private final CounterInstanceService counterInstanceService = (CounterInstanceService) getServiceInterface(
            CounterInstanceService.class.getSimpleName());
    private final CounterPeriodService counterPeriodService = (CounterPeriodService) getServiceInterface(
            CounterPeriodService.class.getSimpleName());
    private final OrderItemService orderItemService = (OrderItemService) getServiceInterface(
            OrderItemService.class.getSimpleName());
    private final ProductInstanceService productInstanceService = (ProductInstanceService) getServiceInterface(
            ProductInstanceService.class.getSimpleName());
    private final BusinessEntityService businessEntityService = (BusinessEntityService) getServiceInterface(
            BusinessEntityService.class.getSimpleName());
    private final WalletOperationService walletOperationService = (WalletOperationService) getServiceInterface(
            WalletOperationService.class.getSimpleName());
    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface(
            ServiceInstanceService.class.getSimpleName());

    private final PaymentHistoryService paymentHistoryService = (PaymentHistoryService) getServiceInterface(
            PaymentHistoryService.class.getSimpleName());

    private final EdrService edrService = (EdrService) getServiceInterface(EdrService.class.getSimpleName());

    @SuppressWarnings("rawtypes")
    private final ChargeInstanceService chargeInstanceService = (ChargeInstanceService) getServiceInterface(
            ChargeInstanceService.class.getSimpleName());

    private static final List<String> noCheckAllowedValues = Arrays.asList("0", "1");

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {

        log.debug(" >>> execute {} ", methodContext.entrySet());

        try {

            Map<String, String> record = (Map<String, String>) methodContext.get("RECORD");
            if (MapUtils.isEmpty(record)) {
                throw new BusinessException(String.format("Parameter RECORD is missing"));
            }

            final String customerCode = record.get("customerCode");
            Customer customer = customerService.findByCode(customerCode);
            if (customer == null) {
                throw new BusinessException(String.format("No customer found having code = %s ", customerCode));
            }

            String noCheckVal = record.get("noCheck");
            if (isNotBlank(noCheckVal) && !noCheckAllowedValues.contains(noCheckVal)) {
                throw new BusinessException(
                        String.format("Invalid ''noCheck'' value = %s , allowed values are [0,1]", noCheckVal));
            }
            boolean noCheck = "1".contentEquals(noCheckVal);

            if (!noCheck) {
                // If noCheck is 0 then the following conditions must be met in order to allow
                // deletion:
                // No unmatched AO
                // No open EDR/WO/RT

                this.checkUnmatchedAOs(customer);
                this.checkOpenEDRs(customer);
                this.checkOpenWOs(customer);
                this.checkOpenRTs(customer);
            }

            this.removeCustomerHirarchy(customer);

        } catch (BusinessException be) {
            throw be;
        } catch (Exception e) {
            log.error(" Error executing DeleteCustomersScript ", e);
            throw new BusinessException(e.getMessage());
        }
    }

    private void checkOpenEDRs(Customer customer) throws BusinessException {
        try {
            log.debug(" Start checkOpenEDRs for customer = {} ", customer);
            String query = "select count(edr.id) from EDR edr where edr.status = ''OPEN'' and edr.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> params = new HashMap();
            params.put("customerId", customer.getId());
            Object count = edrService.executeSelectQuery(query,params);
            log.debug(" count of open EDRs = {} ", count);
            log.debug(" End checkOpenEDRs for customer = {} ", customer);

            if (((Long) count).intValue() > 0) {
                throw new BusinessException(" Customer has [" + count + "] open EDRs ");
            }
        } catch (Exception e) {
            log.error(" Error on checkOpenEDRs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void checkOpenWOs(Customer customer) throws BusinessException {
        try {
            log.debug(" Start checkOpenWOs for customer = {} ", customer);
            String query = "select count(wo.id) from WalletOperation wo where wo.status = ''OPEN'' and wo.chargeInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId ";
            final WalletOperationService walletOperationService = (WalletOperationService) getServiceInterface(
                    WalletOperationService.class.getSimpleName());

            Map<String, Object> params = new HashMap();
            params.put("customerId", customer.getId());
            Object count = walletOperationService.executeSelectQuery(query, params);
            log.debug(" count of open WOs = {} ", count);
            log.debug(" End checkOpenWOs for customer = {} ", customer);

            if (((Long) count).intValue() > 0) {
                throw new BusinessException(" Customer has [" + count + "] open WOs ");
            }
        } catch (Exception e) {
            log.error(" Error on checkOpenWOs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void checkOpenRTs(Customer customer) throws BusinessException {
        try {

            log.debug(" Start checkOpenRTs for customer = {} ", customer);
            String query = "select count(rt.id) from RatedTransaction rt where rt.status = ''OPEN'' and rt.billingAccount.customerAccount.customer.id =:customerId ";
            Map<String, Object> params = new HashMap();
            params.put("customerId", customer.getId());

            Object count = this.ratedTransactionService.executeSelectQuery(query, params);
            log.debug(" count of open RTs = {} ", count);
            log.debug(" End checkOpenRTs for customer = {} ", customer);

            if (((Long) count).intValue() > 0) {
                throw new BusinessException(" Customer has [" + count + "] open RTs ");
            }
        } catch (Exception e) {
            log.error(" Error on checkOpenRTs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void checkUnmatchedAOs(Customer customer) throws BusinessException {
        try {

            log.debug(" Start checkUnmatchedAOs for customer = {} ", customer);
            String query = "select count(ao.id) from AccountOperation ao where ao.matchingStatus = ''O'' and ao.customerAccount.customer.id =:customerId ";
            final AccountOperationService accountOperationService = (AccountOperationService) getServiceInterface(
                    AccountOperationService.class.getSimpleName());
            Map<String, Object> params = new HashMap();
            params.put("customerId", customer.getId());
            Object count = accountOperationService.executeSelectQuery(query, params);
            log.debug(" count of unmatched AOs = {} ", count);
            log.debug(" End checkUnmatchedAOs for customer = {} ", customer);

            if (((Long) count).intValue() > 0) {
                throw new BusinessException(" Customer has [" + count + "] unmatched AOs ");
            }
        } catch (Exception e) {
            log.error(" Error on checkUnmatchedAOs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void removeCustomerHirarchy(Customer customer) throws BusinessException {
        log.debug(" Start removeCustomerHirarchy for customer = {} ", customer);

        //
        // A workaround for #4134 , no need for this method if #4134 is fixed (only
        // 6.1.X is concerned)!
        this.nullifyAOsSeller(customer);

        this.removeWalletOperations(customer);
        this.removeChargeInstances(customer);
        // the relationship [SubCategoryInvoiceAgregate <=> WalletInstance] should be broke fisrt
        this.nullifySubCategoryInvoiceAgregatesWallet(customer);
        this.removeWalletInstances(customer);

        this.removePaymentHistory(customer);
        this.removeRatedTransactions(customer);
        this.removeInvoices(customer);


        this.removeServiceInstances(customer);
        this.removeAccess(customer);
        this.removeEDRs(customer);
        this.removeSubscriptions(customer);

        this.removeRejectedBAs(customer);

        this.removeCounterPeriods(customer);
        this.removeCounterInstances(customer);
        this.removeOrderItems(customer);
        this.removeProductInstances(customer);
        this.removeMatchingAmounts(customer);

        this.customerService.remove(customer);

        log.debug(" End removeCustomerHirarchy for customer = {} ", customer);
    }

    private void removeEDRs(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeEDRs for customer = {} ", customer);

            String query = "select edr.id from EDR edr where edr.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object result = edrService.executeSelectQuery(query, queryParams);

            Collection<Long> ids = safe(result != null ? ((List<Long>) result) : null);
            log.debug(" {} EDR to delete ", ids.size());

            for (Long id : ids) {
                edrService.remove(id);
            }

            log.debug(" End removeEDRs for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeEDRs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void removeMatchingAmounts(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeMatchingAmounts for customer = {} ", customer);

            final MatchingAmountService matchingAmountService = (MatchingAmountService) getServiceInterface(MatchingAmountService.class.getSimpleName());
            final String query = "select ma.id from MatchingAmount ma where ma.accountOperation.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object result = matchingAmountService.executeSelectQuery(query, queryParams);

            Collection<Long> ids = safe(result != null ? ((List<Long>) result) : null);
            log.debug(" {} MatchingAmount to delete ", ids.size());

            for (Long id : ids) {
                matchingAmountService.remove(id);
            }

            log.debug(" End removeMatchingAmounts for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeMatchingAmounts : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void removeAccess(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeAccess for customer = {} ", customer);

            final AccessService accessService = (AccessService) getServiceInterface(
                    AccessService.class.getSimpleName());

            final String query = "select a.id from Access a where a.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object result = accessService.executeSelectQuery(query, queryParams);

            Collection<Long> ids = safe(result != null ? ((List<Long>) result) : null);
            log.debug(" {} Access to delete ", ids.size());

            for (Long id : ids) {
                accessService.remove(id);
            }

            log.debug(" End removeAccess for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeAccess : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void removeServiceInstances(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeServiceInstances for customer = {} ", customer);

            Collection<Long> ids = safe(this.findServiceInstances(customer));
            log.debug(" {} ServiceInstance to delete ", ids.size());

            for (Long id : ids) {
                this.serviceInstanceService.remove(id);
            }

            log.debug(" End removeServiceInstances for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeServiceInstances : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findServiceInstances(Customer customer) {
        try {
            log.debug(" findServiceInstances for customer={} ", customer);
            String query = "select si.id from ServiceInstance si where si.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.serviceInstanceService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findServiceInstances : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeWalletOperations(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeWalletOperations for customer = {} ", customer);

            Collection<Long> ids = safe(this.findWalletOperations(customer));
            log.debug(" {} WalletOperation to delete ", ids.size());

            for (Long id : ids) {
                this.walletOperationService.remove(id);
            }

            log.debug(" End removeWalletOperations for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeWalletOperations : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findWalletOperations(Customer customer) {
        try {
            log.debug(" findWalletOperations for customer={} ", customer);
            String query = "select wo.id from WalletOperation wo where wo.chargeInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.walletOperationService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findWalletOperations : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    /**
     * using Sub-queries to Resolve Error: ERROR: syntax error at or near "cross"
     *
     * @param customer
     * @throws BusinessException
     */
    private void removePaymentHistory(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removePaymentHistory for customer = {} ", customer);
            String query = "select ph2.id from PaymentHistory ph2 where ph2.customerCode=:customerCode";

            Map<String, Object> params = new HashMap();
            params.put("customerCode", customer.getCode());
            List<Long> ids = (List<Long>) this.paymentHistoryService.executeSelectQuery(query, params);

            for (Long id : ids) {
                this.paymentHistoryService.remove(id);

            }
            log.debug(" {} PaymentHistory to delete ", ids.size());
            log.debug(" End removePaymentHistory for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removePaymentHistory : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    /**
     * using Sub-queries to Resolve Error: ERROR: syntax error at or near "cross"
     *
     * @param customer
     * @throws BusinessException
     */
    private void nullifyAOsSeller(Customer customer) throws BusinessException {
        try {
            log.debug(" Start nullifyAOsSeller for customer = {} ", customer);

            String query = "select ao2.id from AccountOperation ao2 where ao2.customerAccount.customer.id =:customerId ";

            Map<String, Object> params = new HashMap();
            params.put("customerId", customer.getId());
            List<Long> ids = (List<Long>) this.accountOperationService.executeSelectQuery(query, params);
            for (Long id : ids) {
                accountOperationService.remove(id);
            }

            log.debug(" seller to nullify for {} AOs ", ids.size());
            log.debug(" End nullifyAOsSeller for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on nullifyAOsSeller : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void nullifySubCategoryInvoiceAgregatesWallet(Customer customer) throws BusinessException {
        try {
            log.debug(" Start nullifySubCategoryInvoiceAgregatesWallet for customer = {} ", customer);
            String query = "select subCatIn.id from SubCategoryInvoiceAgregate subCatIn where subCatIn.wallet.userAccount.billingAccount.customerAccount.customer.id =:customerId";
            Map<String, Object> params = new HashMap<>();
            params.put("customerId", customer.getId());

            List<Long> ids = (List<Long>) this.businessEntityService.executeSelectQuery(query, params);
            for (Long id: ids) {
                this.businessEntityService.remove(id);
            }

            log.debug(" wallet to nullify for {} SubCategoryInvoiceAgregate ", ids.size());
            log.debug(" End nullifySubCategoryInvoiceAgregatesWallet for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on nullifySubCategoryInvoiceAgregatesWallet : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }

    }


    private void removeProductInstances(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeProductInstances for customer = {} ", customer);

            Collection<Long> ids = safe(this.findProductInstances(customer));
            log.debug(" {} ProductInstance to delete ", ids.size());

            for (Long id : ids) {
                this.productInstanceService.remove(id);
            }

            log.debug(" End removeProductInstances for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeProductInstances : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findProductInstances(Customer customer) {
        try {
            log.debug(" findProductInstances for customer={} ", customer);
            String query = "select p.id from ProductInstance p where p.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.productInstanceService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findProductInstances : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeOrderItems(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeOrderItem for customer = {} ", customer);

            Collection<Long> ids = safe(this.findOrderItems(customer));
            log.debug(" {} OrderItem to delete ", ids.size());

            for (Long id : ids) {
                this.orderItemService.remove(id);
            }

            log.debug(" End removeOrderItem for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeOrderItem : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findOrderItems(Customer customer) {
        try {
            log.debug(" findOrderItems for customer={} ", customer);
            String query = "select p.id from OrderItem p where p.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.orderItemService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findCounterPeriods : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeCounterPeriods(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeCounterPeriods for customer = {} ", customer);

            Collection<Long> ids = safe(this.findCounterPeriods(customer));
            log.debug(" {} CounterPeriod to delete ", ids.size());

            for (Long id : ids) {
                this.counterPeriodService.remove(id);
            }

            log.debug(" End removeCounterPeriods for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeCounterPeriods : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findCounterPeriods(Customer customer) {
        try {
            log.debug(" findCounterPeriods for customer={} ", customer);
            String query = "select c.id from CounterPeriod c where c.counterInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.counterPeriodService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findCounterPeriods : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeCounterInstances(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeCounterInstances for customer = {} ", customer);

            Collection<Long> ids = safe(this.findCounterInstances(customer));
            log.debug(" {} CounterInstance to delete ", ids.size());

            for (Long id : ids) {
                this.counterInstanceService.remove(id);
            }

            log.debug(" End removeCounterInstances for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeCounterInstances : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findCounterInstances(Customer customer) {
        try {
            log.debug(" findCounterInstances for customer={} ", customer);
            String query = "select c.id from CounterInstance c where c.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.counterInstanceService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findCounterInstances : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeRejectedBAs(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeRejectedBAs for customer = {} ", customer);

            Collection<Long> ids = safe(this.findRejectedBillingAccounts(customer));
            log.debug(" {} RejectedBillingAccount to delete ", ids.size());

            for (Long id : ids) {
                this.rejectedBillingAccountService.remove(id);
            }

            log.debug(" End removeRejectedBAs for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeRejectedBAs : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findRejectedBillingAccounts(Customer customer) {
        try {
            log.debug(" findRejectedBillingAccounts for customer={} ", customer);
            String query = "select rba.id from RejectedBillingAccount rba where rba.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.rejectedBillingAccountService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findRejectedBillingAccounts : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeInvoices(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeInvoices for customer = {} ", customer);

            Collection<Long> ids = safe(this.findInvoicesIds(customer));
            log.debug(" {} Invoices to delete ", ids.size());

            for (Long id : ids) {
                this.invoiceService.remove(id);
            }

            log.debug(" End removeInvoices for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeInvoices : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private void removeWalletInstances(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeWalletInstances for customer = {} ", customer);

            Collection<Long> ids = safe(this.findWalletInstances(customer));
            log.debug(" {} WalletInstance to delete ", ids.size());

            for (Long id : ids) {
                // a workaround for #4132
                WalletInstance wallet = this.walletService.findById(id);
                wallet.getUserAccount().setWallet(null);

                this.walletService.remove(id);
            }

            log.debug(" End removeWalletInstances for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeWalletInstances : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findWalletInstances(Customer customer) {
        try {
            log.debug(" findWalletInstances for customer={} ", customer);
            String query = "select wi.id from WalletInstance wi where wi.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.walletService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findWalletInstances : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeRatedTransactions(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeRatedTransactions for customer = {} ", customer);

            Collection<Long> ids = safe(this.findRatedTransactions(customer));
            log.debug(" {} RTs to delete ", ids.size());

            for (Long id : ids) {
                this.ratedTransactionService.remove(id);
            }

            log.debug(" End removeRatedTransactions for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeRatedTransactions : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }

    }

    private List<Long> findRatedTransactions(Customer customer) {
        try {
            log.debug(" findRatedTransactions for customer={} ", customer);
            String query = "select rt.id from RatedTransaction rt where rt.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.ratedTransactionService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findRatedTransactions : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeChargeInstances(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeChargeInstances for customer = {} ", customer);

            Collection<Long> ids = safe(this.findChargeInstances(customer));
            log.debug(" {} ChargeInstance to delete ", ids.size());
            for (Long ciId : ids) {
                this.chargeInstanceService.remove(ciId);
            }
            log.debug(" End removeChargeInstances for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeChargeInstances : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findChargeInstances(Customer customer) {
        try {
            log.debug(" findChargeInstances for customer={} ", customer);
            String query = "select ci.id from ChargeInstance ci where ci.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customerId", customer.getId());
            Object ids = this.chargeInstanceService.executeSelectQuery(query, queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findChargeInstances : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private void removeSubscriptions(Customer customer) throws BusinessException {
        try {
            log.debug(" Start removeSubscriptions for customer = {} ", customer);
            Collection<Long> ids = safe(this.findSubscriptions(customer));
            log.debug(" {} Subscription to delete ", ids.size());

            for (Long subscriptionId : ids) {
                this.subscriptionService.remove(subscriptionId);
            }
            log.debug(" End removeSubscriptions for customer = {} ", customer);
        } catch (Exception e) {
            log.error(" Error on removeSubscriptions : [{}] ", e.getMessage(), e);
            throw new BusinessException(e);
        }
    }

    private List<Long> findSubscriptions(Customer customer) {
        try {
            log.debug(" findSubscriptions for customer={} ", customer);
            StringBuffer query = new StringBuffer(
                    "select s.id from Subscription s where s.userAccount.billingAccount.customerAccount.customer =:customer ");

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customer", customer);
            Object ids = this.subscriptionService.executeSelectQuery(query.toString(), queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on findSubscriptions : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private List<Long> findInvoicesIds(Customer customer) {
        try {
            log.debug(" findInvoicesIds for customer={} ", customer);
            StringBuffer query = new StringBuffer(
                    "select inv.id from Invoice inv where inv.billingAccount.customerAccount.customer =:customer ");

            Map<String, Object> queryParams = new HashMap<>();
            queryParams.put("customer", customer);
            Object ids = this.invoiceService.executeSelectQuery(query.toString(), queryParams);

            return ids != null ? ((List<Long>) ids) : null;
        } catch (Exception e) {
            log.error(" Error on getSubscription : [{}] ", e.getMessage(), e);
            return null;
        }
    }

    private <T> Collection<T> safe(Collection<T> collection) {
        return collection == null ? Collections.EMPTY_LIST : collection;
    }
}'
            WHERE code = 'org.meveo.service.script.DeleteCustomersScript';
           ]]>
        </sql>
    </changeSet>

	<changeSet author="AmineBENAICHA" id="#6048_20210611">
		<sql>
<![CDATA[INSERT INTO ${db.schema.adapted}meveo_script_instance (id, version, disabled, created, code, description, src_type, script) VALUES (-30, 0, 0, ${db.current.time}, 'org.meveo.service.script.ServiceTemplateToProductScript', 'Migration ServiceTemplate To Product', 'JAVA', 'package org.meveo.service.script;

import java.util.Calendar;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.util.pagination.PaginationConfiguration;
import org.meveo.model.article.AccountingArticle;
import org.meveo.model.article.ArticleMapping;
import org.meveo.model.article.ArticleMappingLine;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.catalog.OfferTemplate;
import org.meveo.model.catalog.ProductChargeTemplateMapping;
import org.meveo.model.catalog.ServiceChargeTemplate;
import org.meveo.model.catalog.ServiceTemplate;
import org.meveo.model.cpq.Product;
import org.meveo.model.cpq.ProductVersion;
import org.meveo.model.cpq.enums.VersionStatusEnum;
import org.meveo.model.cpq.offer.OfferComponent;
import org.meveo.model.tax.TaxClass;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.article.AccountingArticleService;
import org.meveo.service.billing.impl.article.ArticleMappingLineService;
import org.meveo.service.billing.impl.article.ArticleMappingService;
import org.meveo.service.catalog.impl.OfferTemplateService;
import org.meveo.service.catalog.impl.ServiceTemplateService;
import org.meveo.service.cpq.ProductService;
import org.meveo.service.cpq.ProductVersionService;
import org.meveo.service.tax.TaxClassService;
import  org.meveo.api.dto.response.PagingAndFiltering.SortOrder;

public class ServiceTemplateToProductScript extends Script {

    public static final String DEFAULT_TAX_CLASS_CODE = "CMP_DATA";
    public static final long ARTICLE_MAPPING_ID = 1L;
    private static final Integer PAGE_COUNT = 100;
    private ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface(ServiceInstanceService.class.getSimpleName());
    private ProductService productService = (ProductService) getServiceInterface(ProductService.class.getSimpleName());
    private ProductVersionService productVersionService = (ProductVersionService) getServiceInterface(ProductVersionService.class.getSimpleName());
    private OfferTemplateService offerTemplateService= (OfferTemplateService) getServiceInterface(OfferTemplateService.class.getSimpleName());
    private AccountingArticleService accountingArticleService = (AccountingArticleService) getServiceInterface(AccountingArticleService.class.getSimpleName());
    private ArticleMappingService articleMappingService = (ArticleMappingService) getServiceInterface(ArticleMappingService.class.getSimpleName());
    private ArticleMappingLineService articleMappingLineService = (ArticleMappingLineService) getServiceInterface(ArticleMappingLineService.class.getSimpleName());
    private ServiceTemplateService serviceTemplateService = (ServiceTemplateService) getServiceInterface(ServiceTemplateService.class.getSimpleName());
    private TaxClassService taxClassService = (TaxClassService) getServiceInterface(TaxClassService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        List<ServiceTemplate> serviceTemplates = (List<ServiceTemplate>) methodContext.get("SERVICE_TEMPLATE");

        if(serviceTemplates != null && !serviceTemplates.isEmpty()){
            serviceTemplates.forEach(this::map);
        } else {

            long count = serviceTemplateService.count(new PaginationConfiguration("id", SortOrder.ASCENDING));

            if (PAGE_COUNT < count) {
                serviceTemplateService.list(new PaginationConfiguration(null, null))
                        .forEach(this::map);
            } else {
                for (int index = 0; index < count; index = index + PAGE_COUNT) {
                    serviceTemplateService.list(new PaginationConfiguration(index, PAGE_COUNT, null, null, null, "id", SortOrder.ASCENDING))
                            .forEach(this::map);
                }
            }
        }

    }

    public Product map(ServiceTemplate serviceTemplate) {
        Product product = createProduct(serviceTemplate);
        createArticle(product);

        ProductVersion productVersion = createProductVersion(product);

        List<ServiceInstance> serviceInstances = serviceInstanceService.findByServiceTemplate(serviceTemplate);

        serviceInstances.forEach(serviceInstance -> {

            serviceInstance.setProductVersion(productVersion);
            serviceInstance.setServiceTemplate(null);
            serviceInstanceService.update(serviceInstance);

            OfferTemplate offer = serviceInstance.getSubscription().getOffer();
            OfferComponent offerComponent = new OfferComponent();
            offerComponent.setProduct(product);
            offerComponent.setOfferTemplate(offer);
            offer.getOfferComponents().add(offerComponent);
            offer.getOfferServiceTemplates().removeIf(o -> o.getServiceTemplate().getId().equals(serviceTemplate.getId()));
            offerTemplateService.update(offer);
        });

        return product;
    }

    private void createArticle(Product product) {
        product.getProductCharges().stream()
                .map(pc -> pc.getChargeTemplate())
                .forEach(chargeTemplate -> {
                    AccountingArticle accountingArticle;
                    List<AccountingArticle> accountingArticles = accountingArticleService.findByTaxClassAndSubCategory(chargeTemplate.getTaxClass(), chargeTemplate.getInvoiceSubCategory());
                    if(accountingArticles.isEmpty()){
                        TaxClass taxClass = taxClassService.findByCode(DEFAULT_TAX_CLASS_CODE);
                        accountingArticle = new AccountingArticle(UUID.randomUUID().toString(), "Migration Accounting article", taxClass, chargeTemplate.getInvoiceSubCategory());
                        accountingArticleService.create(accountingArticle);
                    }else {
                        accountingArticle = accountingArticles.get(0);
                    }
                    ArticleMapping defaultArticleMapping = articleMappingService.findById(ARTICLE_MAPPING_ID);
                    ArticleMappingLine articleMappingLine = new ArticleMappingLine();
                    articleMappingLine.setChargeTemplate(chargeTemplate);
                    articleMappingLine.setArticleMapping(defaultArticleMapping);
                    articleMappingLine.setProduct(product);
                    articleMappingLine.setAccountingArticle(accountingArticle);
                    articleMappingLineService.create(articleMappingLine);
                });

    }

    private Product createProduct(ServiceTemplate serviceTemplate) {
        Product product = new Product();
        product.setCode(serviceTemplate.getCode());
        product.setDescription(serviceTemplate.getDescription());
        List<ProductChargeTemplateMapping> productCharges = getProductCharges(serviceTemplate);
        product.setProductCharges(productCharges);
        product.setCfValues(serviceTemplate.getCfValues());
        product.setCfAccumulatedValues(serviceTemplate.getCfAccumulatedValues());
        product.setDisabled(serviceTemplate.isDisabled());
        productService.create(product);
        return product;
    }

    private ProductVersion createProductVersion(Product product) {
        ProductVersion productVersion= new ProductVersion();
        productVersion.setProduct(product);
        productVersion.setShortDescription(product.getDescription());
        productVersion.setStatus(VersionStatusEnum.PUBLISHED);
        productVersion.setStatusDate(Calendar.getInstance().getTime());
        productVersionService.create(productVersion);
        return productVersion;
    }

    private ProductChargeTemplateMapping mapToProductChargeTemplate(ServiceChargeTemplate serviceCharge) {
        ProductChargeTemplateMapping productChargeTemplateMapping = new ProductChargeTemplateMapping();
        productChargeTemplateMapping.setChargeTemplate(serviceCharge.getChargeTemplate());
        return productChargeTemplateMapping;
    }

    private List<ProductChargeTemplateMapping> getProductCharges(ServiceTemplate serviceTemplate) {
        List<ProductChargeTemplateMapping> productCharges = serviceTemplate.getServiceSubscriptionCharges()
                .stream()
                .map(this::mapToProductChargeTemplate)
                .collect(Collectors.toList());

        productCharges.addAll(
                serviceTemplate.getServiceRecurringCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );

        productCharges.addAll(
                serviceTemplate.getServiceTerminationCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );

        productCharges.addAll(
                serviceTemplate.getServiceUsageCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );
        return productCharges;
    }
}');]]>
			</sql>

			<insert tableName="meveo_job_instance">
	            <column name="id" valueNumeric="-40" />
	            <column name="version" valueNumeric="0" />
	            <column name="disabled" valueNumeric="0" />
	            <column name="created" valueDate="${db.current.time}" />
	            <column name="updated" valueDate="null" />
	            <column name="uuid" value="ServiceTemplateToProductJob" />
	            <column name="code" value="ServiceTemplateToProductJob" />
	            <column name="description" value="ServiceTemplateToProductJob" />
	            <column name="job_category" value="MEDIATION" />
	            <column name="job_template" value="ScriptingJob" />
	            <column name="parametres" valueNumeric="null" />
	            <column name="creator" value="opencell.admin" />
	            <column name="updater" value="null" />
	            <column name="timerentity_id" value="null" />
	            <column name="cf_values">
	            	<![CDATA[
	            		{"ScriptingJob_script":[{"entity":{"classname":"org.meveo.model.scripts.ScriptInstance","code":"org.meveo.service.script.ServiceTemplateToProductScript","id":-30}}],"ScriptingJob_TransactionType":[{"string":"REQUIRES_NEW"}]}
	            	]]>
				</column>
	       	</insert>
	</changeSet>

    <changeSet id="INTRD-263_20210716" author="ZBariki">
        <insert tableName="com_message_template">
            <column name="media" value="EMAIL" />
            <column name="id" valueSequenceNext="com_msg_tmpl_seq" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="REPORT_QUERY_RESULT_SUCCESS" />
            <column name="type" value="OTHER" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="description" value="Report query result" />
            <column name="subject" value="[opencell] Query result query.name query execution start date" />
            <column name="textcontent">
                <![CDATA[Dear #{userName},

The result for your query is ready.
Check the result on Opencell Portal direct link to the result on the portal

Query : #{reportQueryName}
Started : #{startDate}
Duration : #{duration}
Line count : #{lineCount}

Best regards,

Opencell team.
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="EMAIL" />
            <column name="id" valueSequenceNext="com_msg_tmpl_seq" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="REPORT_QUERY_RESULT_FAILURE" />
            <column name="type" value="OTHER" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="description" value="Report query failure notification" />
            <column name="subject" value="[opencell] Query failed query.name query execution start date" />
            <column name="textcontent">
                <![CDATA[Dear #{userName},

Query execution failed with error :
#{error}

Contact your administrator or support.

Query : #{reportQueryName}
Started : #{startDate}
Duration : #{duration}

Best regards,

Opencell team.
                ]]>
            </column>
        </insert>
    </changeSet>

    <changeSet id="#20210607_540_563" author="TarikFA." failOnError="false">
        <insert tableName="billing_accounting_article">
        	<column name="id" value='-10'/>
        	<column name="version" valueNumeric="0" />
        	<column name="code" value="PROD-STD"/>
            <column name="tax_class_id" value="-1"/>
            <column name="invoice_sub_category_id" value="-2"/>
            <column name="description_i18n" value='{"FRA":"Remise de pied de facture","ENG":"Invoice discount"}'/>
            <column name="description" value='Invoice discount'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="63ef9cee-f498-4908-PROD-STD" />
        </insert>
    </changeSet>

    <changeSet id="#INTRD-1090_20210729" author="ZBariki">
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq"/>
            <column name="version" valueNumeric="0"/>
            <column name="disabled" valueNumeric="0"/>
            <column name="created" valueDate="2021-07-29 00:04:19.913"/>
            <column name="job_category" value="INVOICING"/>
            <column name="job_template" value="XMLInvoiceGenerationJobV2"/>
            <column name="code" value="XMLInvoiceGenerationJobV2"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
            <column name="timerentity_id" valueNumeric="-3"/>
            <column name="uuid" value="XML_Invoice_Generation_Job_V2"/>
        </insert>
    </changeSet>

       <changeSet id="J215_20210708" author="Mohammed_ELAZZOUZI" dbms="postgresql">

        <insert tableName="meveo_script_instance">
            <column name="id" valueNumeric="-43" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.ServiceImportScript" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="script processor to import service instances]"/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="script"><![CDATA[package org.meveo.service.script;

import java.math.BigDecimal;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.model.billing.SubscriptionTerminationReason;
import org.meveo.model.catalog.ServiceTemplate;
import org.meveo.model.shared.DateUtils;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.catalog.impl.ServiceTemplateService;
import org.meveo.service.crm.impl.CustomFieldTemplateService;
import org.meveo.service.crm.impl.SubscriptionTerminationReasonService;


public class ServiceImportScript extends GenericImportScript {

	private static final String RECORD_VARIABLE_NAME = "record";

	private ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface(
			"ServiceInstanceService");
	CustomFieldTemplateService customFieldTemplateService =(CustomFieldTemplateService) getServiceInterface(
			"CustomFieldTemplateService");
	private ServiceTemplateService serviceTemplateService = (ServiceTemplateService) getServiceInterface(
			"ServiceTemplateService");
	private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(
			"SubscriptionService");
	private SubscriptionTerminationReasonService reasonService = (SubscriptionTerminationReasonService) getServiceInterface(
			"SubscriptionTerminationReasonService");
	@Override
	public void execute(Map<String, Object> context) throws BusinessException {
		try {
			Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
			if (recordMap != null && !recordMap.isEmpty()) {
				String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
				if (!"ServiceInstance".equals(OC_ENTITY)) {
					throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
				}
				String OC_ACTION = (String) recordMap.get("OC_ACTION");
				if (!Stream.of(ServiceInstanceActionEnum.values()).anyMatch(e -> e.toString().equals(OC_ACTION))) {
					throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
				}
				ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

				String OC_Subscription_code = (String) recordMap.get("OC_Subscription_code");
				String OC_ServiceInstance_code = (String) recordMap.get("OC_ServiceInstance_code");
				List<ServiceInstance> serviceInstances = serviceInstanceService
						.findByCodeAndCodeSubscription(OC_ServiceInstance_code, OC_Subscription_code);

				ServiceInstance serviceInstance = null;
				if (action==ServiceInstanceActionEnum.INSTANTIATE ) {
					serviceInstance = new ServiceInstance();
					mapServiceInstanceFields(recordMap, serviceInstance);
					serviceInstance.setCode(OC_ServiceInstance_code);
					Subscription subscription = subscriptionService.findByCode(OC_Subscription_code);
					if(subscription==null) {
						throw new ValidationException("no Subscription found with subscriptionCode: '" + OC_Subscription_code + "'");
					}
					serviceInstance.setSubscription(subscription );
					ServiceTemplate serviceTemplate = serviceTemplateService.findByCode(OC_ServiceInstance_code);
					if(serviceTemplate==null) {
						throw new ValidationException("no serviceTemplate found with code: '" + OC_ServiceInstance_code + "'");
					}
					serviceInstance.setServiceTemplate(serviceTemplate);
					serviceInstanceService.create(serviceInstance);
				} else {
					if (serviceInstances == null || serviceInstances.isEmpty()) {
						throw new ValidationException("no ServiceInstanceFound for subscriptionCode/serviceInstanceCode: '"
										+ OC_Subscription_code + "'/'" + OC_ServiceInstance_code + "'");
					}
					serviceInstance = serviceInstances.get(0);
				}


				switch (action) {
				case INSTANTIATE:
					serviceInstanceService.serviceInstanciation(serviceInstance);
					break;
				case ACTIVATE:
					serviceInstanceService.serviceActivation(serviceInstance);
					break;
				case RESUME:
					serviceInstanceService.serviceReactivation(serviceInstance, new Date(), true, false);
					break;
				case SUSPEND:
					serviceInstanceService.serviceSuspension(serviceInstance, new Date());
					break;
				case TERMINATE:
					Date OC_terminationDate = DateUtils.validateParseDate((String) recordMap.get("OC_terminationDate"));
					String OC_terminationReason = (String) recordMap.get("OC_terminationReason");
					if(StringUtils.isBlank(OC_terminationReason)) {
						throw new ValidationException("OC_terminationReason is mandatory to terminate subscription" );
					}
					SubscriptionTerminationReason reason = reasonService.findByCodeReason(OC_terminationReason);
					if(reason==null) {
						throw new ValidationException("no TerminationReason found with code: '" + OC_terminationReason + "'");
					}
					serviceInstanceService.terminateService(serviceInstance, OC_terminationDate, reason, serviceInstance.getOrderNumber());
					break;
				case UPDATE:
					updateService(recordMap, serviceInstance);
					break;
				default:
					break;
				}
			}
		} catch (Exception exception) {
			throw new BusinessException(exception);
		}
	}

	private void updateService(Map<String, Object> recordMap, ServiceInstance serviceInstance) throws Exception {
		mapServiceInstanceFields(recordMap, serviceInstance);
		serviceInstanceService.update(serviceInstance);
	}

	private void mapServiceInstanceFields(Map<String, Object> recordMap, ServiceInstance serviceInstance)
			throws ParseException {

		Date subscriptionDate = DateUtils.validateParseDate((String) recordMap.get("OC_ServiceInstance_subscriptionDate"));;
		Date rateUntilDate = DateUtils.validateParseDate((String) recordMap.get("OC_ServiceInstance_rateUntilDate"));
		Date endAgreementDate = DateUtils.validateParseDate((String) recordMap.get("OC_ServiceInstance_endAgreementDate"));
		String OC_ServiceInstance_description = (String) recordMap.get("OC_ServiceInstance_description");
		String OC_ServiceInstance_quantity = (String) recordMap.get("OC_ServiceInstance_quantity");

		serviceInstance.setSubscriptionDate(subscriptionDate);
		serviceInstance.setRateUntilDate(rateUntilDate);
		serviceInstance.setEndAgreementDate(endAgreementDate);
		serviceInstance.setQuantity(new BigDecimal(OC_ServiceInstance_quantity));
		serviceInstance.setDescription(OC_ServiceInstance_description);
		recordMap.keySet().stream().filter(key -> key.startsWith("CF_"))
				.forEach(key -> serviceInstance.setCfValue(key.substring(3), parseStringCf(key.substring(3), (String)recordMap.get(key), "ServiceInstance")));
	}
	public enum ServiceInstanceActionEnum {
		INSTANTIATE, ACTIVATE, RESUME, SUSPEND, TERMINATE, UPDATE
	}
}]]></column>
        </insert>
        <insert tableName="meveo_script_instance">
            <column name="id" valueNumeric="-44" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.AccessImportScript" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="script processor to import access points"/>
            <column name="created" valueDate="${db.current.time}"/>
            <column name="script"><![CDATA[package org.meveo.service.script;

import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.model.billing.Subscription;
import org.meveo.model.mediation.Access;
import org.meveo.model.shared.DateUtils;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.crm.impl.CustomFieldTemplateService;
import org.meveo.service.medina.impl.AccessService;

public class AccessImportScript extends GenericImportScript {

	private static final String RECORD_VARIABLE_NAME = "record";

	private AccessService accessService = (AccessService) getServiceInterface("AccessService");
	private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
	CustomFieldTemplateService customFieldTemplateService =(CustomFieldTemplateService) getServiceInterface(
			"CustomFieldTemplateService");

	@Override
	public void execute(Map<String, Object> context) throws BusinessException {
		try {
			Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
			if (recordMap != null && !recordMap.isEmpty()) {
				String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
				if (!"AccessPoint".equals(OC_ENTITY)) {
					throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
				}
				String OC_ACTION = (String) recordMap.get("OC_ACTION");
				if (!Stream.of(AccessActionEnum.values()).anyMatch(e -> e.toString().equals(OC_ACTION))) {
					throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
				}
				AccessActionEnum action = AccessActionEnum.valueOf(OC_ACTION);

				Access access = validateAndGetAccess(action, recordMap);

				if (AccessActionEnum.DELETE.equals(action)) {
					accessService.remove(access);
				} else {
					setAccessValues(recordMap, access);
					if (AccessActionEnum.CREATE.equals(action)) {
				        if (accessService.isDuplicateAndOverlaps(access)) {
				            throw new BusinessException( "Duplicate subscription/access point: '"+access.getSubscription().getCode()+"'/'"+access.getAccessUserId()+"'");
				        }
						accessService.create(access);
					} else if (AccessActionEnum.UPDATE.equals(action)) {
						accessService.update(access);
					}

				}
			}
		} catch (Exception exception) {
			throw new BusinessException(exception);
		}
	}

	private Access validateAndGetAccess(AccessActionEnum action, Map<String, Object> recordMap) {
		Access access = null;
		String OC_subscription_code = (String) recordMap.get("OC_Subscription_code");
		String OC_Access_code = (String) recordMap.get("OC_accessPoint_code");
		List<Access> accessList = accessService.getActiveAccessByCodeAndCodeSubscription(OC_Access_code, OC_subscription_code);
		if (!AccessActionEnum.CREATE.equals(action)) {
			if (accessList == null || accessList.isEmpty()) {
				throw new ValidationException("no Access found for subscriptionCode/AccessCode: '"
						+ OC_subscription_code + "'/'" + OC_Access_code + "'");
			}
			access = accessList.get(0);
		} else {
			access = new Access();
			Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
			if (subscription == null) {
				throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
			}
			access.setSubscription(subscription);
			access.setAccessUserId(OC_Access_code);
		}
		return access;
	}

	private void setAccessValues(Map<String, Object> recordMap, Access access) throws ParseException {
		Date startDate = DateUtils.validateParseDate((String) recordMap.get("OC_accessPoint_startDate"));
		Date endDate = DateUtils.validateParseDate((String) recordMap.get("OC_accessPoint_endDate"));
		access.setEndDate(endDate);
		access.setStartDate(startDate);

		recordMap.keySet().stream().filter(key -> key.startsWith("CF_"))
				.forEach(key -> access.setCfValue(key.substring(3), parseStringCf(key.substring(3), (String)recordMap.get(key), "Access")));
	}

	public enum AccessActionEnum {
		CREATE, UPDATE, DELETE
	}
}]]></column>
        </insert>
        <insert tableName="meveo_script_instance">
            <column name="id" valueNumeric="-45" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.SubscriptionImportScript" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="script processor to import subscriptions"/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="script"><![CDATA[package org.meveo.service.script;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.exception.EntityDoesNotExistsException;
import org.meveo.model.admin.Seller;
import org.meveo.model.billing.Subscription;
import org.meveo.model.billing.SubscriptionTerminationReason;
import org.meveo.model.billing.UserAccount;
import org.meveo.model.catalog.OfferTemplate;
import org.meveo.model.crm.CustomFieldTemplate;
import org.meveo.model.crm.custom.CustomFieldMatrixColumn;
import org.meveo.model.crm.custom.CustomFieldStorageTypeEnum;
import org.meveo.model.crm.custom.CustomFieldTypeEnum;
import org.meveo.model.shared.DateUtils;
import org.meveo.service.admin.impl.SellerService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.billing.impl.UserAccountService;
import org.meveo.service.catalog.impl.OfferTemplateService;
import org.meveo.service.crm.impl.CustomFieldTemplateService;
import org.meveo.service.crm.impl.SubscriptionTerminationReasonService;

public class SubscriptionImportScript extends GenericImportScript {

	private static final String RECORD_VARIABLE_NAME = "record";
	private SubscriptionTerminationReasonService reasonService= (SubscriptionTerminationReasonService) getServiceInterface("SubscriptionTerminationReasonService");
	private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
	private UserAccountService userAccountService = (UserAccountService) getServiceInterface("UserAccountService");
	private SellerService sellerService = (SellerService) getServiceInterface("SellerService");
	private OfferTemplateService offerService = (OfferTemplateService) getServiceInterface("OfferTemplateService");
	private CustomFieldTemplateService customFieldTemplateService =(CustomFieldTemplateService) getServiceInterface("CustomFieldTemplateService");

	@Override
	public void execute(Map<String, Object> context) throws BusinessException {
		try {
			Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
			if (recordMap != null && !recordMap.isEmpty()) {
				String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
				if (!"SUBSCRIPTION".equals(OC_ENTITY)) {
					throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
				}
				String OC_ACTION = (String) recordMap.get("OC_ACTION");
				if (!Stream.of(SubscriptionActionEnum.values()).anyMatch(e -> e.toString().equals(OC_ACTION))) {
					throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
				}
				SubscriptionActionEnum action = SubscriptionActionEnum.valueOf(OC_ACTION);

				String OC_subscription_code = (String) recordMap.get("OC_subscription_code");
				Subscription subscription = subscriptionService
						.findByCode(OC_subscription_code);
				if (subscription == null && !SubscriptionActionEnum.CREATE.equals(action)) {
					throw new ValidationException("no Subscription Found for subscriptionCode: '"
							+ OC_subscription_code + "'");
				}
				if (subscription != null && SubscriptionActionEnum.CREATE.equals(action)) {
					throw new ValidationException("subscription already exists with code: '"
							+ OC_subscription_code + "'");
				}

				switch (action) {
				case CREATE:
					subscription = new Subscription();
					subscription.setCode(OC_subscription_code);
					mapSubscriptionValues(recordMap, subscription);
					subscriptionService.create(subscription);
					break;
				case ACTIVATE:
					subscriptionService.activateInstantiatedService(subscription);
					break;
				case RESUME:
					subscriptionService.subscriptionReactivation(subscription, new Date());
					break;
				case SUSPEND:
					subscriptionService.subscriptionSuspension(subscription, new Date());
					break;
				case TERMINATE:
					Date OC_terminationDate = DateUtils.validateParseDate((String) recordMap.get("OC_terminationDate"));
					String terminationCode = (String)recordMap.get("OC_subscriptionTerminationReason_code");
					if(terminationCode==null) {
						throw new ValidationException("OC_subscriptionTerminationReason_code is mandatory to terminate subscription" );
					}
					SubscriptionTerminationReason terminationReason = reasonService.findByCodeReason(terminationCode);
					if(terminationReason==null) {
						throw new EntityDoesNotExistsException(SubscriptionTerminationReason.class, terminationCode);
					}
					subscription.setSubscriptionTerminationReason(terminationReason);
					subscriptionService.terminateSubscription(subscription, OC_terminationDate, terminationReason, null);
					break;
				case UPDATE:
					mapSubscriptionValues(recordMap, subscription);
					subscriptionService.update(subscription);
					break;
				default:
					break;
				}
			}
		} catch (Exception exception) {
			throw new BusinessException(exception);
		}
	}

	private void mapSubscriptionValues(Map<String, Object> recordMap, Subscription subscription) throws ParseException {
		String OC_seller_code = (String) recordMap.get("OC_seller_code");
		String OC_offer_code = (String) recordMap.get("OC_offer_code");
		String OC_userAccount_code = (String) recordMap.get("OC_userAccount_code");
		Date subscriptionDate = DateUtils.validateParseDate((String) recordMap.get("OC_subscriptionDate"));
		Date endAgreementDate = DateUtils.validateParseDate((String) recordMap.get("OC_endAgreementDate"));
		Date OC_terminationDate = DateUtils.validateParseDate((String) recordMap.get("OC_terminationDate"));

		String OC_subscription_description = (String) recordMap.get("OC_subscription_description");



		UserAccount userAccount = userAccountService.findByCode(OC_userAccount_code);
		if(userAccount==null) {
			throw new EntityDoesNotExistsException(UserAccount.class, OC_userAccount_code);
		}
		Seller seller = sellerService.findByCode(OC_seller_code);
		if(seller==null) {
			throw new EntityDoesNotExistsException(Seller.class, OC_seller_code);
		}
		OfferTemplate offer = offerService.findByCode(OC_offer_code);
		if(offer==null) {
			throw new EntityDoesNotExistsException(OfferTemplate.class, OC_offer_code);
		}
		subscription.setUserAccount(userAccount);
		subscription.setSeller(seller);
		subscription.setOffer(offer);
		subscription.setTerminationDate(OC_terminationDate);
		subscription.setSubscriptionDate(subscriptionDate);
		subscription.setEndAgreementDate(endAgreementDate);
		subscription.setDescription(OC_subscription_description);
		recordMap.keySet().stream().filter(key -> key.startsWith("CF_"))
				.forEach(key -> subscription.setCfValue(key.substring(3), parseStringCf(key.substring(3), (String)recordMap.get(key), "Subscription")));
	}

	public enum SubscriptionActionEnum {
		CREATE, UPDATE, SUSPEND, RESUME, ACTIVATE, TERMINATE
	}
}]]></column>
        </insert>

        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-46" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="updated" valueDate="${db.current.time}" />
            <column name="code" value="importServicesJob" />
            <column name="description" value="importServicesJob" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="opencell.admin" />
            <column name="timerentity_id" value="null" />
            <column name="following_job_id" value="null" />
            <column name="uuid" value="importServicesJob" />
            <column name="run_on_nodes" value="null" />
            <column name="single_node" value="1" />
            <column name="cf_values">
	            <![CDATA[{"oneFilePerJob":[{"boolean":false}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/services/outputs"}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio xmlns=\"http://www.beanio.org/2012/03\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\",\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n          \t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_Subscription_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_description\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_quantity\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_subscriptionDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_rateUntilDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_endAgreementDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_terminationDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_terminationReason\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_APPEL_SORTANT_PPC_ZONE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_APPEL_SORTANT_PRIXMINUTE_ZONE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_NRC\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_CHATS_PALIER\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_SMS_ENTRANT\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_NRC_REACH\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_COUTPARUNITE_APPEL_ENTRANT\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_LICENCE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_SMS_SORTANT_ZONE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_UNITAIRE_OPTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_REC_REACH\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_REC\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_COUT_APPEL_ENTRANT\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_EMAILS_PALIER\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_HITS_PALIER\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_TRANCHE_STOCKAGE_GO\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_TAILLE_TRANCHE_STOCKAGE_GO\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_STOCKAGE_EMAILS_GO_INCLUS\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_MIN_FACTURATION\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_Subscription_code\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_code\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_description\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_quantity\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_subscriptionDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_rateUntilDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_terminationDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_terminationReason\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_ServiceInstance_endAgreementDate\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_APPEL_SORTANT_PPC_ZONE\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_APPEL_SORTANT_PRIXMINUTE_ZONE\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_NRC\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_CHATS_PALIER\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_SMS_ENTRANT\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_NRC_REACH\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_COUTPARUNITE_APPEL_ENTRANT\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_LICENCE\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_SMS_SORTANT_ZONE\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_UNITAIRE_OPTION\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_PRIX_REC_REACH\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_REC\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MATRICE_COUT_APPEL_ENTRANT\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_EMAILS_PALIER\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_PRIX_HITS_PALIER\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PRIX_TRANCHE_STOCKAGE_GO\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_TAILLE_TRANCHE_STOCKAGE_GO\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_STOCKAGE_EMAILS_GO_INCLUS\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_MAP_MIN_FACTURATION\" required=\"false\"/>\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
	            "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
	            "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}],
	            "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/services/archives"}],
	            "FlatFileProcessingJob_inputDir":[{"string":"/imports/services/inputs"}],
	            "waitingMillis":[{"long":0}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
	            "FlatFileProcessingJob_rejectDir":[{"string":"/imports/services/rejects"}],
	            "nbRuns":[{"long":1}],
	            "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.ServiceImportScript"}]}]]>
            </column>
            <column name="verbose_report" value="1" />
          </insert>
          <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-47" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="updated" valueDate="${db.current.time}" />
            <column name="code" value="importSubscriptionsJob" />
            <column name="description" value="importSubscriptionsJob" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="opencell.admin" />
            <column name="timerentity_id" value="null" />
            <column name="following_job_id" value="null" />
            <column name="uuid" value="importSubscriptionsJob" />
            <column name="run_on_nodes" value="null" />
            <column name="single_node" value="1" />
            <column name="cf_values">
	            <![CDATA[{"oneFilePerJob":[{"boolean":false}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/subscriptions/outputs"}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\",\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_subscription_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_subscription_description\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_userAccount_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_offer_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_seller_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_subscriptionDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_endAgreementDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_terminationDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_subscriptionTerminationReason_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_NUM_REACH\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_PAYS_NUM\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_TYPE_NUM\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_NIVEAU_NUM\" ignore=\"true\"/>\r\n\t\t\t<field name=\"CF_CF_NUM_COMMANDE_SUB\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_subscription_code\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_subscription_description\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_userAccount_code\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_offer_code\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_seller_code\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_subscriptionDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_endAgreementDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_terminationDate\" required=\"false\"/>\r\n\t\t\t<field name=\"OC_subscriptionTerminationReason_code\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_NUM_REACH\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_PAYS_NUM\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_TYPE_NUM\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_NIVEAU_NUM\" required=\"false\"/>\r\n\t\t\t<field name=\"CF_CF_NUM_COMMANDE_SUB\" required=\"false\"/>\r\n\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
	            "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
	            "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}],
	            "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/subscriptions/archives"}],
	            "FlatFileProcessingJob_inputDir":[{"string":"/imports/subscriptions/inputs"}],
	            "waitingMillis":[{"long":0}],"FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],"FlatFileProcessingJob_rejectDir":[{"string":"/imports/subscriptions/rejects"}],
	            "nbRuns":[{"long":1}],"FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.SubscriptionImportScript"}]}]]>
            </column>
            <column name="verbose_report" value="1" />
        </insert>
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-48" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="updated" valueDate="${db.current.time}" />
            <column name="code" value="importAccesPointsJob" />
            <column name="description" value="importAccesPointsJob" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="opencell.admin" />
            <column name="timerentity_id" value="null" />
            <column name="following_job_id" value="null" />
            <column name="uuid" value="importAccesPointsJob" />
            <column name="run_on_nodes" value="null" />
            <column name="single_node" value="1" />
            <column name="cf_values">
	            <![CDATA[{"oneFilePerJob":[{"boolean":false}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/accessPoints/outputs"}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\",\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_Subscription_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_code\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_startDate\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_endDate\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_Subscription_code\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_code\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_startDate\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_accessPoint_endDate\" required=\"true\"/>\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
	            "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
	            "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}],
	            "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/accessPoints/archives"}],
	            "FlatFileProcessingJob_inputDir":[{"string":"/imports/accessPoints/inputs"}],
	            "waitingMillis":[{"long":0}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
	            "FlatFileProcessingJob_rejectDir":[{"string":"/imports/accessPoints/rejects"}],
	            "nbRuns":[{"long":1}],
	            "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.AccessImportScript"}]}]]>
            </column>
            <column name="verbose_report" value="1" />
        </insert>
	</changeSet>

	<changeSet id="#INTRD-292_20210816" author="HatimOUDAD">
        <insert tableName="journal">
            <column name="id" valueNumeric="-1"/>
            <column name="version" valueNumeric="0"/>
            <column name="created" valueDate="2021-08-16 00:04:19.913"/>
            <column name="code" value="SAL"/>
            <column name="description" value="Sales Journal"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
        </insert>
        <insert tableName="journal">
            <column name="id" valueNumeric="-2"/>
            <column name="version" valueNumeric="0"/>
            <column name="created" valueDate="2021-08-16 00:04:19.913"/>
            <column name="code" value="BAN"/>
            <column name="description" value="Bank Journal"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
        </insert>
        <insert tableName="journal">
            <column name="id" valueNumeric="-3"/>
            <column name="version" valueNumeric="0"/>
            <column name="created" valueDate="2021-08-16 00:04:19.913"/>
            <column name="code" value="MSC"/>
            <column name="description" value="Miscellaneous Journal"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
        </insert>
        <insert tableName="journal">
            <column name="id" valueNumeric="-4"/>
            <column name="version" valueNumeric="0"/>
            <column name="created" valueDate="2021-08-16 00:04:19.913"/>
            <column name="code" value="TAX"/>
            <column name="description" value="Tax Journal"/>
            <column name="creator" value="OPENCELL.ADMIN"/>
        </insert>
    </changeSet>
	<changeSet id="#INTRD-1406_20210826" author="HatimOUDAD">
    <update tableName="ar_occ_template">
    		<column name="journal_id" value="-2" />
    		<where>code in ('PAY_CHK','PAY_TIP','PAY_DDT','REJ_CHK','REJ_DDT','REJ_TIP','PAY_NID','PAY_REC','REF_CHK','REF_DDT','PAY_DEP','REF_CRD','REJ_CRD','REJ_RCR','REJ_RDD','REF_TIP','PAY_CRD','PAY_PAL','PAY_STP','DBT_TRS','CRD_TRS')</where>
    </update>
    <update tableName="ar_occ_template">
    		<column name="journal_id" value="-3" />
    		<where>code in ('EXP_WRT','INV_FEE','RND_INC','RND_EXP')</where>
    </update>
    <update tableName="ar_occ_template">
    		<column name="journal_id" value="-1" />
    		<where>code in ('INV_STD','INV_REB','INV_DIS','INV_CRN')</where>
    </update>
    <update tableName="ar_occ_template">
    		<column name="journal_id" value="-4" />
    		<where>code in ('TAX_VAT_00','TAX_VAT_05','TAX_VAT_20','TAX_VAT_10')</where>
    </update>
    </changeSet>


    <changeSet id="#INTRD-1589_2021_14_09" author="ZBariki">
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="2021-09-14 00:04:19.913" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="code" value="ProcessCustomerPaymentsFileJob" />
            <column name="description" value="Process customer payments file job"/>
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="job_speed" value="NORMAL" />
            <column name="single_node" valueNumeric="1" />
            <column name="verbose_report" valueNumeric="1" />
            <column name="disabled" valueNumeric="0" />
            <column name="uuid" value="ProcessCustomerPaymentsFileJob" />
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="oneFilePerJob"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Process files separately"/>
            <column name="field_type" value="BOOLEAN"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="default_value" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Execution configuration:0;field:2"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_outputDir"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Output directory"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="default_value" value="imports/payment/output"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:4"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_mappingConf"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Record descriptor"/>
            <column name="field_type" value="TEXT_AREA"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Record configuration:2;field:0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_recordVariableName"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Record variable name"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="record"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="50"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Data processing configuration:3;field:2"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_originFilename"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Filename variable name"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="origin_filename"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Data processing configuration:3;field:3"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_archiveDir"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Archive directory"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="imports/payment/archive"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:2"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_inputDir"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Input directory"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="imports/payment/input"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:1"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="waitingMillis"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Waiting before next launch (ms)"/>
            <column name="field_type" value="LONG"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" valueNumeric="0"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Execution configuration:0;field:1"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_variables"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Init and finalize variables"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="MAP"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="mapkey_type" value="STRING"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Dataprocessing configuration:3;field:1"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_errorAction"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Error action"/>
            <column name="field_type" value="LIST"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="CONTINUE"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Data processing configuration:3;field:5"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_fileFormat"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="File format"/>
            <column name="field_type" value="ENTITY"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="entity_clazz" value="org.meveo.model.admin.FileFormat"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_fileNameFilter"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="File name filter"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:5"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_fileNameExtension"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Extension"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="csv"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:6"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_formatTransfo"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Format transformation"/>
            <column name="field_type" value="LIST"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" value="None"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Data processing configuration:3;field:4"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_rejectDir"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Reject directory"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:3"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_scriptsFlow"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Script flow"/>
            <column name="field_type" value="STRING"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="max_value" valueNumeric="256"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Data processing configuration:3;field:0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="nbRuns"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Number of parallel execution"/>
            <column name="field_type" value="LONG"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" valueNumeric="1"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:Execution configuration:0;field:0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FlatFileProcessingJob_nbLinesToProcess"/>
            <column name="applies_to" value="JobInstance_ProcessCustomerPaymentsFileJob"/>
            <column name="description" value="Nb of lines to process"/>
            <column name="field_type" value="LONG"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="default_value" valueNumeric="1"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="gui_position" value="tab:Configuration:0;fieldGroup:File configuration:1;field:7"/>
        </insert>
		<insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-40" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="now()" />
            <column name="updated" valueDate="null" />
            <column name="uuid" value="ServiceTemplateToProductJob" />
            <column name="code" value="ServiceTemplateToProductJob" />
            <column name="description" value="ServiceTemplateToProductJob" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="ScriptingJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="null" />
            <column name="timerentity_id" value="null" />
            <column name="cf_values">
            	<![CDATA[
            		{"ScriptingJob_script":[{"entity":{"classname":"org.meveo.model.scripts.ScriptInstance","code":"org.meveo.service.script.ServiceTemplateToProductScript","id":-30}}],"ScriptingJob_TransactionType":[{"string":"REQUIRES_NEW"}]}
            	]]>
			</column>
       	</insert>
	</changeSet>
	<changeSet id="INTRD_1985_20210923_data" author="TarikFA.">


        <insert tableName="generic_sequence">
            <column name="id" valueSequenceNext="generic_sequence_seq" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="code" value="quote_offer_sequence" />
            <column name="description" value="Quote Offer sequence" />
            <column name="sequence_type" value="SEQUENCE" />
            <column name="sequence_size" valueNumeric="9" />
            <column name="current_number" valueNumeric="0" />
        </insert>


		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="QuoteOffer" />
			<column name="code_el" value="#{entity.quoteVersion.id}_#{entity.offerTemplate.code}_#{sequenceNextValue}" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="sequence_id" valueSequenceCurrent="generic_sequence_seq" />
		</insert>

        <insert tableName="generic_sequence">
            <column name="id" valueSequenceNext="generic_sequence_seq"/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="code" value="order_offer_sequence" />
            <column name="description" value="Order Offer sequence" />
            <column name="sequence_type" value="SEQUENCE" />
            <column name="sequence_size" valueNumeric="9" />
            <column name="current_number" valueNumeric="0" />
        </insert>


		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="OrderOffer" />
			<column name="code_el" value="#{entity.order.code}_#{entity.offerTemplate.code}_#{sequenceNextValue}" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="sequence_id" valueSequenceCurrent="generic_sequence_seq" />
		</insert>
	</changeSet>

	<changeSet id="#2122_20211001" author="YoussefIZEM">
        <update tableName="ar_account_operation">
            <column name="accounting_date" valueComputed="transaction_date"></column>
        </update>
    </changeSet>
	<changeSet id="1589_20210930" author="YoussefIZEM" dbms="postgresql">
        <insert tableName="billing_accounting_code">
            <column name="id" valueNumeric="-35" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="T3P9476" />
            <column name="description" value="WS BAD DEBT WRITE-OFFS IRRE"></column>
            <column name="chart_of_account_type" value="REVENUE" />
            <column name="chart_of_account_view_type" value="REGULAR" />
        </insert>
		<insert tableName="ar_occ_template">
            <column name="id" valueNumeric="-50" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="accounting_code_id" valueNumeric="-35" />
            <column name="code" value="PAY_BATCH" />
            <column name="description" value="Payment from batch payment file" />
            <column name="occ_category" value="CREDIT" />
            <column name="journal_id" value="-2" />
        </insert>
        <update tableName="meveo_job_instance" >
            <column name="cf_values">
	            <![CDATA[{"FlatFileProcessingJob_mappingConf":[{"string":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beanio xmlns=\"http://www.beanio.org/2012/03\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\n   <stream name=\"record\" format=\"fixedlength\" strict=\"true\">\n      <record name=\"payment\" occurs=\"0+\" class=\"org.meveo.api.dto.payment.CustomerPaymentRecordDto\" minLength=\"80\" maxLength=\"80\">\n         <field name=\"payCode\" minOccurs=\"0\" length=\"3\" />\n         <field name=\"accountNumber\" minOccurs=\"0\" length=\"11\" />\n         <field name=\"checkDigit\" minOccurs=\"0\" length=\"2\" />\n         <field name=\"paidAmount\" minOccurs=\"0\" length=\"10\" />\n         <field name=\"filler\" minOccurs=\"0\" length=\"5\" />\n         <field name=\"date\" minOccurs=\"0\" length=\"6\" format=\"ddMMyy\"/>\n         <field name=\"reference\" minOccurs=\"0\" length=\"42\" />\n         <field name=\"endOfRecord\" minOccurs=\"0\" length=\"1\" />\n      </record>\n   </stream>\n</beanio>"}]
						,"FlatFileProcessingJob_recordVariableName":[{"string":"record"}]
						,"FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}]
						,"FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}]
						,"FlatFileProcessingJob_fileNameExtension":[{"string":"PMT"}]
						,"FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.ProcessCustomerPaymentsFileScript"}]
						,"FlatFileProcessingJob_archiveDir":[{"string":"imports/payment/archive"}]
						,"FlatFileProcessingJob_rejectDir":[{"string":"imports/payment/reject"}]
						,"FlatFileProcessingJob_outputDir":[{"string":"imports/payment/output"}]
						,"FlatFileProcessingJob_inputDir":[{"string":"imports/payment/input"}]}]]>
			</column>
            <where>code ='ProcessCustomerPaymentsFileJob'</where>
        </update>
        <insert tableName="meveo_script_instance">
            <column name="id" valueNumeric="-55" />
            <column name="version" valueNumeric="0" />
            <column name="code" value="org.meveo.service.script.ProcessCustomerPaymentsFileScript" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="Process customer payments file script"/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="script"><![CDATA[
package org.meveo.service.script;

import java.math.BigDecimal;
import java.util.Date;
import java.util.Map;

import javax.ejb.Stateless;
import javax.inject.Inject;

import org.meveo.admin.exception.BusinessException;
import org.meveo.api.dto.payment.CustomerPaymentRecordDto;
import org.meveo.commons.utils.StringUtils;
import org.meveo.model.billing.BillingAccount;
import org.meveo.model.payments.MatchingStatusEnum;
import org.meveo.model.payments.OCCTemplate;
import org.meveo.model.payments.OperationCategoryEnum;
import org.meveo.model.payments.Payment;
import org.meveo.model.payments.PaymentMethodEnum;
import org.meveo.service.billing.impl.BillingAccountService;
import org.meveo.service.billing.impl.RatingService;
import org.meveo.service.payments.impl.OCCTemplateService;
import org.meveo.service.payments.impl.PaymentService;
import org.meveo.service.script.Script;

import org.meveo.model.payments.ApplicationPropertiesEnum;
import org.meveo.model.payments.AccountOperationCFsEnum;

/**
 * @author Abdellatif BARI
 */
@Stateless
public class ProcessCustomerPaymentsFileScript extends Script {

	private transient BillingAccountService billingAccountService = (BillingAccountService) getServiceInterface(BillingAccountService.class.getSimpleName());

    private transient PaymentService paymentService = (PaymentService) getServiceInterface(PaymentService.class.getSimpleName());

	private transient OCCTemplateService oCCTemplateService = (OCCTemplateService) getServiceInterface(OCCTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> parameters) throws BusinessException {
        try {
            CustomerPaymentRecordDto customerPaymentRecordDto = initContext(parameters);
            processItem(customerPaymentRecordDto);
        } catch (Exception e) {
            log.error("error on process customer payments file {} ", e.getMessage(), e);
            if (e instanceof BusinessException) {
                throw e;
            } else {
                // wrap the exception in a business exception and throwing it
                throw new BusinessException(e);
            }
        }
    }

    /**
     * Init context
     *
     * @param parameters parameters
     * @return the customer payment record Dto
     * @throws BusinessException the business exception
     */
    private CustomerPaymentRecordDto initContext(Map<String, Object> parameters) throws BusinessException {
        CustomerPaymentRecordDto customerPaymentRecordDto = (CustomerPaymentRecordDto) parameters.get("record");
        if (customerPaymentRecordDto == null) {
            throw new BusinessException(String.format("Parameter record is missing"));
        }
        customerPaymentRecordDto.setErrorMessage(new StringBuilder());
        String fileName = (String) parameters.get("origin_filename");
        if (StringUtils.isBlank(fileName)) {
            throw new BusinessException(String.format("Parameter origin_filename is missing"));
        }
        customerPaymentRecordDto.setFileName(fileName);
        return customerPaymentRecordDto;
    }

    /**
     * Process item
     *
     * @param customerPaymentRecordDto the customerPayment record Dto
     * @throws BusinessException the business exception
     */
    private void processItem(CustomerPaymentRecordDto customerPaymentRecordDto) throws BusinessException {
        validateItem(customerPaymentRecordDto);
        populateItem(customerPaymentRecordDto);
        if (customerPaymentRecordDto.getErrorMessage().length() > 0) {
            throw new BusinessException(customerPaymentRecordDto.getErrorMessage().toString());
        }
    }

    /**
     * Validate item
     *
     * @param customerPaymentRecordDto the customerPayment record Dto
     * @throws BusinessException the business exception
     */
    private void validateItem(CustomerPaymentRecordDto customerPaymentRecordDto) throws BusinessException {
        if (StringUtils.isBlank(customerPaymentRecordDto.getPaidAmount())) {
            customerPaymentRecordDto.getErrorMessage().append("The payment amount is required.");
        } else {
            customerPaymentRecordDto.setPaidAmount(customerPaymentRecordDto.getPaidAmount().trim());
            if (!isDouble(customerPaymentRecordDto.getPaidAmount())) {
                customerPaymentRecordDto.getErrorMessage().append("The payment amount is invalid");
            }
        }
        if (customerPaymentRecordDto.getDate() == null) {
            customerPaymentRecordDto.getErrorMessage().append("The payment date is required");
        }
        if (StringUtils.isBlank(customerPaymentRecordDto.getEndOfRecord()) || !customerPaymentRecordDto.getEndOfRecord().equalsIgnoreCase("V")) {
            customerPaymentRecordDto.getErrorMessage().append("The end of record must always hard coded as V.");
        }
    }

    /**
     * Check number is double
     *
     * @param strNum the string number
     * @return true is the string is double.
     */
    public static boolean isDouble(String strNum) {
        if (StringUtils.isBlank(strNum)) {
            return false;
        }
        try {
            Double.parseDouble(strNum);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    /**
     * Convert String to integer value (possibility to have null as default value)
     *
     * @param str string to be converted
     * @return the integer value
     */
    public static Integer toInteger(String str) {
        return toInteger(str, null);
    }

    /**
     * Convert String to integer value (possibility to have null as default value)
     *
     * @param str          string to be converted
     * @param defaultValue the default value
     * @return the integer value
     */
    public static Integer toInteger(String str, Integer defaultValue) {
        if (StringUtils.isBlank(str)) {
            return defaultValue;
        } else {
            try {
                return Integer.parseInt(str.trim());
            } catch (NumberFormatException ne) {
                return defaultValue;
            }
        }
    }

    /**
     * Populate tariff plan item
     *
     * @param customerPaymentRecordDto the customerPayment record Dto
     * @throws BusinessException the business exception
     */
    private void populateItem(CustomerPaymentRecordDto customerPaymentRecordDto) throws BusinessException {
        // if everything is OK and no errors
        if (customerPaymentRecordDto.getErrorMessage().length() == 0) {
            Integer accountNumber = toInteger(customerPaymentRecordDto.getAccountNumber());
            if (accountNumber != null) {
                customerPaymentRecordDto.setAccountNumber(accountNumber.toString());
            }

            BillingAccount billingAccount = billingAccountService.findByNumber(customerPaymentRecordDto.getAccountNumber());
            if (billingAccount != null) {
                // create payment.
                createPayment(customerPaymentRecordDto, billingAccount);
            } else { // the billing account is not found in Opencell
                log.warn("The billing account " + customerPaymentRecordDto.getAccountNumber() + " is not found ");
                postUnmatchedPayment(customerPaymentRecordDto);
            }
        }
    }

    /**
     * post unmatched payment into the suspense billing account
     *
     * @param customerPaymentRecordDto the customerPayment record Dto
     * @throws BusinessException the business exception
     */
    private void postUnmatchedPayment(CustomerPaymentRecordDto customerPaymentRecordDto) throws BusinessException {
        // get the suspense billing account
        String suspenseBillingAccountCode = ApplicationPropertiesEnum.SUSPENSE_BILLING_ACCOUNT_CODE.getProperty();
        BillingAccount billingAccount = billingAccountService.findByCode(suspenseBillingAccountCode);
        if (billingAccount != null) {
            // Create payment and put it into the suspense billing account
            createPayment(customerPaymentRecordDto, billingAccount);
        } else {
            log.error("The suspense billing account {} is not found", suspenseBillingAccountCode);
            customerPaymentRecordDto.getErrorMessage().append("The suspense billing account " + suspenseBillingAccountCode + " is not found ");
        }
    }

    /**
     * create the customer payment
     *
     * @param billingAccount the billing account
     * @return the payment
     * @throws BusinessException the business exception
     */
    private Payment createNewPayment(CustomerPaymentRecordDto customerPaymentRecordDto, BillingAccount billingAccount) throws BusinessException {

        String occTemplateCode = ApplicationPropertiesEnum.TEMPLATE_BATCH_PAYMENT_CREDIT.getProperty();
        OCCTemplate occTemplate = oCCTemplateService.findByCode(occTemplateCode);
        if (occTemplate == null) {
            throw new BusinessException("Cannot find OCC Template with code=" + occTemplateCode);
        }

        BigDecimal amount = new BigDecimal(customerPaymentRecordDto.getPaidAmount()).divide(BigDecimal.valueOf(100));
        /*
         * if (!StringUtils.isBlank(checkDigit)) { checkDigit = checkDigit.trim(); if (checkDigit.equals("-")) { amount = amount.negate(); } }
         */

        Payment payment = new Payment();
        payment.setCustomerAccount(billingAccount.getCustomerAccount());
        payment.setPaymentMethod(PaymentMethodEnum.CARD);
        // payment.setOrderNumber(?);
        payment.setAmountWithoutTax(amount);
        payment.setAmount(amount);
        payment.setMatchingAmount(BigDecimal.ZERO);
        payment.setUnMatchingAmount(amount);
        payment.setAccountingCode(occTemplate.getAccountingCode());
        payment.setCode(occTemplate.getCode());
        payment.setDescription(occTemplate.getDescription());
        payment.setTransactionCategory(OperationCategoryEnum.CREDIT); // EIR must provide the category of the transaction CREDIT or DEBIT
        payment.setAccountCodeClientSide(occTemplate.getAccountCodeClientSide());
        payment.setReference(customerPaymentRecordDto.getReference());
        payment.setTransactionDate(customerPaymentRecordDto.getDate());
        // using the date the file is processed as the Payment Date (to be displayed on the invoice)
        payment.setDueDate(new Date());
        payment.setMatchingStatus(MatchingStatusEnum.O);
        payment.setCfValue(AccountOperationCFsEnum.BILLING_ACCOUNT_NUMBER.name(), billingAccount.getExternalRef1());
        //payment.setCfValue(FROM_AccountOperationCFsEnum.BILLING_ACCOUNT_NUMBER.name(), billingAccount.getExternalRef1());
        payment.setCfValue(AccountOperationCFsEnum.PAYMENT_FILE_ACCOUNT_CUSTOMER_NUMBER.name(), customerPaymentRecordDto.getAccountNumber());
        payment.setCfValue(AccountOperationCFsEnum.PAYMENT_FILE_NAME.name(), customerPaymentRecordDto.getFileName());
        return payment;
    }

    /**
     * create the customer payment
     *
     * @param billingAccount the billing account
     * @return the customer payment record Dto
     * @throws BusinessException the business exception
     */
    private void createPayment(CustomerPaymentRecordDto customerPaymentRecordDto, BillingAccount billingAccount) throws BusinessException {
        try {
            Payment payment = createNewPayment(customerPaymentRecordDto, billingAccount);
            paymentService.create(payment);
        } catch (BusinessException e) {
            log.error("Couldn't create Payement. error : {}", e);
            customerPaymentRecordDto.getErrorMessage().append("Couldn't create payment. error : " + e.getMessage());
        }
    }
}		]]></column>
        </insert>
    </changeSet>

     <changeSet id="INTRD-2143_20211006" author="TarikFA.">
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.OrderValidationScript" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class OrderValidation extends OrderValidationScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
        </insert>
    </changeSet>

	<changeSet id="INTRD_2290_20211015_build" author="TarikFA.">
		<insert tableName="dunning_settings">
			<column name="id" valueSequenceNext="dunning_settings_seq" />
			<column name="code" value="DUN_DEF"/>
			<column name="description" value="Default Dunning Settings generated"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="max_dunning_levels" valueNumeric="5" />
			<column name="max_days_outstanding" valueNumeric="3" />
			<column name="dunning_mode" value="CUSTOMER_LEVEL" />
		</insert>
		<insert tableName="dunning_pause_reasons">
			<column name="id" valueSequenceNext="dunning_pause_reasons_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="pause_reason" value="5 jours (ouvrés) avant paiement"/>
			<column name="description" value="Client demande 5 jours (ouvrés) avant de payer"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_pause_reasons">
			<column name="id" valueSequenceNext="dunning_pause_reasons_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="pause_reason" value="10 jours (ouvrés) avant paiement"/>
			<column name="description" value="Client demande 10 jours (ouvrés) avant de payer"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>

		</insert>
		<insert tableName="dunning_pause_reasons">
			<column name="id" valueSequenceNext="dunning_pause_reasons_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="pause_reason" value="30 jours (ouvrés) avant paiement"/>
			<column name="description" value="Client demande 30 jours (ouvrés) avant de payer"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_stop_reasons">
			<column name="id" valueSequenceNext="dunning_stop_reasons_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="stop_reason" value="Client conteste la facture" />
			<column name="description" value="Client conteste la facture. Dept comptable reprend la suite" />
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq" />
		</insert>
		<insert tableName="dunning_stop_reasons">
			<column name="id" valueSequenceNext="dunning_stop_reasons_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="stop_reason" value="Client insolvable"/>
			<column name="description" value="Client se déclare insolvable. Renvoi au dept comptale"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_stop_reasons">
			<column name="id" valueSequenceNext="dunning_stop_reasons_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="stop_reason" value="Entreprise dépose le bilan"/>
			<column name="description" value="L’entreprise a débuté une procédure de dépôt de bilan. Renvoi au dept comptable"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>

		<insert tableName="dunning_collection_plan_statuses">
			<column name="id" valueSequenceNext="dunning_collection_plan_statuses_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="status" value="Pause"/>
			<column name="description" value="PAUSED_DUNNING"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_collection_plan_statuses">
			<column name="id" valueSequenceNext="dunning_collection_plan_statuses_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="status" value="Stop"/>
			<column name="description" value="STOPPED_DUNNING"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_collection_plan_statuses">
			<column name="id" valueSequenceNext="dunning_collection_plan_statuses_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="status" value="Succès"/>
			<column name="description" value="SUCCESSFUL_DUNNING"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_collection_plan_statuses">
			<column name="id" valueSequenceNext="dunning_collection_plan_statuses_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="status" value="Echec"/>
			<column name="description" value="FAILED_DUNNING"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
		<insert tableName="dunning_collection_plan_statuses">
			<column name="id" valueSequenceNext="dunning_collection_plan_statuses_seq"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="creator" value="OPENCELL.ADMIN"/>
			<column name="version" valueNumeric="1"/>
			<column name="status" value="Actif"/>
			<column name="description" value="ACTIVE_DUNNING"/>
			<column name="dunning_settings_id" valueSequenceCurrent="dunning_settings_seq"/>
		</insert>
	</changeSet>

	<changeSet id="INTRD-2634_20211027" author="YoussefIZEM">
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-1" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ENG - B2B relance 1 (J+15)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="Reminder – Past due invoice#{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""><p class="MsoNormal"><i><span lang="EN-US" style="mso-ascii-font-family:Calibri;
mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US">Hello #{Title}
#{CustomerAccount.LastName},</span></i><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;
mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US"><o:p></o:p></span></p>

<p class="MsoNormal"><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:
Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US"><o:p>&nbsp;</o:p></span></p>
<p class="MsoNormal"><i><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:
Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US">We are reaching out to you in regards of your invoice #{Invoice.Number} and more specifically
its payment that was due on the #{Invoice.DueDate}. You can find a copy of the invoice attached to this email.</span></i><span lang="EN-US" style="mso-ascii-font-family:
Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1;mso-ansi-language:
EN-US"><o:p></o:p></span></p>

<p class="MsoNormal"><i><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:
Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US">Please make sure to pay the invoice in full as soon as possible. If you have any additional
question, do not hesitate to contact our services or your point of contact in our company.</span></i><span lang="EN-US" style="mso-ascii-font-family:Calibri;
mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US"><o:p></o:p></span></p>

<p class="MsoNormal"><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:
Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US"><o:p>&nbsp;</o:p></span></p>

<p class="MsoNormal"><i><span lang="EN-US" style="mso-ascii-font-family:Calibri;mso-fareast-font-family:Calibri;mso-hansi-font-family:Calibri;mso-bidi-font-family:
Calibri;color:black;mso-themecolor:text1;mso-ansi-language:EN-US">Best regards,</span></i></p></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-2" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ENG - B2B relance 4 (J+35)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="DunningLetter for Invoice #{Invoice.number}" />
            <column name="is_active" value="1" />
            <column name="channel" value="LETTER" />
            <column name="trading_language_id" value="-1" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">#{Compagny.name}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.adress}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.postalcode}; #{Compagny.city}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.phone}</span></i><span lang="EN-US"><br>
<!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></span><span lang="EN-US"><o:p></o:p></span></p><p class="MsoNormal"><span lang="EN-US" segoe="" ui",="" "sans-serif";"="">

</span></p><p class="MsoNormal"><i><span lang="EN-US">#{Contact.client}
</span></i><span lang="EN-US"> / <i>#{Compagny.client.name}</i></span><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.adress}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.postalcode}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.city}</span></i><span lang="EN-US"><br>
<!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></span><i><span lang="EN-US"><o:p></o:p></span></i></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">#{Compagny.city}, on #{day.date}</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">#{Title.client},</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">By a first email dated (Date of 1st reminder), then a second one dated
(Date of 2nd reminder), weaskedyou to proceed to the payment of the invoice</span><i><span lang="EN-US">#{Invoice.number}</span></i><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"=""> for an
amount of </span><i><span lang="EN-US">#{Invoice.total}</span></i></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">Unless we are mistaken, we regret to say that we have not
yet received payment of invoice. We therefore ask you to proceed immediately to
its payment.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">You will find a copy of the invoice attached to this letter.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">Please disregard this letter if your payment has been sent to us prior to
receiving this letter.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">We remain at your disposal in case of any questions. Please accept,
Madam / Sir, the assurance of our best regards.</span></p><p class="MsoNormal"><span style="font-family: " segoe="" ui",="" "sans-serif";"="">Signature </span></p><p class="MsoNormal">
</p><p class="MsoNormal"><span style="font-family: " segoe="" ui",="" "sans-serif";"="">Yourname and surname</span></p><p></p>                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-3" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ENG - B2C relance 1 (J+1)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="Reminder – Past due invoice #{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">Hello #{Title}
#{CustomerAccount.LastName},</span></i><span lang="EN-US"><o:p></o:p></span></p><p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p><p class="MsoNormal"><i><span lang="EN-US">We are reaching
out to you in regards of your invoice #{Invoice.Number} and more specifically
its payment that was due on the #{Invoice.DueDate}. You can find a copy of the
invoice attached to this email.</span></i><span lang="EN-US"><o:p></o:p></span></p><p class="MsoNormal"><i><span lang="EN-US">Please make
sure to pay the invoice in full as soon as possible. If you have any additional
question, do not hesitate to contact our services or your point of contact in our
company.</span></i><span lang="EN-US"><o:p></o:p></span></p><p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p><p class="MsoNormal">
</p><p class="MsoNormal"><i><span lang="EN-US">Best regards,</span></i><o:p></o:p></p><p></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-4" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ENG - B2C relance 1 (J+7)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="Reminder – Past due invoice #{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">Hello #{Title}
#{CustomerAccount.LastName},</span></i></p><p class="MsoNormal"><i><span lang="EN-US">We are following up on our email dated on the #{Last.action.date} where we informed
you that invoice ##{Invoice.Number} was overdue for payment since #{Invoice.DueDate}.
We regret to inform you that we have not yet received payment from you for this matter.&nbsp;</span></i></p><p class="MsoNormal"><i><span lang="EN-US">We ask that
you proceed with the payment of the invoice as soon as possible and invite you to contact our customer support if you have any difficulties in paying this
invoice.</span></i></p><p class="MsoNormal"><i><span lang="EN-US">You will find a copy of the invoice attached.</span></i></p><p class="MsoNormal">
</p><p class="MsoNormal"><i><span lang="EN-US">Kind regards,&nbsp;</span></i></p><p></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-5" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ENG - B2C relance 4 (J+14)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="DunningLetter for Invoice #{Invoice.number}" />
            <column name="is_active" value="1" />
            <column name="channel" value="LETTER" />
            <column name="trading_language_id" value="-1" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">#{Compagny.name}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.adress}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.postalcode}; #{Compagny.city}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.phone}</span></i><span lang="EN-US"><br><!--[if !supportLineBreakNewLine]--><br><!--[endif]--></span><span lang="EN-US"><o:p></o:p></span></p>

<p class="MsoNormal"><i><span lang="EN-US">#{Title.client}
#{Contact.client} </span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.adress}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.postalcode}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.client.city}</span></i><span lang="EN-US"><br>
<!--[if !supportLineBreakNewLine]--><br><!--[endif]--></span><i><span lang="EN-US"><o:p></o:p></span></i></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">#{Compagny.city}, on #{day.date}</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">#{Title.client},</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">By a first email dated (Date of 1st reminder), then a second one dated
(Date of 2nd reminder), we asked you to proceed to the payment of the invoice&nbsp;</span><i><span lang="EN-US">#{Invoice.number}</span></i><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"=""> for an
amount of </span><i><span lang="EN-US">#{Invoice.total}</span></i><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"=""><o:p></o:p></span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">Unless we are mistaken, we regret to say that we have not
yet received payment of invoice. We therefore asky ou to proceed immediately to
its payment.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">You will find a copy of the invoice attached to this letter.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">Please disregard this letter if your payment has been sent to us prior to
receiving this letter.</span></p><p class="MsoNormal"><span lang="EN-US" style="font-family: " segoe="" ui",="" "sans-serif";"="">We remain at your disposal in case of any questions. Please accept,
Madam / Sir, the assurance of our best regards.</span></p><p class="MsoNormal"><span style="font-family: " segoe="" ui",="" "sans-serif";"="">Signature </span></p><p class="MsoNormal">
</p><p class="MsoNormal"><span style="font-family: " segoe="" ui",="" "sans-serif";"="">Yourname and surname</span></p><p></p>                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-6" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FR - B2B relance 1 (J+15)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="règlement facture #{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i>Bonjour #{Title} #{CustomerAccount.LastName},<o:p></o:p></i></p><p class="MsoNormal"><i>&nbsp;</i></p><p class="MsoNormal"><i>Nous vous contactons concernant votre facture #{Invoice.Number}
qui est en retard de paiement depuis le #{Invoice.DueDate}. Vous trouverez une
copie de la facture en pièce jointe.<o:p></o:p></i></p><p class="MsoNormal"><i>Merci de procéder au règlement de la facture dans les
plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de
prendre contact avec nos services ou votre interlocuteur habituel afin de
trouver une solution.<o:p></o:p></i></p><p class="MsoNormal"></p><p class="MsoNormal"><i>Bien à vous,</i><o:p></o:p></p><p></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-7" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FR - B2B relance 4 (J+35)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="Lettre de relance pour la facture #{Invoice.number}" />
            <column name="is_active" value="1" />
            <column name="channel" value="LETTER" />
            <column name="trading_language_id" value="-2" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">#{Compagny.name}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.adress}</span></i><span lang="EN-US"><br></span><i><span lang="EN-US">#{Compagny.postalcode}; #{Compagny.city}</span></i><span lang="EN-US"><br></span><i><span lang="EN-US">#{Compagny.phone}</span></i><span lang="EN-US"><br><!--[if !supportLineBreakNewLine]--><br><!--[endif]--><o:p></o:p></span></p>

<i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, &quot;sans-serif&quot;;">#{Contact.client} </span></i><span lang="EN-US" style="font-size:11.0pt;line-height:107%;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;
mso-bidi-theme-font:minor-bidi;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">&nbsp;/ </span><i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, &quot;sans-serif&quot;;">#{Compagny.client.name}</span></i><span lang="EN-US" style="font-size:11.0pt;line-height:107%;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;
mso-bidi-theme-font:minor-bidi;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><br>
</span><i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, &quot;sans-serif&quot;;">#{Compagny.client.adress}</span></i><span lang="EN-US" style="font-size:
11.0pt;line-height:107%;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:Arial;mso-bidi-theme-font:
minor-bidi;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><br>
</span><i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, &quot;sans-serif&quot;;">#{Compagny.client.postalcode}</span></i><div><i style="font-size: 10pt;"><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, &quot;sans-serif&quot;;">#{Compagny.client.city}</span></i><p class="MsoNormal"><i><br></i></p><p class="MsoNormal"><i>#{Compagny.city}</i>, le <i>#<a>{day.date}</a></i><br><!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></p><p class="MsoNormal"><i>#{Title.client}</i>,<br><!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></p><p class="MsoNormal">Par un premier courriel en date du (Date de la 1ère relance),
puis un second en date du (Date de la 2ème relance), nous vous avions demandé de procéder
au paiement de la facture <i>#{Invoice.number}</i>) d’un montant de <i>#{Invoice.total}</i>).<br><!--[endif]--></p><p class="MsoNormal">Sauf erreur de notre part, nous sommes au regret de constater
que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture.
Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.<br><!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></p><p class="MsoNormal">Vous trouverez en pièce jointe de ce courrier une copie de lafacture en question.</p><p class="MsoNormal">Veuillez ne pas tenir compte de cette lettres si votre règlement
nous a été adressé avant la réception du présent courrier.<br><!--[if !supportLineBreakNewLine]--><br><!--[endif]--></p><p class="MsoNormal">Nous restons à votre disposition dans
l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.<br><br><!--[endif]--></p><p class="MsoNormal"><i>Company Signature</i></p><div><div><div id="_com_1" class="msocomtxt" language="JavaScript"><!--[if !supportAnnotations]--></div><!--[endif]--></div></div><p></p></div>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-8" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FR - B2C relance 1 (J+1)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="règlement facture #{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style=""></p><p class="MsoNormal"><i><span lang="EN-US">Bonjour #{Title} #{CustomerAccount.LastName},</span></i></p><p class="MsoNormal"><i>Nous vous contactons concernant votre facture #{Invoice.Number}
qui est en retard de paiement depuis le #{Invoice.DueDate}. Vous trouverez une
copie de la facture en pièce jointe.<o:p></o:p></i></p><p class="MsoNormal"><i>Merci de procéder au règlement de la facture dans les
plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de
prendre contact avec nos services ou votre interlocuteur habituel afin de
trouver une solution.<o:p></o:p></i></p><p class="MsoNormal"></p><p class="MsoNormal"><i>Bien à vous,</i><o:p></o:p></p><div><div><div id="_com_1" class="msocomtxt" language="JavaScript">
<!--[if !supportAnnotations]--></div><!--[endif]--></div></div><p></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-9" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FR - B2C relance 2 (J+7)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="règlement facture #{Invoice.Number} - #{Company.Name}" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style="font-style: normal;"></p><p class="MsoNormal"><i><span lang="EN-US">Bonjour #{Title} #{CustomerAccount.LastName},<o:p></o:p></span></i></p><p class="MsoNormal"><br></p><p class="MsoNormal"><span style="font-style: italic;">Nous faisons suite à notre courriel en date du#</span><a style=""><span style="font-style: italic;">{Last.action.date}</span>&nbsp;</a><i>où
nous vous informions que votre facture #{Invoice.Number}était en retard de paiement depuis le #{Invoice.DueDate}. Nous sommes dans le regret de vous
informer que nous n’avons toujours pas reçu de paiement de votre part à ce sujet. <o:p></o:p></i></p><p class="MsoNormal"><i>Nous vous demandons de procéder au règlement de la
facture dans les meilleurs délais et nous invitons à contacter au plus vite notre assistance client si vous éprouvez des difficultés à régler cette
facture.<o:p></o:p></i></p><p class="MsoNormal"><i>Vous trouverez à nouveau une copie de la facture en pièce jointe.<o:p></o:p></i></p><p class="MsoNormal"><i>Bien à vous,</i></p><div><div><div id="_com_1" class="msocomtxt" language="JavaScript"><p class="MsoNormal"><!--[endif]--></p>
<!--[if !supportAnnotations]--></div><!--[endif]--></div></div><div style="font-style: normal;"><div><div id="_com_1" class="msocomtxt" language="JavaScript"><p class="MsoNormal"><!--[endif]--></p><!--[if !supportAnnotations]--></div>
<!--[endif]--></div></div><div style="font-style: normal;"><div><div id="_com_1" class="msocomtxt" language="JavaScript"><!--[if !supportAnnotations]--></div><!--[endif]--></div></div><p style="font-style: normal;"></p>
                ]]>
            </column>
        </insert>
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-10" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="FR - B2C relance 4 (J+14)" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="Lettre de relance pour la facture #{Invoice.number})" />
            <column name="is_active" value="1" />
            <column name="channel" value="LETTER" />
            <column name="trading_language_id" value="-2" />
            <column name="htmlcontent">
                <![CDATA[
<p class="MsoNormal" style="font-weight: normal; font-style: normal;"></p><p class="MsoNormal" style="font-weight: normal;"><i><span lang="EN-US">#{Compagny.name}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.adress}</span></i><span lang="EN-US"><br></span><i><span lang="EN-US">#{Compagny.postalcode}; #{Compagny.city}</span></i><span lang="EN-US"><br>
</span><i><span lang="EN-US">#{Compagny.phone}</span></i><span lang="EN-US"><br><!--[if !supportLineBreakNewLine]--><br><!--[endif]--><o:p></o:p></span></p>

<i style=""><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";">#{client.title} , #{Contact.client}
</span></i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";"><br>
</span><i style=""><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";">#{Compagny.client.adress}</span></i><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";"><br>
</span><i style=""><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";">#{Compagny.client.postalcode}</span></i><div style=""><i style="font-size: 10pt;"><span lang="EN-US" style="font-size: 11pt; line-height: 107%; font-family: Calibri, "sans-serif";">#{Compagny.client.city}</span></i><p class="MsoNormal" style="font-weight: normal;"><i><br></i></p><p class="MsoNormal" style="font-weight: normal;"><i>#{Compagny.city}</i>, le <i>#{day.date}</i><br>
<!--[if !supportLineBreakNewLine]--><br><!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;"><i>#{Title.client}</i>,<br><!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;">Par un premier courriel en date du (Date de la 1ère relance), puis un second en date du (Date de la 2ème relance), nous vous avions demandé de
procéder au paiement de la facture <i>#{Invoice.number}</i>) d’un montant de <i>#{Invoice.total}</i>).<br><!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;">Sauf erreur de notre part, nous sommes au regret de constater
que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture.
Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.<br>
<!--[if !supportLineBreakNewLine]--><br><!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;">Vous trouverez en pièce jointe de ce courrier une copie de la
facture en question.</p><p class="MsoNormal" style="font-weight: normal;">Veuillez ne pas tenir compte de cette lettre si votre règlement
nous a été adressé avant la réception du présent courrier.<br><!--[if !supportLineBreakNewLine]--><br>
<!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;">Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos
salutations les meilleures.<br> <!--[if !supportLineBreakNewLine]--><br> <!--[endif]--></p><p class="MsoNormal" style="font-weight: normal;">
</p><p class="MsoNormal" style="font-weight: normal;"><i>Company Signature<o:p></o:p></i></p><div style="font-weight: normal;"><div><div id="_com_1" class="msocomtxt" language="JavaScript"><p class="MsoNormal"><!--[endif]--></p>
<!--[if !supportAnnotations]--></div><!--[endif]--></div></div><div style="font-weight: normal; font-style: normal;"><div><div id="_com_1" class="msocomtxt" language="JavaScript"><p class="MsoNormal"><!--[endif]--></p><!--[if !supportAnnotations]--></div>
<!--[endif]--></div></div><div style="font-weight: normal; font-style: normal;"><div><div id="_com_1" class="msocomtxt" language="JavaScript">
<!--[if !supportAnnotations]--></div><!--[endif]--></div></div><p style="font-weight: normal; font-style: normal;"></p></div>
                ]]>
            </column>
        </insert>
    </changeSet>

    <changeSet author="AbdelkaderBouazza" id="INTRD-2698-20211028">
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />

			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="DUNNING_ACTION" />
			<column name="description" value="dunning action" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-2547-2480-2482-2478_20211021" author="khalidHORRI" failOnError="false">
		<insert tableName="billing_trading_language">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />

			<column name="created" valueDate="2015-03-19 00:04:19.152" />
			<column name="pr_description" value="English" />
			<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="billing_trading_language">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />

			<column name="created" valueDate="2015-03-19 00:04:19.174" />
			<column name="pr_description" value="French" />
			<column name="language_id" valueNumeric="12" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-2731_20211103" author="AmineBENAICHA">

		<!-- Dunning Policies B2C -->
		<insert tableName="dunning_policy">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_name" value="Default policy B2C-EN" />
			<column name="policy_description" value="This is a default policy for B2C" />
			<column name="min_balance_trigger" valueNumeric="1" />
			<column name="min_balance_trigger_currency_id" valueNumeric="5" /><!-- € -->
			<column name="determine_level_by" value="DAYS_OVERDUE" />
			<column name="policy_priority" valueNumeric="null" />
			<column name="attach_invoices_to_emails" valueNumeric="1" />
			<column name="is_active_policy" valueNumeric="1" />
		</insert>
		<insert tableName="dunning_policy_rule">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="rule_joint" value="null" />
			<column name="dunning_policy_id" valueNumeric="-1" />
		</insert>
		<insert tableName="dunning_policy_rule_line">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_condition_target" value="IsIndividual" />
			<column name="policy_condition_operator" value="equals" />
			<column name="policy_condition_target_value" value="TRUE" />
			<column name="rule_line_joint" value="null" />
			<column name="dunning_policy_rule_id" valueNumeric="-1" />
		</insert>

		<!-- Level 1 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL1" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="1" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-1" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2C LVL1" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-3" /><!-- Template name= ENG - B2C relance 1 (J+1) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-1" />
			<column name="dunning_level_id" valueNumeric="-1" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="1" />
			<column name="dunning_level_id" valueNumeric="-1" />
			<column name="dunning_policy_id" valueNumeric="-1" />
		</insert>
		
		<!-- Level 2 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL2" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="7" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2C LVL2" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-4" /><!-- Template name= ENG - B2C relance 2 (J+7) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-2" />
			<column name="dunning_level_id" valueNumeric="-2" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="2" />
			<column name="dunning_level_id" valueNumeric="-2" />
			<column name="dunning_policy_id" valueNumeric="-1" />
		</insert>
		
		<!-- Level 3 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-3" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL3" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="10" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-3" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2C LVL3" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-3" />
			<column name="dunning_level_id" valueNumeric="-3" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="3" />
			<column name="dunning_level_id" valueNumeric="-3" />
			<column name="dunning_policy_id" valueNumeric="-1" />
		</insert>
		
		<!-- Level 4 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-4" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL4" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="1" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="14" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-4" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Letter B2C LVL4" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="LETTER" />
			<column name="action_notification_template_id" valueNumeric="-5" /><!-- Template name= ENG - B2C relance 4 (J+14) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-4" />
			<column name="dunning_level_id" valueNumeric="-4" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="4" />
			<column name="dunning_level_id" valueNumeric="-4" />
			<column name="dunning_policy_id" valueNumeric="-1" />
		</insert>		
		<!-- ****************************************** -->
		<!-- ****************************************** -->
		<!-- ****************************************** -->
		<!-- Dunning Policies B2B -->
		<insert tableName="dunning_policy">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_name" value="Default policy B2B-EN" />
			<column name="policy_description" value="This is a default policy for B2B" />
			<column name="min_balance_trigger" valueNumeric="1" />
			<column name="min_balance_trigger_currency_id" valueNumeric="5" /><!-- € -->
			<column name="determine_level_by" value="DAYS_OVERDUE" />
			<column name="policy_priority" valueNumeric="null" />
			<column name="attach_invoices_to_emails" valueNumeric="1" />
			<column name="is_active_policy" valueNumeric="1" />
		</insert>
		<insert tableName="dunning_policy_rule">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="rule_joint" value="null" />
			<column name="dunning_policy_id" valueNumeric="-2" />
		</insert>
		<insert tableName="dunning_policy_rule_line">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_condition_target" value="IsCompany" />
			<column name="policy_condition_operator" value="equals" />
			<column name="policy_condition_target_value" value="TRUE" />
			<column name="rule_line_joint" value="null" />
			<column name="dunning_policy_rule_id" valueNumeric="-2" />
		</insert>

		<!-- Level 1 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-5" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL1B2B" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="15" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-5" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2B LVL1" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-1" /><!-- Template name= ENG - B2B relance 1 (J+15) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-5" />
			<column name="dunning_level_id" valueNumeric="-5" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="1" />
			<column name="dunning_level_id" valueNumeric="-5" />
			<column name="dunning_policy_id" valueNumeric="-2" />
		</insert>
		
		<!-- Level 2 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-6" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL2B2B" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="22" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-6" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2B LVL2" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-6" />
			<column name="dunning_level_id" valueNumeric="-6" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="2" />
			<column name="dunning_level_id" valueNumeric="-6" />
			<column name="dunning_policy_id" valueNumeric="-2" />
		</insert>
		
		<!-- Level 3 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-7" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL3B2B" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="27" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-7" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2B LVL3" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-7" />
			<column name="dunning_level_id" valueNumeric="-7" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="3" />
			<column name="dunning_level_id" valueNumeric="-7" />
			<column name="dunning_policy_id" valueNumeric="-2" />
		</insert>
		
		<!-- Level 4 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-8" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL4B2B" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="1" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="35" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-8" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Letter B2B LVL4" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="LETTER" />
			<column name="action_notification_template_id" valueNumeric="-2" /><!-- Template name= ENG - B2B relance 4 (J+35) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-8" />
			<column name="dunning_level_id" valueNumeric="-8" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="4" />
			<column name="dunning_level_id" valueNumeric="-8" />
			<column name="dunning_policy_id" valueNumeric="-2" />
		</insert>

	</changeSet>

	<changeSet id="INTRD-2732_20211104" author="AmineBENAICHA">

		<!-- Dunning Policies B2C -->
		<insert tableName="dunning_policy">
			<column name="id" valueNumeric="-10" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_name" value="Default policy B2C-FR" />
			<column name="policy_description" value="This is a default policy for B2C" />
			<column name="min_balance_trigger" valueNumeric="1" />
			<column name="min_balance_trigger_currency_id" valueNumeric="5" /><!-- € -->
			<column name="determine_level_by" value="DAYS_OVERDUE" />
			<column name="policy_priority" valueNumeric="null" />
			<column name="attach_invoices_to_emails" valueNumeric="1" />
			<column name="is_active_policy" valueNumeric="1" />
		</insert>
		<insert tableName="dunning_policy_rule">
			<column name="id" valueNumeric="-10" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="rule_joint" value="null" />
			<column name="dunning_policy_id" valueNumeric="-10" />
		</insert>
		<insert tableName="dunning_policy_rule_line">
			<column name="id" valueNumeric="-10" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_condition_target" value="IsIndividual" />
			<column name="policy_condition_operator" value="equals" />
			<column name="policy_condition_target_value" value="TRUE" />
			<column name="rule_line_joint" value="null" />
			<column name="dunning_policy_rule_id" valueNumeric="-10" />
		</insert>

		<!-- Level 1 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-10" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL1-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="1" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-10" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2C LVL1-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-8" /><!-- Template name= FR - B2C relance 1 (J+1) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-10" />
			<column name="dunning_level_id" valueNumeric="-10" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="1" />
			<column name="dunning_level_id" valueNumeric="-10" />
			<column name="dunning_policy_id" valueNumeric="-10" />
		</insert>
		
		<!-- Level 2 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-20" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL2-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="7" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-20" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2C LVL2-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-9" /><!-- Template name= FR - B2C relance 2 (J+7) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-20" />
			<column name="dunning_level_id" valueNumeric="-20" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="2" />
			<column name="dunning_level_id" valueNumeric="-20" />
			<column name="dunning_policy_id" valueNumeric="-10" />
		</insert>
		
		<!-- Level 3 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-30" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL3-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="10" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-30" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2C LVL3-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-30" />
			<column name="dunning_level_id" valueNumeric="-30" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="3" />
			<column name="dunning_level_id" valueNumeric="-30" />
			<column name="dunning_policy_id" valueNumeric="-10" />
		</insert>
		
		<!-- Level 4 B2C -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-40" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL4-B2C-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="1" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="14" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-40" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Letter B2C LVL4-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="LETTER" />
			<column name="action_notification_template_id" valueNumeric="-10" /><!-- Template name= FR - B2C relance 4 (J+14) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-40" />
			<column name="dunning_level_id" valueNumeric="-40" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="4" />
			<column name="dunning_level_id" valueNumeric="-40" />
			<column name="dunning_policy_id" valueNumeric="-10" />
		</insert>		
		<!-- ****************************************** -->
		<!-- ****************************************** -->
		<!-- ****************************************** -->
		<!-- Dunning Policies B2B -->
		<insert tableName="dunning_policy">
			<column name="id" valueNumeric="-20" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_name" value="Default policy B2B-FR" />
			<column name="policy_description" value="This is a default policy for B2B" />
			<column name="min_balance_trigger" valueNumeric="1" />
			<column name="min_balance_trigger_currency_id" valueNumeric="5" /><!-- € -->
			<column name="determine_level_by" value="DAYS_OVERDUE" />
			<column name="policy_priority" valueNumeric="null" />
			<column name="attach_invoices_to_emails" valueNumeric="1" />
			<column name="is_active_policy" valueNumeric="1" />
		</insert>
		<insert tableName="dunning_policy_rule">
			<column name="id" valueNumeric="-20" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="rule_joint" value="null" />
			<column name="dunning_policy_id" valueNumeric="-20" />
		</insert>
		<insert tableName="dunning_policy_rule_line">
			<column name="id" valueNumeric="-20" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="policy_condition_target" value="IsCompany" />
			<column name="policy_condition_operator" value="equals" />
			<column name="policy_condition_target_value" value="TRUE" />
			<column name="rule_line_joint" value="null" />
			<column name="dunning_policy_rule_id" valueNumeric="-20" />
		</insert>

		<!-- Level 1 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-50" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL1B2B-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="15" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-50" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Email B2B LVL1-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="AUTOMATIC" />
			<column name="action_channel" value="EMAIL" />
			<column name="action_notification_template_id" valueNumeric="-6" /><!-- Template name= FR - B2B relance 1 (J+15) -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-50" />
			<column name="dunning_level_id" valueNumeric="-50" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="1" />
			<column name="dunning_level_id" valueNumeric="-50" />
			<column name="dunning_policy_id" valueNumeric="-20" />
		</insert>
		
		<!-- Level 2 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-60" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL2B2B-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="22" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-60" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2B LVL2-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-60" />
			<column name="dunning_level_id" valueNumeric="-60" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="2" />
			<column name="dunning_level_id" valueNumeric="-60" />
			<column name="dunning_policy_id" valueNumeric="-20" />
		</insert>
		
		<!-- Level 3 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-70" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL3B2B-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="0" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="27" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-70" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Call B2B LVL3-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="CALL" />
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-70" />
			<column name="dunning_level_id" valueNumeric="-70" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="3" />
			<column name="dunning_level_id" valueNumeric="-70" />
			<column name="dunning_policy_id" valueNumeric="-20" />
		</insert>
		
		<!-- Level 4 B2B -->
		<insert tableName="dunning_level">
			<column name="id" valueNumeric="-80" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="LVL4-B2B-FR" />
			<column name="description" value="N/A" />
			<column name="reminder" valueNumeric="0" />
			<column name="end_dunning_level" valueNumeric="1" />
			<column name="active" valueNumeric="1" />
			<column name="days_overdue" valueNumeric="35" />
			<column name="min_balance" valueNumeric="0" />
			<column name="charge_currency_id" valueNumeric="null" />
			<column name="soft_decline" valueNumeric="0" />
		</insert>
		<insert tableName="ar_dunning_action">
			<column name="id" valueNumeric="-80" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="Letter B2B LVL4-FR" />
			<column name="description" value="N/A" />
			<column name="is_action_active" valueNumeric="1" />
			<column name="action_type" value="SEND_NOTIFICATION" />
			<column name="action_mode" value="MANUAL" />
			<column name="action_channel" value="LETTER" />
			<column name="action_notification_template_id" valueNumeric="-7" /><!-- Template name= FR - B2B relance 4 (J+35)  -->
		</insert>
		<insert tableName="dunning_level_dunning_action">
			<column name="dunning_action_id" valueNumeric="-80" />
			<column name="dunning_level_id" valueNumeric="-80" />
		</insert>
		<insert tableName="dunning_policy_level">
			<column name="id" valueSequenceNext="dunning_policy_level_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence" valueNumeric="4" />
			<column name="dunning_level_id" valueNumeric="-80" />
			<column name="dunning_policy_id" valueNumeric="-20" />
		</insert>

	</changeSet>

	<changeSet id="INTRD-2849_20211110" author="TarikRabeh">
		<update tableName="com_message_template">
            <column name="subject" value="Reminder – Past due invoice #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Hello #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>We are reaching out to you in regards of your invoice #{invoice.invoiceNumber} and more specifically its payment that was due on the #{invoice.dueDate}. You can find a copy of the invoice attached to this email.</p>
<p>Please make sure to pay the invoice in full as soon as possible. If you have any additional question, do not hesitate to contact our services or your point of contact in our company.</p>
<p>Best regards,</p>
                ]]>
			</column>
			<where>id=-1</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Dunning Letter for Invoice #{invoice.invoiceNumber}" />
			<column name="htmlcontent">
			    <![CDATA[
#{billingAccount.description}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode}; #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{customerAccount.description} / #{customerAccount.name.firstName}<br>
#{customerAccount.address.address1}<br>
#{customerAccount.address.zipCode}<br>
#{customerAccount.address.city}<br>

<p>#{billingAccount.address.city}, on #{day.date}</p>
<p>#{customerAccount.legalEntityType.code},</p>
<p>By a first email dated (Date of 1st reminder), then a second one dated (Date of 2nd reminder), we asked you to proceed to the payment of the invoice #{invoice.invoiceNumber} for an amount of #{invoice.amountWithTax}</p>
<p>Unless we are mistaken, we regret to say that we have not yet received payment of invoice. We therefore ask you to proceed immediately to its payment.</p>
<p>You will find a copy of the invoice attached to this letter.</p>
<p>Please disregard this letter if your payment has been sent to us prior to receiving this letter letter.</p>
<p>We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards.</p>
<p>Signature</p>
<p>Your name and surname</p>
                ]]>
			</column>
			<where>id=-2</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Reminder – Past due invoice #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Hello #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>We are reaching out to you in regards of your invoice #{invoice.invoiceNumber} and more specifically its payment that was due on the #{invoice.dueDate}. You can find a copy of the invoice attached to this email.</p>
<p>Please make sure to pay the invoice in full as soon as possible. If you have any additional question, do not hesitate to contact our services or your point of contact in our company.</p>
<p>Best regards,</p>	
                ]]>
			</column>
			<where>id=-3</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Reminder – Past due invoice #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Hello #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>We are following up on our email dated on the #{dunningCollectionPlan.lastActionDate} where we informed you that invoice #{invoice.invoiceNumber} was overdue for payment since #{invoice.dueDate}. We regret to inform you that we have not yet received payment from you for this matter.</p>
<p>We ask that you proceed with the payment of the invoice as soon as possible and invite you to contact our customer support if you have any difficulties in paying this invoice.</p>
<p>You will find a copy of the invoice attached.</p>
<p>Kind regards,</p>
                ]]>			
			</column>
			<where>id=-4</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Dunning Letter for Invoice #{invoice.invoiceNumber}" />
			<column name="htmlcontent">
			    <![CDATA[
#{billingAccount.description}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode}; #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{customerAccount.legalEntityType.code}   #{customerAccount.description}<br>
#{customerAccount.address.address1}<br>
#{customerAccount.address.zipCode}<br>
#{customerAccount.address.city}<br>

<p>#{billingAccount.address.city}, on #{day.date}</p> 
<p>#{customerAccount.legalEntityType.code},</p>
<p>By a first email dated (Date of 1st reminder), then a second one dated (Date of 2nd reminder), we asked you to proceed to the payment of the invoice #{invoice.invoiceNumber} for an amount of #{invoice.amountWithTax}</p>
<p>Unless we are mistaken, we regret to say that we have not yet received payment of invoice. We therefore ask you to proceed immediately to its payment.</p>
<p>You will find a copy of the invoice attached to this letter.</p>
<p>Please disregard this letter if your payment has been sent to us prior to receiving this letter letter.</p>
<p>We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards. </p>
<p>Signature</p>
<p>Your name and surname</p>
                ]]>
			</column>
			<where>id=-5</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Règlement facture #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Bonjour #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>Nous vous contactons concernant votre facture #{invoice.invoiceNumber} qui est en retard de paiement depuis le #{invoice.dueDate}. Vous trouverez une copie de la facture en pièce jointe.</p>
<p>Merci de procéder au règlement de la facture dans les plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de prendre contact avec nos services ou votre interlocuteur habituel afin de trouver une solution.</p>
<p>Bien à vous,</p>
                ]]>
			</column>
			<where>id=-6</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Lettre de relance pour la facture #{invoice.invoiceNumber}" />
			<column name="htmlcontent">
			    <![CDATA[
#{billingAccount.description}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode}; #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{customerAccount.description} / #{customerAccount.name.firstName}<br>
#{customerAccount.address.address1}<br>
#{customerAccount.address.zipCode}<br>
#{customerAccount.address.city}<br>

<p>#{billingAccount.address.city}, le #{day.date}</p>
<p>#{customerAccount.legalEntityType.code},</p>
<p>Par un premier courriel en date du (Date de la 1ère relance), puis un second en date du (Date de la 2ème relance), nous vous avions demandé de procéder au paiement de la facture #{invoice.invoiceNumber}) d’un montant de #{invoice.amountWithTax}).</p>
<p>Sauf erreur de notre part, nous sommes au regret de constater que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture. Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.</p>
<p>Vous trouverez en pièce jointe de ce courrier une copie de la facture en question.</p>
<p>Veuillez ne pas tenir compte de cette lettre si votre règlement nous a été adressé avant la réception du présent courrier.</p>
<p>Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.</p>
<p>Company Signature</p>
                ]]>
			</column>
			<where>id=-7</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Règlement facture #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Bonjour #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>Nous vous contactons concernant votre facture #{invoice.invoiceNumber} qui est en retard de paiement depuis le #{invoice.dueDate}. Vous trouverez une copie de la facture en pièce jointe.</p>
<p>Merci de procéder au règlement de la facture dans les plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de prendre contact avec nos services ou votre interlocuteur habituel afin de trouver une solution.</p>
<p>Bien à vous,</p>
                ]]>
			</column>
			<where>id=-8</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Règlement facture #{invoice.invoiceNumber} - #{billingAccount.description}" />
			<column name="htmlcontent">
			    <![CDATA[
<p>Bonjour #{customerAccount.legalEntityType.code} #{customerAccount.name.lastName},</p>
<p>Nous faisons suite à notre courriel en date du #{dunningCollectionPlan.lastActionDate}  où nous vous informions que votre facture #{invoice.invoiceNumber} était en retard de paiement depuis le #{invoice.dueDate}. Nous sommes dans le regret de vous informer que nous n’avons toujours pas reçu de paiement de votre part à ce sujet.</p> 
<p>Nous vous demandons de procéder au règlement de la facture dans les meilleurs délais et nous invitons à contacter au plus vite notre assistance client si vous éprouvez des difficultés à régler cette facture.</p>
<p>Vous trouverez à nouveau une copie de la facture en pièce jointe.</p>
<p>Bien à vous,</p>
                ]]>
			</column>
			<where>id=-9</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="Lettre de relance pour la facture #{invoice.invoiceNumber})" />
			<column name="htmlcontent">
			    <![CDATA[
#{billingAccount.description}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode}; #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{customerAccount.legalEntityType.code} , #{customerAccount.description}<br>
#{customerAccount.address.address1}<br>
#{customerAccount.address.zipCode}<br>
#{customerAccount.address.city}<br>

<p>#{billingAccount.address.city}, le #{day.date}</p>
<p>#{customerAccount.legalEntityType.code},</p>
<p>Par un premier courriel en date du (Date de la 1ère relance), puis un second en date du (Date de la 2ème relance), nous vous avions demandé de procéder au paiement de la facture #{invoice.invoiceNumber}) d’un montant de #{invoice.amountWithTax}).</p>
<p>Sauf erreur de notre part, nous sommes au regret de constater que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture. Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.</p>
<p>Vous trouverez en pièce jointe de ce courrier une copie de la facture en question.</p>
Veuillez ne pas tenir compte de cette lettre si votre règlement nous a été adressé avant la réception du présent courrier.</p>
<p>Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.</p>
<p>Company Signature</p>
                ]]>
			</column>
			<where>id=-10</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-2961_20211109-add-status-color_code" author="AmineBENAICHA">
		<update tableName="dunning_collection_plan_statuses">
			<column name="color_code">#FFA000</column>
			<where>status='Pause'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="color_code">#991A12</column>
			<where>status='Stop'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="color_code">#1976D2</column>
			<where>status='Succès'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="color_code">#F44336</column>
			<where>status='Echec'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="color_code">#00C853</column>
			<where>status='Actif'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-2962_20211110" author="AmineBENAICHA">
		<insert tableName="dunning_stop_reasons">
			<column name="id" valueSequenceNext="dunning_stop_reasons_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
        	<column name="stop_reason" value="Exclusion" />
        	<column name="description" value="Client exclu du plan de recouvrement pour raison légitime. A expliciter par l'agent de recouvrement" />
        	<column name="dunning_settings_id" valueNumeric="1" />
       	</insert>
       	<insert tableName="dunning_stop_reasons">
       		<column name="id" valueSequenceNext="dunning_stop_reasons_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
        	<column name="stop_reason" value="Changement de politique de recouvrement" />
        	<column name="description" value="Changement de politique de recouvrement amenant la génération d’un nouveau plan de recouvrement" />
        	<column name="dunning_settings_id" valueNumeric="1" />
       	</insert>
   	</changeSet>
	<changeSet id="INTRD-2701_20211124" author="hichamElHaloui">
		<update tableName="meveo_timer">
			<column name="sc_d_o_week" value="*" />
			<where>id=-2</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-3262_20211123" author="YoussefIZEM">
		<update tableName="dunning_collection_plan_statuses">
			<column name="status">ACTIVE</column>
			<where>status = 'Actif'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="status">SUCCESS</column>
			<where>status = 'Succès'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="status">FAILED</column>
			<where>status = 'Echec'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="status">PAUSED</column>
			<where>status = 'Pause'</where>
		</update>
		<update tableName="dunning_collection_plan_statuses">
			<column name="status">STOPPED</column>
			<where>status = 'Stop'</where>
		</update>
	</changeSet>

	<changeSet id="INTRD-3334_2021_11_26" author="ZBariki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="job_category" value="ACCOUNTING" />
			<column name="job_template" value="AccountingPeriodClosingJob" />
			<column name="code" value="AccountingPeriodClosingJob" />
			<column name="creator" value="applicationInitializer" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="description" value="Accounting Period Closing Job" />
			<column name="uuid" value="AccountingPeriodClosingJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-3316_20211129_query_notification_template" author="TarikRabeh">
		<update tableName="com_message_template">
            <column name="subject" value="[opencell] Query result #{reportQueryName} #{startDate}" />
            <column name="textcontent"></column>
            <column name="htmlcontent">
                <![CDATA[Dear #{userName},

The result for your query is ready.
Check the result on <a href="#{portalResultLink}">Opencell Portal</a>

Query : #{reportQueryName}
Started : #{startDate}
Duration : #{duration}
Line count : #{lineCount}

Best regards,

Opencell team.
                ]]>
            </column>
            <where>code='REPORT_QUERY_RESULT_SUCCESS'</where>
		</update>
		<update tableName="com_message_template">
            <column name="subject" value="[opencell] Query failed #{reportQueryName} #{startDate}" />
			<where>code='REPORT_QUERY_RESULT_FAILURE'</where>
		</update>
    </changeSet>

	<changeSet id="INTRD-2756_20211110" author="ZBariki">
		<insert tableName="meveo_job_instance">
			<column name="id"  valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="2015-03-19 00:04:19.913" />
			<column name="job_category" value="DUNNING" />
			<column name="job_template" value="DunningCollectionPlanJob" />
			<column name="code" value="DunningCollectionPlan_Job" />

			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-1" />
			<column name="uuid" value="DunningCollectionPlanJob_Job" />
		</insert>
	</changeSet>

	<changeSet author="ZBariki" id="INTRD-3040_20211110">
		<update tableName="dunning_policy_rule_line">
			<column name="policy_condition_target" value="isCompany" />
			<column name="policy_condition_target_value" value="FALSE" />
			<column name="policy_condition_operator" value="EQUALS" />
			<where> policy_condition_target='IsIndividual'</where>
		</update>
		<update tableName="dunning_policy_rule_line">
			<column name="policy_condition_target" value="isCompany" />
			<column name="policy_condition_operator" value="EQUALS" />
			<where> policy_condition_target='IsCompany'</where>
		</update>
	</changeSet>

    <changeSet id="INTRD-2756_20211110" author="Mohammed_ELAZZOUZI">
		<insert tableName="meveo_job_instance">
			<column name="id"  valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="DUNNING" />
			<column name="job_template" value="ResumeDunningCollectionPlanJob" />
			<column name="code" value="ResumeDunningCollectionPlan_Job" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="uuid" value="ResumeDunningCollectionPlan_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-2910_20211124" author="ZBariki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="2021-11-24 00:04:19.913" />
			<column name="job_category" value="DUNNING" />
			<column name="job_template" value="TriggerReminderDunningLevelJob" />
			<column name="code" value="TriggerReminderDunningLevel_Job" />

			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-1" />
			<column name="uuid" value="TriggerReminderDunningLevelJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-2909_20211201" author="ZBariki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="2021-12-01 00:04:19.913" />
			<column name="job_category" value="DUNNING" />
			<column name="job_template" value="TriggerCollectionPlanLevelsJob" />
			<column name="code" value="TriggerCollectionPlanLevelsJob_Job" />

			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-1" />
			<column name="uuid" value="TriggerCollectionPlanLevelsJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-3507_20220218" author="HatimOUDAD">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="2022-02-18 00:04:19.913" />
			<column name="job_category" value="PAYMENT" />
			<column name="job_template" value="AutoRefundSecurityDepositJob" />
			<column name="code" value="AutoRefundSecurityDepositJob_Job" />

			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-1" />
			<column name="uuid" value="AutoRefundSecurityDepositJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-5669_20220324" author="HichamHANINE">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="2022-02-18 00:04:19.913" />
			<column name="job_category" value="UTILS" />
			<column name="job_template" value="AutoUpdateCurrentRateJob" />
			<column name="code" value="AutoUpdateCurrentRateJob_Job" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-3" />
			<column name="uuid" value="AutoUpdateCurrentRateJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="INTRD-3678_20211214" author="AmineBENAICHA">
		<update tableName="meveo_script_instance">
			<column name="script">
	<![CDATA[package org.meveo.service.script;
    
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.util.pagination.PaginationConfiguration;
import org.meveo.api.dto.response.PagingAndFiltering.SortOrder;
import org.meveo.api.exception.EntityDoesNotExistsException;
import org.meveo.model.article.AccountingArticle;
import org.meveo.model.article.ArticleMapping;
import org.meveo.model.article.ArticleMappingLine;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.catalog.OfferTemplate;
import org.meveo.model.catalog.ProductChargeTemplateMapping;
import org.meveo.model.catalog.ServiceChargeTemplate;
import org.meveo.model.catalog.ServiceTemplate;
import org.meveo.model.cpq.Product;
import org.meveo.model.cpq.ProductVersion;
import org.meveo.model.cpq.enums.VersionStatusEnum;
import org.meveo.model.cpq.offer.OfferComponent;
import org.meveo.model.tax.TaxClass;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.article.AccountingArticleService;
import org.meveo.service.billing.impl.article.ArticleMappingLineService;
import org.meveo.service.billing.impl.article.ArticleMappingService;
import org.meveo.service.catalog.impl.OfferTemplateService;
import org.meveo.service.catalog.impl.ServiceTemplateService;
import org.meveo.service.cpq.ProductService;
import org.meveo.service.cpq.ProductVersionService;
import org.meveo.service.tax.TaxClassService;

public class ServiceTemplateToProductScript extends Script {
    private static final long serialVersionUID = -6513133027379352381L;

    // Script parameters
    public static final String DEFAULT_TAX_CLASS_CODE = "NORMAL";
    public static final long ARTICLE_MAPPING_ID = 1L;
    private static final Integer PAGE_COUNT = 100;

    private ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface(ServiceInstanceService.class.getSimpleName());
    private ProductService productService = (ProductService) getServiceInterface(ProductService.class.getSimpleName());
    private ProductVersionService productVersionService = (ProductVersionService) getServiceInterface(ProductVersionService.class.getSimpleName());
    private OfferTemplateService offerTemplateService= (OfferTemplateService) getServiceInterface(OfferTemplateService.class.getSimpleName());
    private AccountingArticleService accountingArticleService = (AccountingArticleService) getServiceInterface(AccountingArticleService.class.getSimpleName());
    private ArticleMappingService articleMappingService = (ArticleMappingService) getServiceInterface(ArticleMappingService.class.getSimpleName());
    private ArticleMappingLineService articleMappingLineService = (ArticleMappingLineService) getServiceInterface(ArticleMappingLineService.class.getSimpleName());
    private ServiceTemplateService serviceTemplateService = (ServiceTemplateService) getServiceInterface(ServiceTemplateService.class.getSimpleName());
    private TaxClassService taxClassService = (TaxClassService) getServiceInterface(TaxClassService.class.getSimpleName());

    private TaxClass defaultTaxClass;
    private ArticleMapping defaultArticleMapping;

    @Override
    public void init(Map<String, Object> methodContext) throws BusinessException {
        defaultTaxClass = taxClassService.findByCode(DEFAULT_TAX_CLASS_CODE);
        if (defaultTaxClass == null) {
            throw new EntityDoesNotExistsException(TaxClass.class, DEFAULT_TAX_CLASS_CODE);
        }

        defaultArticleMapping = articleMappingService.findById(ARTICLE_MAPPING_ID);
        if (defaultArticleMapping == null) {
            throw new EntityDoesNotExistsException(ArticleMapping.class, ARTICLE_MAPPING_ID);
        }
    }

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        log.info("Migration started at {}", new Date());

        long count = 0;
        List<ServiceTemplate> serviceTemplates = (List<ServiceTemplate>) methodContext.get("SERVICE_TEMPLATE");
        
        if(serviceTemplates != null && !serviceTemplates.isEmpty()) {
            count = serviceTemplates.size();
            serviceTemplates.forEach(this::map);
        } else {

            count = serviceTemplateService.count(new PaginationConfiguration("id", SortOrder.ASCENDING));

            if (PAGE_COUNT < count) {
                serviceTemplateService.list(new PaginationConfiguration(null, null))
                        .forEach(this::map);
            } else {
                for (int index = 0; index < count; index = index + PAGE_COUNT) {
                    serviceTemplateService.list(new PaginationConfiguration(index, PAGE_COUNT, null, null, null, "id", SortOrder.ASCENDING))
                            .forEach(this::map);
                }
            }
        }

        log.info("Number of services migrated={}", count);
        log.info("Migration ended at {}", new Date());
    }

    public Product map(ServiceTemplate serviceTemplate) {
        Product product = createProduct(serviceTemplate);
        createArticle(product);

        ProductVersion productVersion = createProductVersion(product);

        List<ServiceInstance> serviceInstances = serviceInstanceService.findByServiceTemplate(serviceTemplate);

        serviceInstances.forEach(serviceInstance -> {

            serviceInstance.setProductVersion(productVersion);
            serviceInstance.setServiceTemplate(null);
            serviceInstanceService.update(serviceInstance);

            OfferTemplate offer = serviceInstance.getSubscription().getOffer();
            OfferComponent offerComponent = new OfferComponent();
            offerComponent.setProduct(product);
            offerComponent.setOfferTemplate(offer);
            offer.getOfferComponents().add(offerComponent);
            offer.getOfferServiceTemplates().removeIf(o -> o.getServiceTemplate().getId().equals(serviceTemplate.getId()));
            offerTemplateService.update(offer);
        });

        return product;
    }

    private void createArticle(Product product) {
        product.getProductCharges().stream()
                .map(pc -> pc.getChargeTemplate())
                .forEach(chargeTemplate -> {
                    AccountingArticle accountingArticle;
                    List<AccountingArticle> accountingArticles = accountingArticleService.findByTaxClassAndSubCategory(chargeTemplate.getTaxClass(), chargeTemplate.getInvoiceSubCategory());
                    if(accountingArticles.isEmpty()) {
                        accountingArticle = new AccountingArticle(UUID.randomUUID().toString(), "Migration Accounting article", defaultTaxClass, chargeTemplate.getInvoiceSubCategory());
                        accountingArticleService.create(accountingArticle);
                    } else {
                        accountingArticle = accountingArticles.get(0);
                    }

                    ArticleMappingLine articleMappingLine = new ArticleMappingLine();
                    articleMappingLine.setChargeTemplate(chargeTemplate);
                    articleMappingLine.setArticleMapping(defaultArticleMapping);
                    articleMappingLine.setProduct(product);
                    articleMappingLine.setAccountingArticle(accountingArticle);
                    articleMappingLineService.create(articleMappingLine);
                });

    }

    private Product createProduct(ServiceTemplate serviceTemplate) {
        Product product = new Product();
        product.setCode(serviceTemplate.getCode());
        product.setDescription(serviceTemplate.getDescription());
        List<ProductChargeTemplateMapping> productCharges = getProductCharges(serviceTemplate);
        product.setProductCharges(productCharges);
        product.setCfValues(serviceTemplate.getCfValues());
        product.setCfAccumulatedValues(serviceTemplate.getCfAccumulatedValues());
        product.setDisabled(serviceTemplate.isDisabled());
        productService.create(product);
        return product;
    }

    private ProductVersion createProductVersion(Product product) {
        ProductVersion productVersion= new ProductVersion();
        productVersion.setProduct(product);
        productVersion.setShortDescription(product.getDescription());
        productVersion.setStatus(VersionStatusEnum.PUBLISHED);
        productVersion.setStatusDate(Calendar.getInstance().getTime());
        productVersionService.create(productVersion);
        return productVersion;
    }

    private ProductChargeTemplateMapping mapToProductChargeTemplate(ServiceChargeTemplate serviceCharge) {
        ProductChargeTemplateMapping productChargeTemplateMapping = new ProductChargeTemplateMapping();
        productChargeTemplateMapping.setChargeTemplate(serviceCharge.getChargeTemplate());
        return productChargeTemplateMapping;
    }

    private List<ProductChargeTemplateMapping> getProductCharges(ServiceTemplate serviceTemplate) {
        List<ProductChargeTemplateMapping> productCharges = serviceTemplate.getServiceSubscriptionCharges()
                .stream()
                .map(this::mapToProductChargeTemplate)
                .collect(Collectors.toList());

        productCharges.addAll(
                serviceTemplate.getServiceRecurringCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );

        productCharges.addAll(
                serviceTemplate.getServiceTerminationCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );

        productCharges.addAll(
                serviceTemplate.getServiceUsageCharges()
                        .stream()
                        .map(this::mapToProductChargeTemplate)
                        .collect(Collectors.toList())
        );
        return productCharges;
    }
}]]>
			</column>
		</update>
	</changeSet>
	<changeSet id="INTRD-3316_20211215_query_notification_template" author="TarikRabeh">
		<update tableName="com_message_template">
            <column name="htmlcontent">
                <![CDATA[Dear #{userName},<br>
<br>
The result for your query is ready.<br>
Check the result on <a href="#{portalResultLink}">Opencell Portal</a><br>
Query : #{reportQueryName}<br>
Started : #{startDate}<br>
Duration : #{duration}<br>
Line count : #{lineCount}<br>
<br>
Best regards,<br>
Opencell team.
                ]]>
            </column>
            <where>code='REPORT_QUERY_RESULT_SUCCESS'</where>
		</update>
    </changeSet>

	<changeSet id="INTRD-3751_20211216" author="AmineBENAICHA">
		<update tableName="cpq_order_offer" >
            <column name="order_line_type"
                    value="CREATE"/>
            <where>order_line_type is null</where>
        </update>
        
        <update tableName="quote_offer" >
            <column name="quote_line_type"
                    value="CREATE"/>
            <where>quote_line_type is null</where>
        </update>
	</changeSet>

	
	<changeSet id="#4044_30122021_counter_period_job" author="Mbarek-Ay">
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-49" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="2021-12-30 00:00:00.000" />
            <column name="job_category" value="UTILS" />
            <column name="job_template" value="CounterPeriodJob" />
            <column name="code" value="CounterPeriodJob" />
            <column name="creator" value="opencell.admin" />
            <column name="description" value="Counter period job"/>
            <column name="uuid" value="CounterPeriodJob" />
        </insert>
    </changeSet>

   	<changeSet id="#INTRD-4267_20220108" author="AmineBENAICHA">
		<insert tableName="billing_tax_mapping">
        	<column name="id" value='-20'/>
            <column name="tax_category_id" value="-1"/>
            <column name="tax_class_id" value="null"/>
            <column name="tax_id" value='-2'/>
            <column name="priority" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
        <insert tableName="billing_tax_mapping">
        	<column name="id" value='-21'/>
            <column name="tax_category_id" value="-3"/>
            <column name="tax_class_id" value="null"/>
            <column name="tax_id" value='-5'/>
            <column name="priority" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
        <insert tableName="billing_tax_mapping">
        	<column name="id" value='-22'/>
            <column name="tax_category_id" value="-2"/>
            <column name="tax_class_id" value="null"/>
            <column name="tax_id" value='-1'/>
            <column name="priority" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
        </insert>
        <insert tableName="billing_tax_mapping">
        	<column name="id" value='-23'/>
            <column name="tax_category_id" value="null"/>
            <column name="tax_class_id" value="null"/>
            <column name="tax_id" value='-1'/>
            <column name="priority" value='-1'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
     	</insert>
     </changeSet>

	<changeSet author="ZBariki" id="INTRD-4227_20220110">
		<update tableName="com_message_template">
			<column name="subject" value="Reminder – Past due invoice #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>We are reaching out to you in regards of your invoice #{invoiceInvoiceNumber} and more specifically its payment that was due on the #{invoiceDueDate}. You can find a copy of the invoice attached to this email.</p>
					<p>Please make sure to pay the invoice in full as soon as possible. If you have any additional question, do not hesitate to contact our services or your point of contact in our company.</p>
					<p>Best regards,</p>
                ]]>
			</column>
			<where>code='ENG - B2B relance 1 (J+15)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Dunning Letter for Invoice #{invoiceInvoiceNumber}" />
			<column name="htmlcontent">
				<![CDATA[
					#{billingAccountDescription}<br>
					#{billingAccountAddressAddress1}<br>
					#{billingAccountAddressZipCode}; #{billingAccountAddressCity}<br>
					#{billingAccountContactInformationPhone}<br>
					<br>
					#{customerAccountDescription} / #{customerAccountFirstName}<br>
					#{customerAccountAddressAddress1}<br>
					#{customerAccountAddressZipCode}<br>
					#{customerAccountAddressCity}<br>

					<p>#{billingAccountAddressCity}, on #{dayDate}</p>
					<p>#{customerAccountLegalEntityTypeCode},</p>
					<p>By a first email dated (Date of 1st reminder), then a second one dated (Date of 2nd reminder), we asked you to proceed to the payment of the invoice #{invoiceInvoiceNumber} for an amount of #{invoiceTotal}</p>
					<p>Unless we are mistaken, we regret to say that we have not yet received payment of invoice. We therefore ask you to proceed immediately to its payment.</p>
					<p>You will find a copy of the invoice attached to this letter.</p>
					<p>Please disregard this letter if your payment has been sent to us prior to receiving this letter letter.</p>
					<p>We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards.</p>
					<p>Signature</p>
					<p>Your name and surname</p>
                ]]>
			</column>
			<where>code='ENG - B2B relance 4 (J+35)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Reminder – Past due invoice #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>We are reaching out to you in regards of your invoice #{invoiceInvoiceNumber} and more specifically its payment that was due on the #{invoiceDueDate}. You can find a copy of the invoice attached to this email.</p>
					<p>Please make sure to pay the invoice in full as soon as possible. If you have any additional question, do not hesitate to contact our services or your point of contact in our company.</p>
					<p>Best regards,</p>
                ]]>
			</column>
			<where>code='ENG - B2C relance 1 (J+1)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Reminder – Past due invoice #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>We are following up on our email dated on the #{dunningCollectionPlanLastActionDate} where we informed you that invoice #{invoiceInvoiceNumber} was overdue for payment since #{invoiceDueDate}. We regret to inform you that we have not yet received payment from you for this matter.</p>
					<p>We ask that you proceed with the payment of the invoice as soon as possible and invite you to contact our customer support if you have any difficulties in paying this invoice.</p>
					<p>You will find a copy of the invoice attached.</p>
					<p>Kind regards,</p>
                ]]>
			</column>
			<where>code='ENG - B2C relance 1 (J+7)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Dunning Letter for Invoice #{invoiceInvoiceNumber}" />
			<column name="htmlcontent">
				<![CDATA[
					#{billingAccountDescription}<br>
					#{billingAccountAddressAddress1}<br>
					#{billingAccountAddressZipCode}; #{billingAccountAddressCity}<br>
					#{billingAccountContactInformationPhone}<br>
					<br>
					#{customerAccountLegalEntityTypeCode}   #{customerAccountDescription}<br>
					#{customerAccountAddressAddress1}<br>
					#{customerAccountAddressZipCode}<br>
					#{customerAccountAddressCity}<br>

					<p>#{billingAccountAddressCity}, on #{dayDate}</p>
					<p>#{customerAccountLegalEntityTypeCode},</p>
					<p>By a first email dated (Date of 1st reminder), then a second one dated (Date of 2nd reminder), we asked you to proceed to the payment of the invoice #{invoiceInvoiceNumber} for an amount of #{invoiceTotal}</p>
					<p>Unless we are mistaken, we regret to say that we have not yet received payment of invoice. We therefore ask you to proceed immediately to its payment.</p>
					<p>You will find a copy of the invoice attached to this letter.</p>
					<p>Please disregard this letter if your payment has been sent to us prior to receiving this letter letter.</p>
					<p>We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards. </p>
					<p>Signature</p>
					<p>Your name and surname</p>
                ]]>
			</column>
			<where>code='ENG - B2C relance 4 (J+14)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Règlement facture #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Bonjour #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>Nous vous contactons concernant votre facture #{invoiceInvoiceNumber} qui est en retard de paiement depuis le #{invoiceDueDate}. Vous trouverez une copie de la facture en pièce jointe.</p>
					<p>Merci de procéder au règlement de la facture dans les plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de prendre contact avec nos services ou votre interlocuteur habituel afin de trouver une solution.</p>
					<p>Bien à vous,</p>
                ]]>
			</column>
			<where>code='FR - B2B relance 1 (J+15)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Lettre de relance pour la facture #{invoiceInvoiceNumber}" />
			<column name="htmlcontent">
				<![CDATA[
					#{billingAccountDescription}<br>
					#{billingAccountAddressAddress1}<br>
					#{billingAccountAddressZipCode}; #{billingAccountAddressCity}<br>
					#{billingAccountContactInformationPhone}<br>
					<br>
					#{customerAccountDescription} / #{customerAccountFirstName}<br>
					#{customerAccountAddressAddress1}<br>
					#{customerAccountAddressZipCode}<br>
					#{customerAccountAddressCity}<br>

					<p>#{billingAccountAddressCity}, le #{dayDate}</p>
					<p>#{customerAccountLegalEntityTypeCode},</p>
					<p>Par un premier courriel en date du (Date de la 1ère relance), puis un second en date du (Date de la 2ème relance), nous vous avions demandé de procéder au paiement de la facture #{invoiceInvoiceNumber}) d’un montant de #{invoiceTotal}).</p>
					<p>Sauf erreur de notre part, nous sommes au regret de constater que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture. Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.</p>
					<p>Vous trouverez en pièce jointe de ce courrier une copie de la facture en question.</p>
					<p>Veuillez ne pas tenir compte de cette lettre si votre règlement nous a été adressé avant la réception du présent courrier.</p>
					<p>Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.</p>
					<p>Company Signature</p>
                ]]>
			</column>
			<where>code='FR - B2B relance 4 (J+35)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Règlement facture #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Bonjour #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>Nous vous contactons concernant votre facture #{invoiceInvoiceNumber} qui est en retard de paiement depuis le #{invoiceDueDate}. Vous trouverez une copie de la facture en pièce jointe.</p>
					<p>Merci de procéder au règlement de la facture dans les plus brefs délais. Si vous souhaitez avoir davantage d’informations, merci de prendre contact avec nos services ou votre interlocuteur habituel afin de trouver une solution.</p>
					<p>Bien à vous,</p>
                ]]>            </column>
			<where>code='FR - B2C relance 1 (J+1)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Règlement facture #{invoiceInvoiceNumber} - #{billingAccountDescription}" />
			<column name="htmlcontent">
				<![CDATA[
					<p>Bonjour #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
					<p>Nous faisons suite à notre courriel en date du #{dunningCollectionPlanLastActionDate}  où nous vous informions que votre facture #{invoiceInvoiceNumber} était en retard de paiement depuis le #{invoiceDueDate}. Nous sommes dans le regret de vous informer que nous n’avons toujours pas reçu de paiement de votre part à ce sujet.</p>
					<p>Nous vous demandons de procéder au règlement de la facture dans les meilleurs délais et nous invitons à contacter au plus vite notre assistance client si vous éprouvez des difficultés à régler cette facture.</p>
					<p>Vous trouverez à nouveau une copie de la facture en pièce jointe.</p>
					<p>Bien à vous,</p>
                ]]>
			</column>
			<where>code='FR - B2C relance 2 (J+7)'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Lettre de relance pour la facture #{invoiceInvoiceNumber}" />
			<column name="htmlcontent">
				<![CDATA[
					#{billingAccountDescription}<br>
					#{billingAccountAddressAddress1}<br>
					#{billingAccountAddressZipCode}; #{billingAccountAddressCity}<br>
					#{billingAccountContactInformationPhone}<br>
					<br>
					#{customerAccountLegalEntityTypeCode} , #{customerAccountDescription}<br>
					#{customerAccountAddressAddress1}<br>
					#{customerAccountAddressZipCode}<br>
					#{customerAccountAddressCity}<br>

					<p>#{billingAccountAddressCity}, le #{dayDate}</p>
					<p>#{customerAccountLegalEntityTypeCode},</p>
					<p>Par un premier courriel en date du (Date de la 1ère relance), puis un second en date du (Date de la 2ème relance), nous vous avions demandé de procéder au paiement de la facture #{invoiceInvoiceNumber}) d’un montant de #{invoiceTotal}).</p>
					<p>Sauf erreur de notre part, nous sommes au regret de constater que nous n’avons, à ce jour, toujours pas reçu le paiement de ladite facture. Nous vous demandons donc de bien vouloir procéder immédiatement à son règlement.</p>
					<p>Vous trouverez en pièce jointe de ce courrier une copie de la facture en question.</p>
					Veuillez ne pas tenir compte de cette lettre si votre règlement nous a été adressé avant la réception du présent courrier.</p>
					<p>Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.</p>
					<p>Company Signature</p>
                ]]>
			</column>
			<where>code='FR - B2C relance 4 (J+14)'</where>
		</update>
	</changeSet>
	<changeSet id="INTRD-3765_07012022" author="hichamElHaloui">
        <sql><![CDATA[ UPDATE ${db.schema.adapted}meveo_script_instance set script = '
package org.meveo.service.script;

import static org.apache.commons.lang3.StringUtils.isNotBlank;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections4.MapUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.model.billing.WalletInstance;
import org.meveo.model.crm.Customer;
import org.meveo.service.base.BusinessEntityService;
import org.meveo.service.billing.impl.ChargeInstanceService;
import org.meveo.service.billing.impl.CounterInstanceService;
import org.meveo.service.billing.impl.CounterPeriodService;
import org.meveo.service.billing.impl.EdrService;
import org.meveo.service.billing.impl.InvoiceService;
import org.meveo.service.billing.impl.ProductInstanceService;
import org.meveo.service.billing.impl.RatedTransactionService;
import org.meveo.service.billing.impl.RejectedBillingAccountService;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.billing.impl.WalletOperationService;
import org.meveo.service.billing.impl.WalletService;
import org.meveo.service.crm.impl.CustomerService;
import org.meveo.service.medina.impl.AccessService;
import org.meveo.service.order.OrderItemService;
import org.meveo.service.payments.impl.AccountOperationService;
import org.meveo.service.payments.impl.MatchingAmountService;

import javax.persistence.Query;

/**
 *
 * @author Said Ramli
 */
@SuppressWarnings({ "unchecked", "unused" })
public class DeleteCustomersScript extends Script {

	private final AccountOperationService accountOperationService = (AccountOperationService) getServiceInterface(
			AccountOperationService.class.getSimpleName());
	private final CustomerService customerService = (CustomerService) getServiceInterface(
			CustomerService.class.getSimpleName());
	private final InvoiceService invoiceService = (InvoiceService) getServiceInterface(
			InvoiceService.class.getSimpleName());
	private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(
			SubscriptionService.class.getSimpleName());
	private final RatedTransactionService ratedTransactionService = (RatedTransactionService) getServiceInterface(
			RatedTransactionService.class.getSimpleName());
	private final WalletService walletService = (WalletService) getServiceInterface(
			WalletService.class.getSimpleName());
	private final RejectedBillingAccountService rejectedBillingAccountService = (RejectedBillingAccountService) getServiceInterface(
			RejectedBillingAccountService.class.getSimpleName());
	private final CounterInstanceService counterInstanceService = (CounterInstanceService) getServiceInterface(
			CounterInstanceService.class.getSimpleName());
	private final CounterPeriodService counterPeriodService = (CounterPeriodService) getServiceInterface(
			CounterPeriodService.class.getSimpleName());
	private final OrderItemService orderItemService = (OrderItemService) getServiceInterface(
			OrderItemService.class.getSimpleName());
	private final ProductInstanceService productInstanceService = (ProductInstanceService) getServiceInterface(
			ProductInstanceService.class.getSimpleName());
	private final BusinessEntityService businessEntityService = (BusinessEntityService) getServiceInterface(
			BusinessEntityService.class.getSimpleName());
	private final WalletOperationService walletOperationService = (WalletOperationService) getServiceInterface(
			WalletOperationService.class.getSimpleName());
	private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface(
			ServiceInstanceService.class.getSimpleName());

	private final EdrService edrService = (EdrService) getServiceInterface(EdrService.class.getSimpleName());

	@SuppressWarnings("rawtypes")
	private final ChargeInstanceService chargeInstanceService = (ChargeInstanceService) getServiceInterface(
			ChargeInstanceService.class.getSimpleName());

	private static final List<String> noCheckAllowedValues = Arrays.asList("0", "1");

	@Override
	public void execute(Map<String, Object> methodContext) throws BusinessException {

		log.debug(" >>> execute {} ", methodContext.entrySet());

		try {

			Map<String, String> record = (Map<String, String>) methodContext.get("RECORD");
			if (MapUtils.isEmpty(record)) {
				throw new BusinessException(String.format("Parameter RECORD is missing"));
			}

			final String customerCode = record.get("customerCode");
			Customer customer = customerService.findByCode(customerCode);
			if (customer == null) {
				throw new BusinessException(String.format("No customer found having code = %s ", customerCode));
			}

			String noCheckVal = record.get("noCheck");
			if (isNotBlank(noCheckVal) && !noCheckAllowedValues.contains(noCheckVal)) {
				throw new BusinessException(
						String.format("Invalid ''noCheck'' value = %s , allowed values are [0,1]", noCheckVal));
			}
			boolean noCheck = "1".contentEquals(noCheckVal);

			if (!noCheck) {
				// If noCheck is 0 then the following conditions must be met in order to allow
				// deletion:
				// No unmatched AO
				// No open EDR/WO/RT

				this.checkUnmatchedAOs(customer);
				this.checkOpenEDRs(customer);
				this.checkOpenWOs(customer);
				this.checkOpenRTs(customer);
			}

			this.removeCustomerHirarchy(customer);

		} catch (BusinessException be) {
			throw be;
		} catch (Exception e) {
			log.error(" Error executing DeleteCustomersScript ", e);
			throw new BusinessException(e.getMessage());
		}
	}

	private void checkOpenEDRs(Customer customer) throws BusinessException {
		try {
			log.debug(" Start checkOpenEDRs for customer = {} ", customer);
			String query = "select count(edr.id) from EDR edr where edr.status = ''OPEN'' and edr.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId ";

			Object count = edrService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId())
					.getSingleResult();
			log.debug(" count of open EDRs = {} ", count);
			log.debug(" End checkOpenEDRs for customer = {} ", customer);

			if (((Long) count).intValue() > 0) {
				throw new BusinessException(" Customer has [" + count + "] open EDRs ");
			}
		} catch (Exception e) {
			log.error(" Error on checkOpenEDRs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void checkOpenWOs(Customer customer) throws BusinessException {
		try {
			log.debug(" Start checkOpenWOs for customer = {} ", customer);
			String query = "select count(wo.id) from WalletOperation wo where wo.status = ''OPEN'' and wo.chargeInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId ";
			final WalletOperationService walletOperationService = (WalletOperationService) getServiceInterface(
					WalletOperationService.class.getSimpleName());

			Object count = walletOperationService.getEntityManager().createQuery(query)
					.setParameter("customerId", customer.getId()).getSingleResult();
			log.debug(" count of open WOs = {} ", count);
			log.debug(" End checkOpenWOs for customer = {} ", customer);

			if (((Long) count).intValue() > 0) {
				throw new BusinessException(" Customer has [" + count + "] open WOs ");
			}
		} catch (Exception e) {
			log.error(" Error on checkOpenWOs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void checkOpenRTs(Customer customer) throws BusinessException {
		try {

			log.debug(" Start checkOpenRTs for customer = {} ", customer);
			String query = "select count(rt.id) from RatedTransaction rt where rt.status = ''OPEN'' and rt.billingAccount.customerAccount.customer.id =:customerId ";
			Object count = this.ratedTransactionService.getEntityManager().createQuery(query)
					.setParameter("customerId", customer.getId()).getSingleResult();
			log.debug(" count of open RTs = {} ", count);
			log.debug(" End checkOpenRTs for customer = {} ", customer);

			if (((Long) count).intValue() > 0) {
				throw new BusinessException(" Customer has [" + count + "] open RTs ");
			}
		} catch (Exception e) {
			log.error(" Error on checkOpenRTs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void checkUnmatchedAOs(Customer customer) throws BusinessException {
		try {

			log.debug(" Start checkUnmatchedAOs for customer = {} ", customer);
			String query = "select count(ao.id) from AccountOperation ao where ao.matchingStatus = ''O'' and ao.customerAccount.customer.id =:customerId ";
			final AccountOperationService accountOperationService = (AccountOperationService) getServiceInterface(
					AccountOperationService.class.getSimpleName());
			Object count = accountOperationService.getEntityManager().createQuery(query)
					.setParameter("customerId", customer.getId()).getSingleResult();
			log.debug(" count of unmatched AOs = {} ", count);
			log.debug(" End checkUnmatchedAOs for customer = {} ", customer);

			if (((Long) count).intValue() > 0) {
				throw new BusinessException(" Customer has [" + count + "] unmatched AOs ");
			}
		} catch (Exception e) {
			log.error(" Error on checkUnmatchedAOs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeCustomerHirarchy(Customer customer) throws BusinessException {
		log.debug(" Start removeCustomerHirarchy for customer = {} ", customer);

		//
		// A workaround for #4134 , no need for this method if #4134 is fixed (only
		// 6.1.X is concerned)!
      	this.nullifyDDRequestItem(customer);
		this.nullifyAOsSeller(customer);

      	this.removeWalletOperations(customer);
		this.removeChargeInstances(customer);
		// the relationship [SubCategoryInvoiceAgregate <=> WalletInstance] should be broke fisrt
		this.nullifySubCategoryInvoiceAgregatesWallet(customer);
		this.removeRatedTransactions(customer);
		this.nullifyWalletInstanceInUserAccount(customer);
		this.removeWalletInstances(customer);

		this.removePaymentHistory(customer);
//		this.removeRatedTransactions(customer);

		this.removeMatchingAmounts(customer);
		this.nullifyRecordedInvoice(customer);
		this.removeInvoices(customer);



		this.removeServiceInstances(customer);
		this.removeAccess(customer);
		this.removeEDRs(customer);
		this.removeDiscountPlanInstance(customer);
		this.nullifyAOSubscriptions(customer);
		this.removeSubscriptions(customer);
		this.removeRejectedBAs(customer);

		this.removeCounterPeriods(customer);
		this.removeCounterInstances(customer);
		this.removeOrderItems(customer);
		this.removeProductInstances(customer);


		this.customerService.remove(customer);

		log.debug(" End removeCustomerHirarchy for customer = {} ", customer);
	}

	private void nullifyWalletInstanceInUserAccount(Customer customer) {
		try {
			log.debug(" Start removeEDRs for customer = {} ", customer);
		String query = "Update UserAccount ua set ua.wallet = null where ua.wallet.id in (select wi.id from WalletInstance wi where wi.userAccount.billingAccount.customerAccount.customer.id =:customerId)";
		edrService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeEDRs for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeEDRs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeEDRs(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeEDRs for customer = {} ", customer);

			String queryText = "delete from EDR edr1 where edr1.id in (select edr.id from EDR edr where edr.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			edrService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeEDRs for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeEDRs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeMatchingAmounts(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeMatchingAmounts for customer = {} ", customer);

			final MatchingAmountService matchingAmountService = (MatchingAmountService) getServiceInterface(MatchingAmountService.class.getSimpleName());
			final String query = "delete from MatchingAmount ma1 where ma1.id in (select ma.id from MatchingAmount ma where ma.accountOperation.customerAccount.customer.id =:customerId )";
			matchingAmountService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeMatchingAmounts for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeMatchingAmounts : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeAccess(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeAccess for customer = {} ", customer);

			final AccessService accessService = (AccessService) getServiceInterface(
					AccessService.class.getSimpleName());

			final String queryText = "delete from Access a1 where a1.id in (select a.id from Access a where a.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			accessService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeAccess for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeAccess : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeServiceInstances(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeServiceInstances for customer = {} ", customer);

			String queryText = "delete from ServiceInstance si1 where si1.id in (select si.id from ServiceInstance si where si.subscription.userAccount.billingAccount.customerAccount.customer.id =:customerId) ";
			this.serviceInstanceService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeServiceInstances for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeServiceInstances : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}



	private void removeWalletOperations(Customer customer) throws BusinessException {
		try {
			log.debug(" removeWalletOperations for customer={} ", customer);
			String queryText = "delete from WalletOperation wo where wo.id in ( select wo1.id from WalletOperation wo1  where wo1.chargeInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId) ";

			Query query = this.walletOperationService.getEntityManager().createQuery(queryText);
			query.setParameter("customerId", customer.getId());
			query.executeUpdate();
		} catch (Exception e) {
			log.error(" Error on removeWalletOperations : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}


	/**
	 * using Sub-queries to Resolve Error: ERROR: syntax error at or near "cross"
	 *
	 * @param customer
	 * @throws BusinessException
	 */
	private void removePaymentHistory(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removePaymentHistory for customer = {} ", customer);

			String query = "delete from PaymentHistory ph1 where ph1.id in (select ph2.id from PaymentHistory ph2 where ph2.customerCode=:customerCode) ";
			int count = this.businessEntityService.getEntityManager().createQuery(query)
					.setParameter("customerCode", customer.getCode()).executeUpdate();

			log.debug(" {} PaymentHistory to delete ", count);
			log.debug(" End removePaymentHistory for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removePaymentHistory : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	/**
	 * using Sub-queries to Resolve Error: ERROR: syntax error at or near "cross"
	 *
	 * @param customer
	 * @throws BusinessException
	 */

 private void nullifyDDRequestItem(Customer customer){

    try {
			log.debug(" Start deleteDDRequestItem for customer = {} ", customer);

			String query = "update DDRequestItem ddri set ddri.automatedPayment= null where ddri.automatedPayment.id in (select ao2.id from AccountOperation ao2 where ao2.customerAccount.customer.id =:customerId) ";
			int count = this.accountOperationService.getEntityManager().createQuery(query)
					.setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" seller to nullify for {} AOs ", count);
			log.debug(" End nullifyAOsSeller for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on nullifyAOsSeller : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
  }
	private void nullifyAOsSeller(Customer customer) throws BusinessException {
		try {
			log.debug(" Start nullifyAOsSeller for customer = {} ", customer);

			String query = "UPDATE AccountOperation ao1 SET ao1.seller = null where ao1.id in (select ao2.id from AccountOperation ao2 where ao2.customerAccount.customer.id =:customerId) ";
			int count = this.accountOperationService.getEntityManager().createQuery(query)
					.setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" seller to nullify for {} AOs ", count);
			log.debug(" End nullifyAOsSeller for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on nullifyAOsSeller : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void nullifySubCategoryInvoiceAgregatesWallet(Customer customer) throws BusinessException {
		try {
			log.debug(" Start nullifySubCategoryInvoiceAgregatesWallet for customer = {} ", customer);

			StringBuilder query = new StringBuilder( "UPDATE SubCategoryInvoiceAgregate subCat SET subCat.wallet = null ")
					.append(" where subCat.id in (select subCatIn.id from SubCategoryInvoiceAgregate subCatIn where subCatIn.wallet.userAccount.billingAccount.customerAccount.customer.id =:customerId) ");

			int count = this.accountOperationService.getEntityManager().createQuery(query.toString()).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" wallet to nullify for {} SubCategoryInvoiceAgregate ", count);
			log.debug(" End nullifySubCategoryInvoiceAgregatesWallet for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on nullifySubCategoryInvoiceAgregatesWallet : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}

	}


	private void removeProductInstances(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeProductInstances for customer = {} ", customer);
			String query = "delete from ProductInstance pi where pi.id in (select p.id from ProductInstance p where p.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			productInstanceService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId()).executeUpdate();
			log.debug(" End removeProductInstances for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeProductInstances : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}


	private void removeOrderItems(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeOrderItem for customer = {} ", customer);

			String query = "delete from OrderItem oi where oi.id in (select p.id from OrderItem p where p.userAccount.billingAccount.customerAccount.customer.id =:customerId) ";

			orderItemService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeOrderItem for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeOrderItem : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}



	private void removeCounterPeriods(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeCounterPeriods for customer = {} ", customer);
			String queryText = "delete from CounterPeriod cp1 where cp1.id in ( select c.id from CounterPeriod c where c.counterInstance.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			counterInstanceService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();
			log.debug(" End removeCounterPeriods for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeCounterPeriods : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}



	private void removeCounterInstances(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeCounterInstances for customer = {} ", customer);

			String query = "delete from CounterInstance c1 where c1.id in (select c.id from CounterInstance c where c.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			counterInstanceService.getEntityManager().createQuery(query).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeCounterInstances for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeCounterInstances : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}


	private void removeRejectedBAs(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeRejectedBAs for customer = {} ", customer);

			String queryText = "delete from RejectedBillingAccount rba1 where rba1.id in (select rba.id from RejectedBillingAccount rba where rba.billingAccount.customerAccount.customer.id =:customerId )";
			rejectedBillingAccountService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeRejectedBAs for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeRejectedBAs : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}




	private void nullifyRecordedInvoice(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeRecordedInvoice for customer = {} ", customer);

			String queryText = "update  RecordedInvoice ri   set ri.invoice = null where ri.invoice.id in ( select inv.id from Invoice inv where inv.billingAccount.customerAccount.customer.id =:customerId )";
			invoiceService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeRecordedInvoice for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeRecordedInvoice : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeInvoices(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeInvoices for customer = {} ", customer);

			String queryText = "delete from Invoice inv1 where inv1.id in (select inv.id from Invoice inv where inv.billingAccount.customerAccount.customer.id =:customerId )";
			invoiceService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeInvoices for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeInvoices : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeWalletInstances(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeWalletInstances for customer = {} ", customer);

			String queryText = "delete from WalletInstance wi1 where wi1.id in (select wi.id from WalletInstance wi where wi.userAccount.billingAccount.customerAccount.customer.id =:customerId) ";
			this.walletService.getEntityManager().createQuery(queryText).setParameter("customerId", customer.getId()).executeUpdate();

			log.debug(" End removeWalletInstances for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeWalletInstances : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}



	private void removeRatedTransactions(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeRatedTransactions for customer = {} ", customer);

						String queryText = "delete from RatedTransaction rt1 where rt1.id in (select rt.id from RatedTransaction rt where rt.billingAccount.customerAccount.customer.id =:customerId )";
			Query query =chargeInstanceService.getEntityManager().createQuery(queryText);
			query.setParameter("customerId", customer.getId());
			query.executeUpdate();

			log.debug(" End removeRatedTransactions for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeRatedTransactions : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}

	}


	private void removeChargeInstances(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeChargeInstances for customer = {} ", customer);

			String queryText = "delete from ChargeInstance ci1 where ci1.id in (select ci.id from ChargeInstance ci where ci.userAccount.billingAccount.customerAccount.customer.id =:customerId )";
			Query query =chargeInstanceService.getEntityManager().createQuery(queryText);
			query.setParameter("customerId", customer.getId());
			query.executeUpdate();

			log.debug(" End removeChargeInstances for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeChargeInstances : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}


	private void nullifyAOSubscriptions(Customer customer) throws BusinessException {
		try {
			log.debug(" Start nullifyAOSubscriptions for customer = {} ", customer);
						String queryText = "update AccountOperation  ao set ao.subscription= null where ao.subscription.id in (select s.id from Subscription s where s.userAccount.billingAccount.customerAccount.customer =:customer) ";
			subscriptionService.getEntityManager().createQuery(queryText).setParameter("customer", customer).executeUpdate();
			log.debug(" End nullifyAOSubscriptions for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on nullifyAOSubscriptions : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeSubscriptions(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeSubscriptions for customer = {} ", customer);
						String queryText = "delete from Subscription s1 where s1.id in (select s.id from Subscription s where s.userAccount.billingAccount.customerAccount.customer =:customer) ";
			subscriptionService.getEntityManager().createQuery(queryText).setParameter("customer", customer).executeUpdate();
			log.debug(" End removeSubscriptions for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeSubscriptions : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}

	private void removeDiscountPlanInstance(Customer customer) throws BusinessException {
		try {
			log.debug(" Start removeSubscriptions for customer = {} ", customer);
						String queryText = "delete from DiscountPlanInstance dpi where subscription_id in (select s.id from Subscription s where s.userAccount.billingAccount.customerAccount.customer =:customer) ";
			subscriptionService.getEntityManager().createQuery(queryText).setParameter("customer", customer).executeUpdate();
			log.debug(" End removeSubscriptions for customer = {} ", customer);
		} catch (Exception e) {
			log.error(" Error on removeSubscriptions : [{}] ", e.getMessage(), e);
			throw new BusinessException(e);
		}
	}



	private <T> Collection<T> safe(Collection<T> collection) {
		return collection == null ? Collections.EMPTY_LIST : collection;
	}
}' where id= -23 ;]]>
		</sql>
	</changeSet>
<changeSet id="INTRD-3432_21012022_Manual_refund_by_card_KO" author="anasseh">
	<update tableName="meveo_script_instance">
           <column name="script">
               <![CDATA[package org.meveo.service.script.demo;

import java.io.StringReader;
import java.util.Map;
import javax.xml.xpath.*;
import org.meveo.admin.exception.BusinessException;
import org.meveo.model.payments.*;
import org.meveo.service.script.payment.PaymentScript;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xml.sax.InputSource;

/**
 * @author anasseh
 */
public class CustomGatewayPaymentScript extends PaymentScript{
    private static final Logger log = LoggerFactory.getLogger(CustomGatewayPaymentScript.class);

    public void createCardToken(Map<String, Object> methodContext) throws BusinessException {           
        methodContext.put(PaymentScript.RESULT_TOKEN, "7ced0000-3ab2-000d-6a50-08d4b8a6"+(int )(Math.random() * 1000 + 1));
    }
    public void doPaymentToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL");
    }
      public void doPaymentCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL_CARD");
    }
  
    public void doRefundToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD");
    }
   public void doRefundCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD_CARD");
    }
  
    private void doIt(Map<String, Object> methodContext,String operationType) throws BusinessException {
        try{
            log.debug("EXECUTE  methodContext {} ", methodContext);
            Long amountCts = (Long)methodContext.get(PaymentScript.CONTEXT_AMOUNT_CTS);
            if(amountCts == null){
                throw new BusinessException("amountCts is null");
            }
            CardPaymentMethod paymentToken = (CardPaymentMethod)methodContext.get(PaymentScript.CONTEXT_TOKEN);
            if(paymentToken == null && (operationType.equals("PAL") || operationType.equals("RFD"))){
                throw new BusinessException("paymentMethod is null");
            }
            
            //DEMO : get tokenId or card infos from context
            String body  = "{";
            body  += " \"PSPID\" : \"PSPID\" ,";
            body  += " \"USERID\" : \"USERID\" ,";
            body  += " \"PSWD\" : \"PSWD\" ,";
            body  += " \"REFKIND\" :  \"PSPID\" ,";
            body  += " \"REFID\" : \"PSPID\" ,";
            body  += " \"OPERATION\" : \""+operationType +"\" ,";
            body  += " \"AMOUNT\" : \""+amountCts.longValue()+"\" ,";
            body  += " \"SHASIGN\" : \"SHASIGN\" ,";
            body  += " }";
          
        
            String paymentResponse = "<root>";
            paymentResponse += "<STATUS>92</STATUS>";
            paymentResponse += "<PAYID>"+((int )(Math.random() * 100000 + 1))+"</PAYID>"; 
            paymentResponse += "<TRANSACTIONID>92</TRANSACTIONID>";
            paymentResponse += "<CRMTOKEN>clientSide</CRMTOKEN>"; 
            paymentResponse += "<BRAND>VISA</BRAND>";
            paymentResponse += "<ACCEPTENCE>bankRef</ACCEPTENCE>"; 
            paymentResponse += "</root>";
            methodContext.put(PaymentScript.RESULT_PAYMENT_STATUS, PaymentStatusEnum.PENDING);
            methodContext.put(PaymentScript.RESULT_PAYMENT_ID, getValue(paymentResponse,"/root/PAYID"));
            methodContext.put(PaymentScript.RESULT_TRANSACTION_ID, getValue(paymentResponse,"/root/TRANSACTIONID"));
            methodContext.put(PaymentScript.RESULT_CODE_CLIENT_SIDE, getValue(paymentResponse,"/root/CRMTOKEN"));
            methodContext.put(PaymentScript.RESULT_PAYMENT_BRAND, getValue(paymentResponse,"/root/BRAND"));
            methodContext.put(PaymentScript.RESULT_BANK_REFERENCE, getValue(paymentResponse,"/root/ACCEPTENCE"));           
        } catch (Exception e) {
            throw new BusinessException(e.getMessage());
        }
    }
    private String getValue(String sourceXML,String expression) throws XPathExpressionException{        
        InputSource iSource = new InputSource(new StringReader(sourceXML));
        XPathFactory xpathFactory = XPathFactory.newInstance();
        XPath xpath = xpathFactory.newXPath();      
        return xpath.evaluate(expression, iSource);         
    }
}
                ]]>
           </column>
           <where>code='org.meveo.service.script.demo.CustomGatewayPaymentScript'</where>
	</update>
   </changeSet>

	<changeSet id="INTRD-4724_20220201" author="TarikRabeh">
		<insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-36" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="165000000" />
			<column name="description" value="Deposits and sureties received"></column>
			<column name="chart_of_account_type" value="LIABILITIES" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-51" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="accounting_code_id" valueNumeric="-3" />
			<column name="account_code_client_side" valueNumeric="165000000" />
			<column name="code" value="CRD_SD" />
			<column name="description" value="Credit for Security deposit transfer" />
			<column name="occ_category" value="CREDIT" />
			<column name="journal_id" value="-2" />
		</insert>
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-52" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="accounting_code_id" valueNumeric="-36" />
			<column name="account_code_client_side" valueNumeric="41100000" />
			<column name="code" value="DEB_SD" />
			<column name="description" value="Debit for Security deposit transfer" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
		</insert>
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-53" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-36" />
			<column name="account_code_client_side" valueNumeric="512010000" />
			<column name="code" value="REF_SD" />
			<column name="description" value="Refund of Security deposit transfer" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
		<insert tableName="billing_seq_invoice">
			<column name="id" valueNumeric="-6" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="SECURITY_DEPOSIT" />
			<column name="description" value="Security Deposit" />
			<column name="sequence_size" valueNumeric="9" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
		</insert>
		<insert tableName="billing_invoice_type">
			<column name="id" valueNumeric="-6" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="SECURITY_DEPOSIT" />
			<column name="description" value="SD - Security Deposit" />
			<column name="invoice_sequence_id" valueNumeric="-6" />
			<column name="occ_template_id" valueNumeric="-52" />
			<column name="uuid" value="InvoiceType-SECURITY_DEPOSIT" />
		</insert>
		<insert tableName="billing_invoice_cat">
			<column name="id" value='-4'/>
			<column name="code" value="ICAT_SECURITY_DEPOSIT"/>
			<column name="description" value="ICAT_SECURITY_DEPOSIT"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="uuid" value="billing_invoice_cat_icat_security_deposit" />
		</insert>
		<insert tableName="billing_invoice_sub_cat">
			<column name="id" value='-4'/>
			<column name="invoice_category_id" value='-4'/>
			<column name="version" valueNumeric="0" />
			<column name="code" value="ISCAT_SECURITY_DEPOSIT"/>
			<column name="description" value="ISCAT_SECURITY_DEPOSIT"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="uuid" value="billing_invoice_sub_cat_iscat_security_deposit" />
		</insert>
		<insert tableName="billing_accounting_article">
			<column name="id" value='-11'/>
			<column name="version" valueNumeric="0" />
			<column name="code" value="ART_SECURITY_DEPOSIT"/>
			<column name="tax_class_id" value="-3"/>
			<column name="invoice_sub_category_id" value="-4"/>
			<column name="invoice_type_id" value="-6"/>
			<column name="description" value="Article Security Deposit"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="uuid" value="billing_accounting_article_art_security_deposit" />
		</insert>
	</changeSet>
	<changeSet id="#INTRD-4950-20220208" author="MohammedSTITANE">
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueSequenceNext="meveo_script_instance_cat_seq"/>
			<column name="version" valueNumeric="0"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="code" value="FILE_ACCOUNTING_SCHEMES"/>
			<column name="description" value="File accounting schemes"/>
		</insert>
		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="generic_sequence_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="code" value="accounting_scheme_sequence" />
			<column name="description" value="AccountingScheme sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="10" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="AccountingScheme" />
			<column name="code_el" value="#{sequenceNextValue}" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="sequence_id" valueSequenceCurrent="generic_sequence_seq" />
		</insert>
	</changeSet>
    <changeSet id="INTRD-5089_20220215" author="TarikRabeh">
        <update tableName="billing_accounting_article">
			<column name="accounting_code_id" value="-36"/>
            <where>code='ART_SECURITY_DEPOSIT'</where>
        </update>
    </changeSet>
    <changeSet id="#INTRD-5242__22-02-2022" author="Mohammed_ELAZZOUZI">
    	<sql>delete from ${db.schema.adapted}crm_custom_field_tmpl_val where customfieldtemplate_id = (SELECT id from crm_custom_field_tmpl where code = 'AggregationOptions')</sql>
	    <sql>delete from ${db.schema.adapted}crm_custom_field_tmpl where applies_to='JobInstance_InvoiceLinesJob' and code ='AggregationOptions'</sql>
	    <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="JobInstance_InvoiceLinesJob_AggregationPerUnitAmount"/>
            <column name="applies_to" value="JobInstance_InvoiceLinesJob"/>
            <column name="description" value="aggregation per unit amount"/>
            <column name="field_type" value="BOOLEAN"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="value_required" value="0"/>
            <column name="default_value" value="0"/>
            <column name="creator" value="applicationInitializer"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl">
            <column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="JobInstance_InvoiceLinesJob_ILDateAggregationOptions"/>
            <column name="description" value="date aggregation options"/>
            <column name="field_type" value="LIST"/>
            <column name="value_required" value="0"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="versionable" value="0"/>
            <column name="storage_type" value="SINGLE"/>
            <column name="trigger_end_period_event" value="0"/>
            <column name="applies_to" value="JobInstance_InvoiceLinesJob"/>
            <column name="allow_edit" value="1"/>
            <column name="hide_on_new" value="0"/>
            <column name="inh_as_def_value" value="0"/>
            <column name="cf_protectable" value="0"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id" valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'JobInstance_InvoiceLinesJob_ILDateAggregationOptions')"/>
            <column name="listvalues" value="NO_DATE_AGGREGATION"/>
            <column name="listvalues_key" value="NO_DATE_AGGREGATION"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id" valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'JobInstance_InvoiceLinesJob_ILDateAggregationOptions')"/>
            <column name="listvalues" value="MONTH_OF_USAGE_DATE"/>
            <column name="listvalues_key" value="MONTH_OF_USAGE_DATE"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id" valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'JobInstance_InvoiceLinesJob_ILDateAggregationOptions')"/>
            <column name="listvalues" value="WEEK_OF_USAGE_DATE"/>
            <column name="listvalues_key" value="WEEK_OF_USAGE_DATE"/>
        </insert>
        <insert tableName="crm_custom_field_tmpl_val">
            <column name="customfieldtemplate_id" valueComputed="(SELECT id from crm_custom_field_tmpl where code = 'JobInstance_InvoiceLinesJob_ILDateAggregationOptions')"/>
            <column name="listvalues" value="DAY_OF_USAGE_DATE"/>
            <column name="listvalues_key" value="DAY_OF_USAGE_DATE"/>
        </insert>
    </changeSet>
	<changeSet id="INTRD-4891-25022022" author="Abdelkader.Bouazza">
		<update tableName="cpq_attribute">
			<column name="el_value">${sub.getSubscriptionDate()}</column>
			<where>id=-8</where>
		</update>
	</changeSet>
	<changeSet id="INTRD-4680-01032022" author="TarikRabeh">
		<update tableName="billing_user_account">
			<column name="is_consumer">1</column>
		</update>
	</changeSet>

	<changeSet id="INTRD-5691-20220315" author="ZBariki">
		<insert tableName="crm_provider_pay_methods">
			<column name="provider_id" valueNumeric="1" />
			<column name="payment_method" value="CHECK" />
		</insert>
	</changeSet>
	
	<changeSet id="INTRD-5701_20220215" author="HatimOUDAD">
        <insert tableName="billing_accounting_article">
        	<column name="id" value="-5"/>
        	<column name="version" valueNumeric="0" />
        	<column name="code" value="ADV-STD"/>
        	<column name="tax_class_id" value="-1"/>
            <column name="invoice_sub_category_id" value="-3"/>
            <column name="description_i18n" value='{"FRA":"Acompte","ENG":"Advance payment"}'/>
            <column name="description" value='Advance payment'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_accounting_article-ADV-STD" />
        </insert>
    </changeSet>
    
	<changeSet id="#INTRD-4702-20220321" author="ZBariki">
		<update tableName="meveo_script_instance_cat">
			<column name="code" value="ACCOUNTING_SCHEMES"></column>
			<column name="description" value="Accounting schemes"></column>
			<where>code='FILE_ACCOUNTING_SCHEMES'</where>
		</update>
	</changeSet>
	<changeSet id="#INTRD-5888_2022-03_23" author="hichamELHALOUI" >

		<update tableName="billing_trading_currency">
			<column name="symbol" value="$US"  />
            <column name="decimal_places" valueNumeric="2" />
			<where>currency_id=49</where>
		</update>
		<update tableName="billing_trading_currency">
			<column name="symbol" value="€"  />
            <column name="decimal_places" valueNumeric="2" />
			<where>currency_id=5</where>
		</update>
    </changeSet>

	<changeSet id="#INTRD-5831_20220325" author="aelmalki">
		<sql>UPDATE ar_occ_template occ SET contra_accounting_code_id = (SELECT ac.id FROM billing_accounting_code ac WHERE ac.code=occ.account_code_client_side) WHERE occ.contra_accounting_code_id IS NULL</sql>
	</changeSet>

	<changeSet id="#INTRD-5830_20220324" author="aelmalki">
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="org.meveo.service.script.accountingscheme.DefaultAccountingSchemeScript" />
			<column name="src_type" value="JAVA_CLASS" />
			<column name="description" value="Default Journal entry builder, from AccountOperation"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="script">
				<![CDATA[package org.meveo.service.script.accountingscheme;
						public class SampleAccountingSchemeScript extends DefaultAccountingSchemeScript {}
				]]>
			</column>
		</insert>
	</changeSet>

	<changeSet id="#INTRD-5960_20220328" author="HichamHANINE">
    	<sql>Update  cpq_order_offer o set subscription_id = (select id from billing_subscription s where s.order_offer_id = o.id) where o.subscription_id is null</sql>
    </changeSet>

	<changeSet id="#INTRD-5955_20220324" author="aelmalki">
		<insert tableName="ar_accounting_scheme">
			<column name="id" valueSequenceNext="ar_accounting_scheme_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="org.meveo.service.script.accountingscheme.DefaultAccountingSchemeScript" />
			<column name="description" value="Default Accounting Scheme"/>
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.accountingscheme.DefaultAccountingSchemeScript')"/>
		</insert>
	</changeSet>

	<changeSet id="#INTRD-5958_20220328" author="aelmalki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="2022-03-28 00:00:00.000" />
			<column name="job_category" value="ACCOUNTING" />
			<column name="job_template" value="AccountingSchemesJob" />
			<column name="code" value="AccountingSchemesJob" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="-1" />
			<column name="uuid" value="AccountingSchemesJob" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-5992_20220329" author="aelmalki">
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="org.meveo.service.script.accountingscheme.InvoiceAccountingSchemeScript" />
			<column name="src_type" value="JAVA_CLASS" />
			<column name="description" value="Invoice accounting scheme script"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="script">
				<![CDATA[package org.meveo.service.script.accountingscheme;
						public class SampleInvoiceAccountingSchemeScript extends InvoiceAccountingSchemeScript {}
				]]>
			</column>
		</insert>
		<insert tableName="ar_accounting_scheme">
			<column name="id" valueSequenceNext="ar_accounting_scheme_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="Invoice and Credit Note" />
			<column name="description" value="Invoice accounting scheme"/>
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.accountingscheme.InvoiceAccountingSchemeScript')"/>
		</insert>
		<update tableName="ar_occ_template">
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code='Invoice and Credit Note')" />
			<where> code IN ('INV_STD', 'INV_CRN')</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6075_20220330" author="aelmalki">
		<update tableName="meveo_script_instance">
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='ACCOUNTING_SCHEMES')" />
			<where> code IN ('org.meveo.service.script.accountingscheme.DefaultAccountingSchemeScript', 'org.meveo.service.script.accountingscheme.InvoiceAccountingSchemeScript')</where>
		</update>
	</changeSet>

    	<changeSet id="INTRD-5997_20220330" author="HichamELHALOUI">
		<insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-37" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="511011000" />
			<column name="description" value="CB à encaisser"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>

        <insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-38" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="511002000" />
			<column name="description" value="Paypal à encaisser"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>

          <insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-39" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="511003000" />
			<column name="description" value="Stripe à encaisser"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>

         <insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-40" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="511000610" />
			<column name="description" value="TIP à encaisser"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>

         <insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-41" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="531100000" />
			<column name="description" value="Caisse en monnaie nationale"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>

          <insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-42" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="code" value="511200000" />
			<column name="description" value="Chèques à encaisser"></column>
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
		</insert>


        <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-54" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-42" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_CHECK" />
			<column name="description" value="Payment - check" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-55" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-37" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_CB" />
			<column name="description" value="Payment - card" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-56" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-20" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_DIRECT_DEBIT" />
			<column name="description" value="Payment - direct debit (prélèvement)" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-57" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-38" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_PAYPAL" />
			<column name="description" value="Payment Paypal" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-58" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-39" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_STRIPE" />
			<column name="description" value="Payment Stripe" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-59" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-40" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_TIP_DEBIT" />
			<column name="description" value="Payment - TIP" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-60" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-41" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_CASH" />
			<column name="description" value="Payment - cash" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-61" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-20" />
			<column name="contra_accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PAY_WIRE" />
			<column name="description" value="WIRETRANSFER (virement)" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-2" />
			<column name="creator" value="opencell.admin" />
		</insert>


        </changeSet>

    <changeSet id="#INTRD-4666_20220331" author="HatimOUDAD">
		<update tableName="cpq_order_product">
			<column name="production_action_type" value="CREATE" />
			<where> production_action_type is null</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-5924-20220401" author="ZBariki">
		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="generic_sequence_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="discount_plan_item_seq" />
			<column name="description" value="Discount plan item sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="10" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="org.meveo.model.catalog.DiscountPlanItem" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence_id"
					valueComputed="(SELECT id from generic_sequence where code = 'discount_plan_item_seq')" />
		</insert>
	</changeSet>



	<changeSet id="#INTRD-6283_20220404" author="AbdelmounaimAkadid">
		<update tableName="ar_occ_template">
			<column name="description" value="WIRETRANSFER" />
			<where>id=-61</where>
		</update>
		<update tableName="ar_occ_template">
			<column name="description" value="Payment - direct debit" />
			<where>id=-56</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6298_20220405" author="aelmalki">
		<update tableName="ar_accounting_scheme">
			<column name="long_description_i18n">
				<![CDATA[{"FRA":"<p>Ce schéma produit 2 lignes d'écriture:</p><ul><li>Une ligne pour le compte et le sens définis sur le type d'opération de de compte</li><li>Une ligne pour le compte de contrepartie défini sur le type d'opération de compte, mais avec un sens opposé</li></ul>","ENG":"<p>This scheme produces 2 accounting entries:</p><ul><li>An entry for the accounting code and the direction defined on the account operation type</li><li>An entry for the contra account defined on the account operation, type but with the opposite direction</li></ul>"}]]>
			</column>
			<column name="code" value="Dual entry scheme" />
			<where>code='DefaultAccountingScheme'</where>
		</update>

		<update tableName="ar_accounting_scheme">
			<column name="long_description_i18n">
				<![CDATA[{"FRA":"<p>Ce schéma produit des lignes d'écritures pour une facture ou un avoir (ci-dessous \"document\") :</p><ul><li>Une ligne unique pour le total TTC du document, sur le compte client (de la catégorie de client ou à défaut du type d'opération de compte).</li></ul><p class=\"ql-indent-1\">Le sens est celui de l'opération de compte (pour une facture : DEBIT, pour un avoir : CREDIT).</p><ul><li>Des lignes de contrepartie (au moins une) pour les montants HT pour les comptes de revenus, en utilisant les codes comptables des articles liés aux lignes du document.</li></ul><p class=\"ql-indent-1\">Le sens est l'opposé de celui du type d'opération (pour une facture : CREDIT, pour un avoir : DEBIT).</p><ul><li>S'il y a lieu, des lignes pour les montants des différentes taxes appliquées au document, en utilisant les codes comptables de ces taxes.</li></ul><p class=\"ql-indent-1\">Le sens est l'opposé de celui du type d'opération (pour une facture : CREDIT, pour un avoir : DEBIT).</p>","ENG":"<p>This scheme produces entries for an invoice or credit note (here after \"document\"):</p><ul><li>A single entry with the document total amount with tax using the customer accounting code (from the customer category, or if not set from the account operation type). </li></ul><p class=\"ql-indent-1\">Line direction is the one from the account operation type (for invoice: DEBIT, for credit note: CREDIT).</p><ul><li>\"Contra\" entries (at least one) with the amounts without tax for revenue accounts, using the accounting codes from the article linked to the document lines. </li></ul><p class=\"ql-indent-1\">Line direction is the opposite of direction set on the account operation type (for invoices: CREDIT, for credit note: DEBIT).</p><ul><li>\"Contra\" entries (if applies) with the tax amounts for the different taxes applied on the document, using the accounting codes from these taxes.</li></ul><p class=\"ql-indent-1\">Line direction is the opposite of direction set on the account operation type (for invoices: CREDIT, for credit note: DEBIT).</p>"}]]>
			</column>
			<column name="code" value="Invoice and Credit Note" />
			<where>code='org.meveo.service.script.accountingscheme.InvoiceAccountingSchemeScript'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6291_20220406" author="AbdelmounaimAkadid">
		 <update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-42" />
            <where>id=-1</where>
		</update>

		<update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-37" />
            <where>id=-43</where>
		</update>

        <update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-20" />
            <where>id=-3</where>
		</update>

        <update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-38" />
            <where>id=-46</where>
		</update>

        <update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-39" />
            <where>id=-47</where>
		</update>

        <update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-40" />
            <where>id=-2</where>
		</update>

		<update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-41" />
			<column name="occ_category" value="CREDIT" />
            <where>id=-60</where>
		</update>

		<update tableName="ar_occ_template">
			<column name="version" valueNumeric="1" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="contra_accounting_code_id" valueNumeric="-20" />
			<column name="occ_category" value="CREDIT" />
            <where>id=-61</where>
		</update>

		<delete tableName="ar_occ_template">
	        <where>id IN (-54, -55, -56, -57, -58, -59)</where>
	    </delete>
	</changeSet>

	<changeSet id="#INTRD-6341_20220406" author="aelmalki">
		<update tableName="ar_occ_template">
			<column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='701000000')" />
			<column name="contra_accounting_code2_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='445710000')" />
			<where> code IN ('INV_STD', 'INV_CRN')</where>
		</update>
	</changeSet>
	<changeSet id="INTRD-6305-07042022" author="Abdelkader.Bouazza">
		<update tableName="dunning_settings">
			<column name="dunning_mode">INVOICE_LEVEL</column>
			<where>code='DUN_DEF'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6484" author="hichamElHaloui" dbms="postgres">
		<sql>
			with cte as
					 (
						 select bil.id, btc.current_rate
						 from billing_invoice_line bil
								  left join billing_invoice invoice on bil.invoice_id = invoice.id
								  left join billing_trading_currency btc on invoice.trading_currency_id = btc.id
					 )
			update billing_invoice_line bil
			set functional_unit_price = (select current_rate from cte where cte.id = bil.id) * bil.unit_price
			where exists(select id from cte where cte.id = bil.id and cte.current_rate is not null);


			with cte as
					 (
						 select bil.id, btc.current_rate
						 from billing_invoice_line bil
								  left join billing_invoice invoice on bil.invoice_id = invoice.id
								  left join billing_trading_currency btc on invoice.trading_currency_id = btc.id
					 )
			update billing_invoice_line bil
			set functional_unit_price = unit_price
			where exists(select id from cte where cte.id = bil.id and cte.current_rate is null);
		</sql>
	</changeSet>
	
	<changeSet id="#INTRD-7339_20220607" author="hichamhanine">
		<insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-62" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="updated" valueDate="${db.current.time}" />
            <column name="code" value="ImportCustomerBankDetailsJob" />
            <column name="description" value="ImportCustomerBankDetailsJob" />
            <column name="job_category" value="IMPORT_HIERARCHY" />
            <column name="job_template" value="ImportCustomerBankDetailsJob" />
            <column name="parametres" valueNumeric="null" />
            <column name="creator" value="opencell.admin" />
            <column name="updater" value="opencell.admin" />
            <column name="timerentity_id" value="null" />
            <column name="following_job_id" value="null" />
            <column name="uuid" value="ImportCustomerBankDetailsJob" />
            <column name="run_on_nodes" value="null" />
            <column name="single_node" value="1" />
            <column name="cf_values" value="null" />
            <column name="verbose_report" value="1" />
        </insert>
	</changeSet>
	
	<changeSet id="#INTRD-6056_20220415" author="HatimOUDAD">
		<update tableName="cpq_quote_product">
			<column name="product_action_type" value="CREATE" />
			<where> product_action_type is null</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6668_20220421" author="TarikRabeh">
		<update tableName="adm_currency">
			<column name="symbol" value="€" />
			<where> currency_code = 'EUR'</where>
		</update>
		<update tableName="adm_currency">
			<column name="symbol" value="$US" />
			<where> currency_code = 'USD'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6283_20220422" author="HichamELHALOUI">
		<update tableName="ar_occ_template">
			<column name="description" value="Payment - wiretransfer"/>
			<where>id=-61</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-6638_20220422" author="aelmalki">
		<!-- Add Payment Script -->
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="org.meveo.service.script.accountingscheme.PaymentAccountingSchemeScript" />
			<column name="src_type" value="JAVA_CLASS" />
			<column name="description" value="Payment Journal entry builder, from AccountOperation"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="script">
				<![CDATA[package org.meveo.service.script.accountingscheme;
						public class SamplePaymentAccountingSchemeScript extends PaymentAccountingSchemeScript {}
				]]>
			</column>
		</insert>

		<!-- Add Scheme -->
		<insert tableName="ar_accounting_scheme">
			<column name="id" valueSequenceNext="ar_accounting_scheme_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="Payment entry scheme" />
			<column name="description" value="Payment Accounting Scheme"/>
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.accountingscheme.PaymentAccountingSchemeScript')"/>
		</insert>

		<!-- Add New 419100000 AccountinCode -->
		<insert tableName="billing_accounting_code">
			<column name="id" valueNumeric="-45" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="419100000" />
			<column name="description" value="Client non renconnu" />
			<column name="chart_of_account_type" value="ASSETS" />
			<column name="chart_of_account_view_type" value="REGULAR" />
			<column name="migrated" value="0" />
			<column name="disabled" value="0" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-6638_20220422-update-occT" author="aelmalki">
		<!-- Link to OCCTemplate Payment -->
		<update tableName="ar_occ_template">
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code='Payment entry scheme')" />
			<column name="contra_accounting_code2_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='419100000')" />
			<column name="occ_category" value="CREDIT" />
			<where> code IN ('PAY_CHK','PAY_CRD','PAY_DDT','PAY_PAL','PAY_STP','PAY_TIP','PAY_CASH','PAY_WIRE')</where>
		</update>
	</changeSet>

	<changeSet id="INTRD-6908_20220503" author="HichamELHALOUI">
		<update tableName="billing_accounting_code">
			<column name="description" value="Payment Card to collect"></column>
			<where>id=-37</where>
		</update>

        <update tableName="billing_accounting_code">
			<column name="description" value="Payment Paypal to collect"></column>
			<where>id=-38</where>
		</update>

          <update tableName="billing_accounting_code">
			<column name="description" value="Payment Stripe to collect"></column>
			<where>id=-39</where>
		</update>

         <update tableName="billing_accounting_code">
			<column name="description" value="Payment - TIP to collect"></column>
			<where>id=-40</where>
		</update>

         <update tableName="billing_accounting_code">
			<column name="description" value="Cash in local currency"></column>
			<where>id=-41</where>
		</update>

          <update tableName="billing_accounting_code">
			<column name="description" value="Checks to collect"></column>
			<where>id=-42</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-7049_20220509" author="TarikRabeh">
        <sql>
	        update public.accounting_journal_entry set 
		        trading_currency = (select ac.currency_code from adm_currency ac, billing_trading_currency btc, billing_invoice inv, ar_account_operation aco 
		        	where ac.id = btc.currency_id and inv.trading_currency_id = btc.id and inv.id = aco.invoice_id and aco.id =  accounting_operation_id),
		        trading_amount = (select inv.amount_without_tax from billing_invoice inv, ar_account_operation aco 
		        	where inv.id = aco.invoice_id and aco.id =  accounting_operation_id)
        </sql>
    </changeSet>

	<changeSet id="#INTRD-6961_20220511" author="aelmalki">
		<update tableName="billing_accounting_code">
			<column name="description" value="Unidentified customer" />
			<where>code='419100000'</where>
		</update>
		<update tableName="billing_accounting_code">
			<column name="description" value="Banks" />
			<where>code='512000000'</where>
		</update>
	</changeSet>
	<changeSet id="#6023_130522" author="AbdelkaderBouazza">
		<update tableName="crm_seller">
			<column name="email" value="test@opencell.com" />
			<where>email is null</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7144_05162022" author="ZBariki">
		<insert tableName="billing_article_mapping">
			<column name="id" valueSequenceNext="billing_article_mapping_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="DEFAULT_ARTICLE_MAPPING" />
			<column name="description" value="Default article mapping" />
		</insert>
	</changeSet>
	
	<changeSet id="FIX validateBR script compile" author="AbdelmounaimAkadid">
        <update tableName="meveo_script_instance">
            <column name="script" >
            	<![CDATA[
			package org.meveo.service.script;

			import java.util.List;
			import java.util.Map;

			import org.meveo.admin.exception.BusinessException;
			import org.meveo.model.billing.BillingRun;
			import org.meveo.model.billing.BillingRunStatusEnum;
			import org.meveo.service.billing.impl.BillingRunExtensionService;
			import org.meveo.service.billing.impl.BillingRunService;

			public class ValidateBRScript extends Script {

				@Override
				public void execute(Map<String, Object> methodContext) throws BusinessException {

					BillingRunService billingRunService = (BillingRunService) getServiceInterface("BillingRunService");

					BillingRunExtensionService billingRunExtensionService = (BillingRunExtensionService) getServiceInterface(
							"BillingRunExtensionService");

					if (billingRunService != null) {
						List<BillingRun> billingRuns = billingRunService.getBillingRuns(BillingRunStatusEnum.PREINVOICED,  BillingRunStatusEnum.POSTINVOICED);

						for (BillingRun billingRun : billingRuns) {

							try {
								billingRunExtensionService.updateBillingRun(billingRun.getId(), null, null,
										BillingRunStatusEnum.POSTVALIDATED, null);
							} catch (Exception e) {
								System.err.println("Error " + e.getMessage());
							}
						}

					}

				}
			}
					]]>
            </column>
            <where>id=-24</where>
        </update>
    </changeSet>

	<changeSet id="#INTRD-7375_20220523" author="ZBariki">
		<update tableName="finance_settings">
			<column name="auxiliary_account_code_el" value="#{substring(gcl.code, 0, 3), String.class)ca.description};" />
			<column name="auxiliary_account_label_el" value="#{ca.description};" />
			<where> auxiliary_account_label_el is NULL AND auxiliary_account_code_el is NULL</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7428_20220524" author="ZBariki">
		<update tableName="finance_settings">
			<column name="auxiliary_account_code_el" value="#{substring(gcl.code, 0, 3)ca.description};" />
			<where> auxiliary_account_code_el = '#{substring(gcl.code, 0, 3), String.class)ca.description};' </where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7360_20220525" author="hichamhanine">
		<update tableName="ar_accounting_scheme">
			<column name="long_description_i18n">
				<![CDATA[{"FRA":"<p>Ce schéma produit 2 lignes d'écriture:</p><ul><li>Une ligne pour le compte et le sens définis sur le type d'opération de de compte</li><li>Une ligne pour le compte de contrepartie défini sur le type d'opération de compte, mais avec un sens opposé</li></ul>","ENG":"<p>This scheme produces 2 accounting entries:</p><ul><li>An entry for the accounting code and the direction defined on the account operation type</li><li>An entry for the contra account defined on the account operation, type but with the opposite direction</li></ul>"}]]>
			</column>
			<where>code='Dual entry scheme'</where>
		</update>
	</changeSet>

	<changeSet id="#7477-260522" author="HatimOUDAD">
		<update tableName="global_settings">
			<column name="quote_default_validity_delay" value="30" />
			<where>quote_default_validity_delay is null</where>
	</update>
	</changeSet>

	<changeSet id="#INTRD-7573_20220602" author="TarikFA.">
		<update tableName="billing_invoice_cat">
			<column name="version" value="0" />
			<where>code='ICAT_SECURITY_DEPOSIT'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7750_20220608" author="ZBariki">
		<update tableName="open_order_template">
			<column name="status" valueComputed="upper(status)"/>
			<where>status IS NOT NULL</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7402_20220608" author="aelmalki" failOnError="false">
		<!-- failOnError because some one added thos occ_templae manualy in dev env -->
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-62" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PPL_CREATION" />
			<column name="description" value="Payment plan Creation" />
			<column name="occ_category" value="CREDIT" />
			<column name="journal_id" value="-3" />
			<column name="manual_creation_enabled" value="0"/>
		</insert>
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-63" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="accounting_code_id" valueNumeric="-6" />
			<column name="code" value="PPL_INSTALLMENT" />
			<column name="description" value="Payment plan Installment" />
			<column name="occ_category" value="DEBIT" />
			<column name="journal_id" value="-3" />
			<column name="manual_creation_enabled" value="0"/>
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-7632_20220611" author="HatimOUDAD">
		<update tableName="cpq_order_product">
			<column name="instance_status" value="ACTIVE" />
			<where> instance_status is null and production_action_type = 'ACTIVATE'</where>
		</update>
		<update tableName="cpq_order_product">
			<column name="instance_status" value="INACTIVE" />
			<where> instance_status is null and production_action_type = 'CREATE'</where>
		</update>
		<update tableName="cpq_order_product">
			<column name="instance_status" value="SUSPENDED" />
			<where> instance_status is null and production_action_type = 'SUSPEND'</where>
		</update>
		<update tableName="cpq_order_product">
			<column name="instance_status" value="TERMINATED" />
			<where> instance_status is null and production_action_type = 'TERMINATE'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-7722_20220618" author="ZBariki">
		<delete tableName="adm_custom_generic_entity_code" />
		<delete tableName="generic_sequence" />

		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="bill_seq_invoice_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="code" value="quote_offer_sequence" />
			<column name="description" value="Quote Offer sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="9" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="QuoteOffer" />
			<column name="code_el" value="#{entity.quoteVersion.id}_#{entity.offerTemplate.code}_#{sequenceNextValue}" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="sequence_id" valueSequenceCurrent="bill_seq_invoice_seq" />
		</insert>

		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="bill_seq_invoice_seq"/>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="code" value="order_offer_sequence" />
			<column name="description" value="Order Offer sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="9" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="OrderOffer" />
			<column name="code_el" value="#{entity.order.code}_#{entity.offerTemplate.code}_#{sequenceNextValue}" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="sequence_id" valueSequenceCurrent="bill_seq_invoice_seq" />
		</insert>

		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="bill_seq_invoice_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="version" valueNumeric="1" />
			<column name="code" value="accounting_scheme_sequence" />
			<column name="description" value="AccountingScheme sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="10" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="AccountingScheme" />
			<column name="code_el" value="#{sequenceNextValue}" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="sequence_id" valueSequenceCurrent="bill_seq_invoice_seq" />
		</insert>

		<insert tableName="generic_sequence">
			<column name="id" valueSequenceNext="bill_seq_invoice_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="discount_plan_item_seq" />
			<column name="description" value="Discount plan item sequence" />
			<column name="sequence_type" value="SEQUENCE" />
			<column name="sequence_size" valueNumeric="10" />
			<column name="current_number" valueNumeric="0" />
		</insert>
		<insert tableName="adm_custom_generic_entity_code">
			<column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq" />
			<column name="entity_class" value="org.meveo.model.catalog.DiscountPlanItem" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="sequence_id"
					valueComputed="(SELECT id from generic_sequence where code = 'discount_plan_item_seq')" />
		</insert>
	</changeSet>
	<changeSet id="#INTRD-8004_210622" author="AbdelkaderBouazza">
		<insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-64" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="code" value="REF_CASH" />
			<column name="description" value="Refund - cash" />
			<column name="occ_category" value="DEBIT" />
			<column name="account_code_client_side" value="411000000" />
			<column name="journal_id" value="-2" />
			<column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
			<column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='531100000')" />
			<column name="contra_accounting_code2_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='419000000')" />
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code = 'Dual entry scheme')" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-1304_21062022" author="AbdelmounaimAkadid">
		<insert tableName="global_settings">
			<column name="id" valueSequenceNext="global_settings_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="quote_default_validity_delay" value="30" />
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-8420_20220708" author="hichamHANINE">
		<update tableName="meveo_script_instance">
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='ACCOUNTING_SCHEMES')" />
			<where> code IN ('org.meveo.service.script.accountingscheme.PaymentAccountingSchemeScript')</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-8507_20220715" author="ZBariki">
		<update tableName="billing_wallet_operation">
			<column name="rated_transaction_id" value="null"/>
			<where>rated_transaction_id NOT IN (SELECT id FROM billing_rated_transaction)</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-8618-20220719" author="aelmalki">
		<update tableName="cpq_attribute">
			<column name="el_value">${sub.getSubscriptionDate()}</column>
			<where>id=-8</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-8700_20220728" author="ZBariki">
		<update tableName="billing_tax">
			<column name="composite" valueNumeric="0"/>
			<where>composite IS NULL</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-8946_20220804" author="aelmalki">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[package org.meveo.service.script.demo;

import java.io.StringReader;
import java.util.Map;
import javax.xml.xpath.*;
import org.meveo.admin.exception.BusinessException;
import org.meveo.model.payments.*;
import org.meveo.service.script.payment.PaymentScript;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xml.sax.InputSource;

/**
 * @author anasseh
 */
public class CustomGatewayPaymentScript extends PaymentScript{
    private static final Logger log = LoggerFactory.getLogger(CustomGatewayPaymentScript.class);

    public void createCardToken(Map<String, Object> methodContext) throws BusinessException {
        methodContext.put(PaymentScript.RESULT_TOKEN, "7ced0000-3ab2-000d-6a50-08d4b8a6"+(int )(Math.random() * 1000 + 1));
    }
    public void doPaymentToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL");
    }
      public void doPaymentCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL_CARD");
    }

    public void doRefundToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD");
    }
   public void doRefundCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD_CARD");
    }

    private void doIt(Map<String, Object> methodContext,String operationType) throws BusinessException {
        try{
            log.debug("EXECUTE  methodContext {} ", methodContext);
            Long amountCts = (Long)methodContext.get(PaymentScript.CONTEXT_AMOUNT_CTS);
            if(amountCts == null){
                throw new BusinessException("amountCts is null");
            }
            CardPaymentMethod paymentToken = (CardPaymentMethod)methodContext.get(PaymentScript.CONTEXT_TOKEN);
            if(paymentToken == null && (operationType.equals("PAL") || operationType.equals("RFD"))){
                throw new BusinessException("paymentMethod is null");
            }

            //DEMO : get tokenId or card infos from context
            String body  = "{";
            body  += " \"PSPID\" : \"PSPID\" ,";
            body  += " \"USERID\" : \"USERID\" ,";
            body  += " \"PSWD\" : \"PSWD\" ,";
            body  += " \"REFKIND\" :  \"PSPID\" ,";
            body  += " \"REFID\" : \"PSPID\" ,";
            body  += " \"OPERATION\" : \""+operationType +"\" ,";
            body  += " \"AMOUNT\" : \""+amountCts.longValue()+"\" ,";
            body  += " \"SHASIGN\" : \"SHASIGN\" ,";
            body  += " }";


            String paymentResponse = "<root>";
            paymentResponse += "<STATUS>92</STATUS>";
            paymentResponse += "<PAYID>"+((int )(Math.random() * 100000 + 1))+"</PAYID>";
            paymentResponse += "<TRANSACTIONID>92</TRANSACTIONID>";
            paymentResponse += "<CRMTOKEN>clientSide</CRMTOKEN>";
            paymentResponse += "<BRAND>VISA</BRAND>";
            paymentResponse += "<ACCEPTENCE>bankRef</ACCEPTENCE>";
            paymentResponse += "</root>";
            methodContext.put(PaymentScript.RESULT_PAYMENT_STATUS, PaymentStatusEnum.PENDING);
            methodContext.put(PaymentScript.RESULT_PAYMENT_ID, getValue(paymentResponse,"/root/PAYID"));
            methodContext.put(PaymentScript.RESULT_TRANSACTION_ID, getValue(paymentResponse,"/root/TRANSACTIONID"));
            methodContext.put(PaymentScript.RESULT_CODE_CLIENT_SIDE, getValue(paymentResponse,"/root/CRMTOKEN"));
            methodContext.put(PaymentScript.RESULT_PAYMENT_BRAND, getValue(paymentResponse,"/root/BRAND"));
            methodContext.put(PaymentScript.RESULT_BANK_REFERENCE, getValue(paymentResponse,"/root/ACCEPTENCE"));
        } catch (Exception e) {
            throw new BusinessException(e.getMessage());
        }
    }
    private String getValue(String sourceXML,String expression) throws XPathExpressionException{
        InputSource iSource = new InputSource(new StringReader(sourceXML));
        XPathFactory xpathFactory = XPathFactory.newInstance();
        XPath xpath = xpathFactory.newXPath();
        return xpath.evaluate(expression, iSource);
    }
}
                ]]>
			</column>
			<where>code='org.meveo.service.script.demo.CustomGatewayPaymentScript'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-8903_08112022" author="ZBariki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="2022-08-11 15:13:19.913" />
			<column name="job_category" value="ORDERING" />
			<column name="job_template" value="OpenOrderStatusJob" />
			<column name="code" value="OpenOrderStatusJob" />
			<column name="creator" value="applicationInitializer" />
			<column name="timerentity_id"
					valueComputed="(SELECT id from meveo_timer where code = 'Daily-midnight')" />
			<column name="uuid" value="OpenOrderStatusJob_Job" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-9839_19012022" author="TarikRabeh">
        <update tableName="dwh_report_extract">
            <column name="sql_query" >
                <![CDATA[SELECT
				    TO_CHAR(ao.invoice_date,'MM') AS "Mois",
				    TO_CHAR(ao.invoice_date,'DD/MM/YYYY') AS "Date facture",
				    text('HG') AS "Code comptable",
				    ae.code AS "Client facturé",
				    text('MAI') AS "Type article",
				    split_part(bac.code, ',', 6) AS "Famille statistique",
				    split_part(bac.code, ',', 2) AS "Article",
				    trim(TO_CHAR(ia.amount_without_tax,'9999990D00')) AS "Montant HT",
				    trim(TO_CHAR(ia.quantity,'9999990')) AS "Qté facturée",
				    ao.reference AS "No facture",
				    ao.description AS "Catégorie facture",
				    ao.code AS "Type de pièce",
				    text('VEN') AS "Journal"
				FROM
				    ar_customer_account ae
				INNER JOIN ar_account_operation ao ON ao.customer_account_id = ae.id
				INNER JOIN billing_invoice i ON i.invoice_number = ao.reference
				INNER JOIN billing_invoice_agregate ia ON (ia.invoice_id = i.id AND type = 'F')
				LEFT JOIN billing_accounting_code bac ON bac.id = ia.accounting_code_id
				WHERE :START_DATE<>:END_DATE
				AND ao.invoice_date >= to_date('01/' || TO_CHAR(CURRENT_DATE,'MM/YYYY'),'DD/MM/YYYY') + interval '-12 month'
				AND ao.invoice_date <= to_date('01/' || TO_CHAR(CURRENT_DATE,'MM/YYYY'),'DD/MM/YYYY') + interval '0 month'
				ORDER BY
				    ae.code,
				    ao.code,
				    split_part(bac.code, ',', 6),
				    split_part(bac.code, ',', 2)
			    ]]></column>
            <where>code='SALES_JOURNAL'</where>
        </update>
    </changeSet>
    
    <changeSet id="#INTRD-10047_20220926_default_sd_template" author="a.rouaguebe">
		<insert tableName="security_deposit_templat">
			<column name="id" valueSequenceNext="security_deposit_templat_seq" />
			<column name="template_name" value="DEFAULT_SD_TEMPLATE" />
			<column name="code" valueComputed="${uuid_function}" />
			<column name="status" value="ACTIVE" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="version" valueNumeric="0" />
			<column name="creator" value="applicationInitializer"></column>
		</insert>
		<modifySql dbms="postgresql">
			<append value=" on conflict do nothing"/>
		</modifySql>
		<modifySql dbms="mysql">
			<replace replace="INSERT" with="INSERT IGNORE"/>
		</modifySql>
		<modifySql dbms="oracle">
			<replace replace="INSERT" with="INSERT /*+ ignore_row_on_dupkey_index(security_deposit_templat, uk_security_deposit_template_name) */"/>
		</modifySql>
    </changeSet>

	<changeSet id="#INTRD-10247_20220928_default_currency_sd_template" author="a.rouaguebe">
		<update tableName="security_deposit_templat">
			<column name="currency_id" valueComputed="(SELECT currency_id from crm_provider where id = 1)"></column>
			<where>template_name = 'DEFAULT_SD_TEMPLATE'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-10400_20221007" author="HichamHANINE">
    	<update tableName="security_deposit">
    	<column name="status" value="VALIDATED"/>
    	<where>status='NEW'</where>
    	</update>
    </changeSet>
	
	<changeSet id="#9811_10102022" author="Mbarek-Ay">
	<insert tableName="meveo_job_instance">
		<column name="id" valueSequenceNext="meveo_job_instance_seq" />
		<column name="version" valueNumeric="0" />
		<column name="disabled" valueNumeric="1" />
		<column name="created" valueDate="2022-10-10 15:04:19.913" />
		<column name="job_category" value="INVOICING" />
		<column name="job_template" value="InvoiceLinesMinimumJob" />
		<column name="code" value="Invoice_Lines_Minimum_Job" />
		<column name="creator" value="OPENCELL.ADMIN" />
		<column name="timerentity_id" valueNumeric="-1" />
		<column name="uuid" value="Invoice_Lines_Minimum_Job" />
		<column name="cf_values"
			value='{"waitingMillis":[{"long":0}],"nbRuns":[{"long":-1}]}' />
	  </insert>
    </changeSet>
    
    <changeSet id="#INTRD-10592_20221014" author="TarikFA.">
    	<update tableName="billing_accounting_code">
            <column name="description" value="General accounts payable"></column>
    		<where>code = '401000000'</where>
    	</update>
    </changeSet>

    <changeSet id="#INTRD-10587_20221014" author="TarikFA.">
    	<update tableName="ar_occ_template" >
			<column name="accounting_code_id" valueNumeric="null"></column>
			<where>id in (SELECT id from billing_accounting_code where code in ('120.121.21.4', '120.121.21.2', 'T3P9476'))</where>
		</update>
		<update tableName="billing_invoice_sub_cat" >
            <column name="accounting_code_id" value="null" />
			<where>id in (SELECT id from billing_accounting_code where code in ('120.121.21.4', '120.121.21.2', 'T3P9476'))</where>
		</update>
		<delete tableName="billing_accounting_code">
			<where>code in ('120.121.21.4', '120.121.21.2')</where>
		</delete>
		
		<update tableName="ar_occ_template" >
            <column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
			<where>code = 'PAY_BATCH'</where>
		</update>
    </changeSet>
    
    <changeSet id="#INTRD-10541_20221017" author="TarikFA.">
    	<update tableName="billing_linked_invoices">
    		<column name="type" value="ADJUSTMENT" />
    	</update>
    </changeSet>

	<changeSet id="#INTRD-10572_20221014" author="HichamHANINE">
		<update tableName="crm_customer_category">
			<column name="tax_category_id" value="-3" />
			<where>id in (-1,-2)</where>
		</update>
    </changeSet>
    
   	<changeSet id="#INTRD-10572_20221018" author="HichamHANINE">
   		<update tableName="crm_customer_category">
			<column name="tax_category_id" value="-1" />
			<where>id in (-1,-2)</where>
		</update>
		<update tableName="billing_tax_mapping">
			<column name="tax_category_id" value="-1" />
			<where>tax_category_id = -3</where>
		</update>
		<update tableName="billing_billing_account">
			<column name="tax_category_id" value="-1" />
			<where>tax_category_id = -3</where>
		</update>
		<update tableName="billing_tax_category">			
			<column name="code" value="REGULAR1"/>        
			<where>id = -3</where>
		</update>
		<update tableName="billing_tax_category">			
			<column name="code" value="REGULAR"/>
            <column name="description_i18n" value='{"FRA":"Standard","ENG":"Regular"}'/>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="uuid" value="billing_tax_category_regular" />            
			<where>id = -1</where>
		</update>
		<delete tableName="billing_tax_category">
			<where>id = -3</where>
		</delete>
    </changeSet>

	<changeSet id="#INTRD-10692_20221019_ajd_occ_template" author="a.rouaguebe">
		<insert tableName="ar_occ_template">
			<column name="id" valueSequenceNext="ar_occ_template_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="applicationInitializer" />
			<column name="code" value="ADJ_SD" />
			<column name="description" value="Adjustment to refund security deposit" />
			<column name="occ_category" value="CREDIT" />
			<column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
			<column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='165000000')" />
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code = 'Dual entry scheme')" />
			<column name="journal_id" valueComputed="(SELECT id FROM journal WHERE code = 'SAL')" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-10523_20221020" author="aelmalki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="2022-10-20 00:00:00.000" />
			<column name="job_category" value="ACCOUNTING" />
			<column name="job_template" value="AssignMatchingCodeToOldEntriesJob" />
			<column name="code" value="AssignMatchingCodeToOldEntriesJob" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="timerentity_id" valueNumeric="null" />
			<column name="uuid" value="AssignMatchingCodeToOldEntriesJob" />
		</insert>
	</changeSet>

	<changeSet id="#INTRD-10907_20221026" author="EBOURRAS">
		<insert tableName="billing_invoice_type_applies_to">
			<column name="invoice_type_id" value="-1"/>
			<column name="applies_to_id" value="-5"/>
		</insert>
	</changeSet>


	<changeSet id="#INTRD-10772_20221025_ajd_occ_template" author="e.bourras">
		<insert tableName="ar_occ_template">
			<column name="id" valueSequenceNext="ar_occ_template_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="code" value="PAY_SD" />
			<column name="description" value="Security Deposit Payment" />
			<column name="occ_category" value="CREDIT" /><column name="manual_creation_enabled" value="0"/>
			<column name="journal_id" valueComputed="(SELECT id FROM journal where code = 'SAL')"/>
			<column name="manual_creation_enabled" value="0"/>
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-11124_20221102" author="HatimOUDAD">
		<update tableName="meveo_job_instance">
			<column name="disabled" value="0" />
			<where>code = 'AutoUpdateCurrentRateJob_Job'</where>
		</update>
    </changeSet>
    
    <changeSet id="#INTRD-11154_20221102" author="TarikFA.">
    	<update tableName="billing_accounting_article">
            <column name="accounting_code_id" value="-6" />
            <column name="invoice_type_id" value="-5" />
        	<column name="tax_class_id" value="-3"/>
        	<where> code = 'ADV-STD'</where>
    	</update>
    </changeSet>
    
    <changeSet id="#INTRD-9161_20221102" author="TarikFA.">
    	<update tableName="billing_invoice_type">
           <column name="description" value="Call for advance payment" />
        	<where> code = 'ADV'</where>
    	</update>
    </changeSet>
    
    <changeSet id="INTRD-11152_20221102" author="TarikFA.">
         <insert tableName="ar_occ_template">
			<column name="id" valueNumeric="-65" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="INV_ADV" />
			<column name="description" value="Call for advance payment" />
		</insert>
		<update tableName="billing_invoice_type">
           <column name="occ_template_id"  valueComputed="(SELECT id FROM ar_occ_template WHERE code='INV_ADV')" />
			<column name="description" value="Call for advance payment" />
        	<where> code = 'ADV'</where>
    	</update>
	</changeSet>
	
	<changeSet id="#INTRD-11244_20221104" author="TarikFA.">
		<update tableName="ar_occ_template">
			<column name="occ_category" value="DEBIT" />
			<where> code = 'INV_ADV'</where>
		</update>
	</changeSet>
	
	<changeSet id="#INTRD-10199_20221010" author="TarikFA.">
		<update tableName="ar_occ_template" >
			<column name="accounting_code_id" valueNumeric="null"></column>
			<where>id = -50</where>
		</update>
		<delete tableName="billing_accounting_code">
			<where>code = 'T3P9476'</where>
		</delete>
	</changeSet>
	
	<changeSet id="#INTRD-11165_20221108" author="HatimOUDAD">
		<update tableName="billing_invoice_line">
			<column name="adjustment_status" value="NOT_ADJUSTED" />
			<where> adjustment_status is null</where>
		</update>
	</changeSet>

	<changeSet id="INTRD-11122_20221104" author="HichamELHALOUI">
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueNumeric="-3"/>
			<column name="version" valueNumeric="0"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="code" value="INVOICE_VALIDATION"/>
			<column name="description" value="Invoice validation"/>
			<column name="description_i18n" value='{"FR":"Validation de facture","EN":"Invoice validation"}'/>
		</insert>
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueNumeric="-4"/>
			<column name="version" valueNumeric="0"/>
			<column name="created" valueDate="${db.current.time}"/>
			<column name="code" value="BILLING_RUN_VALIDATION"/>
			<column name="description" value="Billing run validation"/>
			<column name="description_i18n"
					value='{"FR":"Validation de run de facturation","EN":"Billing run validation"}'/>
		</insert>
		<update tableName="meveo_script_instance_cat">
			<column name="description_i18n" value='{"FR":"Extraction de rapport","EN":"Report Extract"}'/>
			<where>code = 'REPORT_EXTRACT'</where>
		</update>
		<update tableName="meveo_script_instance_cat">
			<column name="description_i18n" value='{"FR":"Schéma comptable","EN":"Accounting schemes"}'/>
			<where>code = 'ACCOUNTING_SCHEMES'</where>
		</update>
		<update tableName="meveo_script_instance_cat">
			<column name="description_i18n" value='{"FR":"Action de recouvrement","EN":"Dunning action"}'/>
			<where>code = 'DUNNING_ACTION'</where>
		</update>


	</changeSet>

	<changeSet id="INTRD-11124_20221109" author="aelmalki">
		<insert tableName="meveo_timer">
			<column name="id" valueNumeric="-4" />
			<column name="version" valueNumeric="0" />
			<column name="sc_d_o_month" value="*" />
			<column name="sc_d_o_week" value="*" />
			<column name="sc_hour" value="0" />
			<column name="sc_min" value="0" />
			<column name="sc_month" value="*" />
			<column name="sc_sec" value="1" />
			<column name="sc_year" value="*" />
			<column name="code" value="Daily-midnight-start-of-day" />
			<column name="created" valueDate="2017-06-29 00:04:19.913" />
		</insert>
		<update tableName="meveo_job_instance">
			<column name="timerentity_id">-4</column>
			<where>code='AutoUpdateCurrentRateJob_Job'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-11328_20221110" author="aelmalki">
		<insert tableName="crm_custom_field_tmpl">
			<column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="cleanAppliedRateInvoice"/>
			<column name="applies_to" value="JobInstance_AutoUpdateCurrentRateJob"/>
			<column name="description" value="Clean Invoice applied rate"/>
			<column name="field_type" value="BOOLEAN"/>
			<column name="storage_type" value="SINGLE"/>
			<column name="value_required" value="0"/>
			<column name="default_value" value="0"/>
			<column name="creator" value="applicationInitializer"/>
			<column name="gui_position" value="tab:Configuration:0;field:0"/>
		</insert>

		<update tableName="meveo_job_instance">
			<column name="cf_values" value='{"cleanAppliedRateInvoice": [{"boolean": false}]}' />
			<where> code='AutoUpdateCurrentRateJob_Job'</where>
		</update>
	</changeSet>
    
    <changeSet id="#INTR-11598_20221116" author="TarikFA.">
        <update tableName="meveo_job_instance">
            <column name="code" value="AutoUpdateCurrentRateJob"/>
            <where>code = 'AutoUpdateCurrentRateJob_Job'</where>
        </update>
        <update tableName="meveo_job_instance">
            <column name="code" value="AutoRefundSecurityDepositJob"/>
            <where>code = 'AutoRefundSecurityDepositJob_Job'</where>
        </update>
    </changeSet>

	<changeSet id="#INTRD-11681_20221117" author="ebourras">
		<update tableName="ar_occ_template">
			<column name="description" value="Payment by security deposit" />
			<column name="accounting_code_id" valueComputed="(select id from public.billing_accounting_code where code = '411000000')"/>
			<column name="contra_accounting_code_id" valueComputed="(select id from public.billing_accounting_code where code = '165000000')"/>
			<column name="accounting_scheme_id" valueComputed="(select id from ar_accounting_scheme where code = 'Dual entry scheme')"/>
			<where>code = 'PAY_SD'</where>
		</update>
	</changeSet>
	<changeSet id="#INTRD-11503_20221116" author="aeljaouhari">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="INVOICING" />
			<column name="job_template" value="MassAdjustmentJob" />
			<column name="code" value="Mass_Adjustment" />
			<column name="description" value="Mass Adjustment Job" />
			<column name="creator" value="applicationInitializer" />
			<column name="uuid" value="Mass_Adjustment" />
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-11745_20221130" author="TarikFA.">
		<update tableName="billing_invoice_type">
			<column name="description" value="Manual adjustment"/>
			<where>code = 'ADJ'</where>
		</update>
		
		<insert tableName="ar_occ_template">
            <column name="id" valueNumeric="-26" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ADJ_REF" />
            <column name="description" value="Refundable adjustment" />
            <column name="occ_category" value="CREDIT" />
			<column name="manual_creation_enabled" value="0"/>
            <column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='701000000')" />
            <column name="contra_accounting_code2_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='445710000')" />
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code='Invoice and Credit Note')" />
            <column name="account_code_client_side" value="701000000" />
    		<column name="journal_id" value="-1" />
    		<column name="accounting_code_id" value="-6" />
		</insert>
		
		<insert tableName="ar_occ_template">
            <column name="id" valueNumeric="-27" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="ADJ_INV" />
            <column name="description" value="Adjustment on invoice" />
            <column name="occ_category" value="CREDIT" />
			<column name="manual_creation_enabled" value="0"/>
            <column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='701000000')" />
            <column name="contra_accounting_code2_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='445710000')" />
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code='Invoice and Credit Note')" />
            <column name="account_code_client_side" value="701000000" />
    		<column name="journal_id" value="-1" />
    		<column name="accounting_code_id" value="-6" />
		</insert>
		
		<insert tableName="billing_invoice_type">
            <column name="id" valueNumeric="-7" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
			<column name="code" value='ADJ_REF' />
			<column name="description" value='Refundable adjustment' />
            <column name="invoice_sequence_id" valueComputed="(SELECT id from billing_seq_invoice where code = 'ADJ')" />
            <column name="occ_template_id" value="-26" />
            <column name="matching_auto" valueNumeric="0" />
            <column name="uuid" value="InvoiceType-ADJ-REF" />
            <column name="invoice_accountable" value="1" />
		</insert>
		
		<insert tableName="billing_invoice_type">
            <column name="id" valueNumeric="-8" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
			<column name="code" value='ADJ_INV' />
			<column name="description" value='Adjustment on invoice' />
            <column name="invoice_sequence_id" valueComputed="(SELECT id from billing_seq_invoice where code = 'ADJ')" />
            <column name="occ_template_id" value="-27" />
            <column name="matching_auto" valueNumeric="0" />
            <column name="uuid" value="InvoiceType-ADJ-INV" />
            <column name="invoice_accountable" value="1" />
		</insert>
		
		<insert tableName="billing_invoice_type_applies_to">
			<column name="invoice_type_id" valueNumeric="-8" />
			<column name="applies_to_id" valueNumeric="-1" />
		</insert>
	</changeSet>
	
	<changeSet id="INTRD_11783_20221201_compate_invoice_amount" author="a.rouaguebe">
    
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareInvoiceAmount" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareInvoiceAmount extends CompareInvoiceAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Invoice amount will be compared to provided amount using the selected operator. Invoice must match this criteria to be valid."/>
			<column name="description_i18n" value='{"FR":"Le montant de la facture sera comparé au montant indiqué en utilisant l’opérateur sélectionné. La facture doit répondre à se critère pour être valide.","EN":"Invoice amount will be compared to provided amount using the selected operator. Invoice must match this criteria to be valid."}'/>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FR":"Montant à tester","EN":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="withoutTax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="withoutTax|withTax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|&lt;=|=|!=|&gt;|&gt;=" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FR":"Valeur","EN":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>
    </changeSet>

	<changeSet id="#INTRD-12024_20221202" author="aeljaouhari">
		<update tableName="billing_invoice_type">
			<column name="description" value="Security Deposit"/>
			<where>code = 'SECURITY_DEPOSIT'</where>
		</update>
		<update tableName="billing_invoice_type">
			<column name="description" value="Commercial order"/>
			<where>code = 'COMMERCIAL_ORDER'</where>
		</update>
		<update tableName="billing_invoice_type">
			<column name="description" value="Quote"/>
			<where>code = 'QUOTE'</where>
		</update>
		<delete tableName="billing_invoice_type">
			<where>code='DRAFT'</where>
		</delete>
	</changeSet>
	
	
	<changeSet id="INTRD_12001_20221205" author="TarikFA.">
    
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareOfferAmountScript" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareOfferAmount extends CompareOfferAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Amount invoiced for each offer in the list will be compared to the provided value using the selected operator. For the invoice to be valid, tested amount must pass the test. If offer list is empty, then rule will always pass. Only offer actually present on invoice will be tested."/>
			<column name="description_i18n" value='{"FR":"Le montant facturé pour chacune des offres dans la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné. 
			Pour que la facture soit valide, le montant testé doit passer le test. 
			Si la liste des offres est vide, alors la règle passera toujours. 
			Seule les offres effectivement présentes sur la facture seront testées.",
			"EN":"Amount invoiced for each offer in the list will be compared to the provided value using the selected operator. 
			For the invoice to be valid, tested amount must pass the test. 
			If offer list is empty, then rule will always pass. 
			Only offer actually present on invoice will be tested."}'/>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="offers" />
			<column name="description_i18n" value='{"FR":"Offres à vérifier","EN":"Offers to check"}'/>
			<column name="class_name" value="org.meveo.model.catalog.OfferTemplate" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmountScript')" />
		</insert>
		
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="description_i18n" value='{"FR":"Montant à tester","EN":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="withoutTax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="withoutTax|withTax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmountScript')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|&lt;=|=|!=|&gt;|&gt;=" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmountScript')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="description_i18n" value='{"FR":"Valeur","EN":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmountScript')" />
		</insert>
    </changeSet>
    
    <changeSet id="INTRD-12266_20221214" author="aeljaouhari">
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateCreditCategoryScript" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateCreditCategory extends ValidateCreditCategoryScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The customer (customer account actually) credit category must not be in the provided list for the rule to pass.If customer credit category is in the list, the rule will fail.If credit category list is empty, then rule will always pass."/>
            <column name="description_i18n">
				<![CDATA[{"EN":"<p>The customer's (customer account actually) credit category must not be in the provided list for the rule to pass.</p><p>If customer's credit category is in the list, the rule will fail.</p><p>If credit category list is empty, then rule will always pass.</p>","FR":"<p>Le catégorie de crédit du client (customer account) ne doit pas être dans la liste fournie pour que la règle passe.</p><p>Si la catégorie de crédit du client est dans la liste, la règle va échouer.</p><p>Si la liste de catégories de crédit est vide, la règle passera toujours.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="CheckCreditCategory" />
			<column name="description_i18n" value='{"FR":"Catégories de crédit interdites","EN":"Forbidden credit categories"}'/>
			<column name="class_name" value="org.meveo.model.payments.CreditCategory" />
			<column name="mandatory" valueNumeric="0" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCreditCategoryScript')" />
		</insert>
    </changeSet>

    <changeSet id="INTRD-12103_20221215_rebuild" author="HichamHANINE">
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareOfferLinesAmountScript" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareOfferLinesAmount extends CompareOfferLinesAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.
For the invoice to be valid, all tested invoice lines must pass the test.
If offer list is empty, then rule will always pass.
Only offer actually present on invoice will be tested."/>
			<column name="description_i18n" value='{"FR":"Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.
Pour que la facture soit valide, toutes les lignes de facture testées doivent passer le test.
Si la liste des offres est vide, alors la règle passera toujours.
Seule les offres effectivement présentes sur la facture seront testées.",
			"EN":"Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.
For the invoice to be valid, all tested invoice lines must pass the test.
If offer list is empty, then rule will always pass.
Only offer actually present on invoice will be tested."}'/>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="offers" />
			<column name="description_i18n" value='{"FR":"Offres à vérifier","EN":"Offers to check"}'/>
			<column name="class_name" value="org.meveo.model.catalog.OfferTemplate" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="description_i18n" value='{"FR":"Montant à tester","EN":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="withoutTax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="withoutTax|withTax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|&lt;=|=|!=|&gt;|&gt;=" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="description_i18n" value='{"FR":"Valeur","EN":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
    </changeSet>
    
    <changeSet id="INTRD-12598_20221227_rebuild" author="HichamHANINE">    	
	    <delete tableName="meveo_script_parameter">
	        <where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')</where>
	    </delete>
	    <delete tableName="meveo_script_instance">
	        <where>code = 'org.meveo.service.script.CompareOfferLinesAmountScript'</where>
	    </delete>
		
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareOfferLinesAmountScript" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareOfferLinesAmount extends CompareOfferLinesAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.
For the invoice to be valid, all tested invoice lines must pass the test.
If offer list is empty, then rule will always pass.
Only offer actually present on invoice will be tested."/>
			<column name="description_i18n" value='{"FR":"Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.
Pour que la facture soit valide, toutes les lignes de facture testées doivent passer le test.
Si la liste des offres est vide, alors la règle passera toujours.
Seule les offres effectivement présentes sur la facture seront testées.",
			"EN":"Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.
For the invoice to be valid, all tested invoice lines must pass the test.
If offer list is empty, then rule will always pass.
Only offer actually present on invoice will be tested."}'/>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="offers" />
			<column name="description_i18n" value='{"FR":"Offres à vérifier","EN":"Offers to check"}'/>
			<column name="class_name" value="org.meveo.model.catalog.OfferTemplate" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="description_i18n" value='{"FR":"Montant à tester","EN":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="without tax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="without tax|with tax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="description_i18n" value='{"FR":"Valeur","EN":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')" />
		</insert>
    </changeSet>
    
    <changeSet id="INTRD-12267_20221219" author="aeljaouhari">
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateCustomerAge" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateCustomerAge extends ValidateCustomerAgeScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days. Age is computed at invoice date. For the invoice to be valid, age must pass the test."/>
            <column name="description_i18n">
				<![CDATA[{"EN":"<p>The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days.</p><p>Age is computed at invoice date.</p><p>For the invoice to be valid, age must pass the test.</p>","FR":"<p>L’âge du client (Customer/Groupe, Customer Account/Compte payeur, Billing account/Compte de facturation) est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p><p>Pour que la facture soit valide, l'âge doit passer le test.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="referenceDate" />
			<column name="description_i18n" value='{"FR":"Date à tester","EN":"Date to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="mandatory" valueNumeric="1" />
			<column name="default_value" value="Billling Account subscription" />
			<column name="allowed_values" value="Customer creation|Customer Account creation|Billing Account creation|Billing Account subscription" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="age" />
			<column name="description_i18n" value='{"FR":"Âge en jour","EN":"Age in days"}'/>
			<column name="class_name" value="java.lang.Integer" />
			<column name="default_value" value="30" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>
    </changeSet>

	<changeSet id="#INTRD-12335_20221216" author="Bourras">
		<update tableName="billing_invoice_sub_cat">
			<column name="accounting_code_id" value="null"/>
		</update>
	</changeSet>
	
	<changeSet id="INTRD-12268_20221221" author="aeljaouhari">
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateSubscriptionAge" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateSubscriptionAge extends ValidateSubscriptionAgeScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The invoice’s subscriptions age in Opencell is compared to a provided number of days. Age is computed at invoice date. For the invoice to be valid, age must pass the test."/>
            <column name="description_i18n">
				<![CDATA[{"EN":"<p>The invoice’s subscriptions age in Opencell is compared to a provided number of days.</p><p>Age is computed at invoice date.</p><p>For the invoice to be valid, age must pass the test.</p>","FR":"<p><L’âge des souscriptions de la facture est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p><p>Pour que la facture soit valide, l'âge doit passer le test.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="referenceDate" />
			<column name="description_i18n" value='{"FR":"Date à tester","EN":"Date to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="mandatory" valueNumeric="1" />
			<column name="default_value" value="Subscription date" />
			<column name="allowed_values" value="Subscription creation|Subscription date" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>
	
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FR":"Operateur de comparaison","EN":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="age" />
			<column name="description_i18n" value='{"FR":"Âge en jour","EN":"Age in days"}'/>
			<column name="class_name" value="java.lang.Integer" />
			<column name="default_value" value="30" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>
    </changeSet>
	<changeSet id="#12569_20221222" author="HichamELHALOUI">
		<delete tableName="dwh_report_extract_params">
			<where> reportextract_id IN (-31, -32, -33, -34 )</where>
		</delete>
		<delete tableName="dwh_report_extract_execution">
	        <where>report_extract_id IN (-31, -32, -33, -34 )</where>
	    </delete>
		<delete tableName="dwh_report_extract">
	        <where>code IN ('KPIAgedBalanceReporting', 'KPICustomerRevenuReporting', 'KPICustomersPerDunningReport', 'KPICustomersPerOfferReport')</where>
	    </delete>
		<delete tableName="meveo_script_instance">
	        <where>code IN ('org.meveo.service.script.presale.KPIAgedBalanceReporting', 'org.meveo.service.script.presale.KPICustomerRevenuReporting', 'org.meveo.service.script.presale.KPICustomerPerDunningReporting', 'org.meveo.service.script.presale.KPICustomerPerOfferReporting')</where>
	    </delete>
	</changeSet>
	<changeSet id="#12573_20221223" author="HichamELHALOUI">
		<delete tableName="dwh_report_extract_params">
			<where> reportextract_id = -29</where>
		</delete>
	    <delete tableName="dwh_report_extract_execution">
	        <where>report_extract_id = -29</where>
	    </delete>
	    <delete tableName="dwh_report_extract">
	        <where>code = 'CustomersPerDunningReport'</where>
	    </delete>
		<delete tableName="meveo_script_instance">
	        <where>code = 'org.meveo.service.script.presale.CustomerPerDunningReporting'</where>
	    </delete>
	</changeSet>
	
	<changeSet id="#OUTRD-3_20221012-job" author="MohamedChaouki">
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq"  />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="updated" valueDate="${db.current.time}" />
			<column name="code" value="CDRtoEDR" />
			<column name="description" value="CDRtoEDR" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="MediationJobV2" />
			<column name="creator" value="opencell.admin" />
			<column name="updater" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
		</insert>
	</changeSet>
	<changeSet id="#OUTRD-3_20221006-scripts" author="MohamedChaouki">
		<!-- SCRIPTS -->
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CdrFlatFileImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.commons.utils.ParamBeanFactory;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.model.rating.CDR;
import org.meveo.service.medina.impl.CDRService;

import java.io.*;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

public class CdrFlatFileImportScript extends Script {

	private static final String DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mm:ssXXX";
	private final ParamBeanFactory paramBeanFactory = (ParamBeanFactory) getServiceInterface(ParamBeanFactory.class.getSimpleName());
	private final CDRService cdrService = (CDRService) getServiceInterface(CDRService.class.getSimpleName());

	public static boolean elementExisted(Map<String, String> context, String[] header, String[] body, String element) {
		return ArrayUtils.indexOf(header, context.get(element)) >= 0
				&& ArrayUtils.indexOf(header, context.get(element)) < body.length;
	}

	@Override
	public void execute(Map<String, Object> contextMethod) throws BusinessException {
		DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
		JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) contextMethod.get("JobExecutionResult");
		Map<String, String> context = (Map<String, String>) jobExecutionResult.getJobInstance().getCfValues().getValues().get("mapping");
		String pathFile = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get("pathFile");

		CDR cdr;
		String rootPathFile = getProviderRootDir() + File.separator + pathFile;
		File dir = new File(rootPathFile);

		File[] fileList = dir.listFiles();
		try {
			for(File fileInput : fileList) {
				File file = new File(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
				if (!file.getParentFile().exists()) {
					file.getParentFile().mkdirs();
				}
				if (!file.exists()) {
					file.createNewFile();
				}
				FileWriter rejectFile = new FileWriter(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
				FileReader fread = new FileReader(fileInput.getAbsolutePath());
				BufferedReader br = new BufferedReader(fread);
				String line = "";
				String splitBy = ";";
				String[] header = br.readLine().split(splitBy);
				while ((line = br.readLine()) != null) {
					cdr = new CDR();
					String[] body = line.split(splitBy);
					Date dateEvent = null;
					Date dateParam1 = null;
					Date dateParam2 = null;
					Date dateParam3 = null;
					Date dateParam4 = null;
					Date dateParam5 = null;
					boolean reject = false;
					try {
						dateEvent = elementExisted(context, header, body, "eventDate") && !body[ArrayUtils.indexOf(header, context.get("eventDate"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("eventDate"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("eventDate"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("eventDate") + " \n");
						reject = true;
					}
					String ac = elementExisted(context, header, body, "accessCode") && !body[ArrayUtils.indexOf(header, context.get("accessCode"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("accessCode"))] : null;
					BigDecimal quantity = elementExisted(context, header, body, "quantity") && !body[ArrayUtils.indexOf(header, context.get("quantity"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("quantity"))]) : null;
					String parameter1 = elementExisted(context, header, body, "parameter1") && !body[ArrayUtils.indexOf(header, context.get("parameter1"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter1"))] : null;
					String parameter2 = elementExisted(context, header, body, "parameter2") && !body[ArrayUtils.indexOf(header, context.get("parameter2"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter2"))] : null;
					String parameter3 = elementExisted(context, header, body, "parameter3") && !body[ArrayUtils.indexOf(header, context.get("parameter3"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter3"))] : null;
					String parameter4 = elementExisted(context, header, body, "parameter4") && !body[ArrayUtils.indexOf(header, context.get("parameter4"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter4"))] : null;
					String parameter5 = elementExisted(context, header, body, "parameter5") && !body[ArrayUtils.indexOf(header, context.get("parameter5"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter5"))] : null;
					String parameter6 = elementExisted(context, header, body, "parameter6") && !body[ArrayUtils.indexOf(header, context.get("parameter6"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter6"))] : null;
					String parameter7 = elementExisted(context, header, body, "parameter7") && !body[ArrayUtils.indexOf(header, context.get("parameter7"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter7"))] : null;
					String parameter8 = elementExisted(context, header, body, "parameter8") && !body[ArrayUtils.indexOf(header, context.get("parameter8"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter8"))] : null;
					String parameter9 = elementExisted(context, header, body, "parameter9") && !body[ArrayUtils.indexOf(header, context.get("parameter9"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter9"))] : null;
					try {
						dateParam1 = elementExisted(context, header, body, "dateParam1") && !body[ArrayUtils.indexOf(header, context.get("dateParam1"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam1") + " \n");
						reject = true;
					}
					try {
						dateParam2 = elementExisted(context, header, body, "dateParam2") && !body[ArrayUtils.indexOf(header, context.get("dateParam2"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam2") + " \n");
						reject = true;
					}
					try {
						dateParam3 = elementExisted(context, header, body, "dateParam3") && !body[ArrayUtils.indexOf(header, context.get("dateParam3"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam3") + " \n");
						reject = true;
					}
					try {
						dateParam4 = elementExisted(context, header, body, "dateParam4") && !body[ArrayUtils.indexOf(header, context.get("dateParam4"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam4") + " \n");
						reject = true;
					}
					try {
						dateParam5 = elementExisted(context, header, body, "dateParam5") && !body[ArrayUtils.indexOf(header, context.get("dateParam5"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) : null;
					} catch (ParseException e) {
						if (!reject)
							rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam5") + " \n");
						reject = true;
					}

					BigDecimal decimalParam1 = elementExisted(context, header, body, "decimalParam1") && !body[ArrayUtils.indexOf(header, context.get("decimalParam1"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam1"))]) : null;
					BigDecimal decimalParam2 = elementExisted(context, header, body, "decimalParam2") && !body[ArrayUtils.indexOf(header, context.get("decimalParam2"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam2"))]) : null;
					BigDecimal decimalParam3 = elementExisted(context, header, body, "decimalParam3") && !body[ArrayUtils.indexOf(header, context.get("decimalParam3"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam3"))]) : null;
					BigDecimal decimalParam4 = elementExisted(context, header, body, "decimalParam4") && !body[ArrayUtils.indexOf(header, context.get("decimalParam4"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam4"))]) : null;
					BigDecimal decimalParam5 = elementExisted(context, header, body, "decimalParam5") && !body[ArrayUtils.indexOf(header, context.get("decimalParam5"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam5"))]) : null;

					cdr.setEventDate(dateEvent);
					cdr.setAccessCode(ac);
					cdr.setQuantity(quantity);
					cdr.setParameter1(parameter1);
					cdr.setParameter2(parameter2);
					cdr.setParameter3(parameter3);
					cdr.setParameter4(parameter4);
					cdr.setParameter5(parameter5);
					cdr.setParameter6(parameter6);
					cdr.setParameter7(parameter7);
					cdr.setParameter8(parameter8);
					cdr.setParameter9(parameter9);
					cdr.setDateParam1(dateParam1);
					cdr.setDateParam2(dateParam2);
					cdr.setDateParam3(dateParam3);
					cdr.setDateParam4(dateParam4);
					cdr.setDateParam5(dateParam5);
					cdr.setDecimalParam1(decimalParam1);
					cdr.setDecimalParam2(decimalParam2);
					cdr.setDecimalParam3(decimalParam3);
					cdr.setDecimalParam4(decimalParam4);
					cdr.setDecimalParam5(decimalParam5);
					if (!reject && cdr.getEventDate() != null && cdr.getQuantity() != null && cdr.getAccessCode() != null && cdr.getParameter1() != null)
						cdrService.create(cdr);
					else if (!reject) {
						validateCdr(line, cdr, context, rejectFile);
					}

				}
				rejectFile.close();
				br.close();
				fread.close();
				fileInput.delete();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	private void validateCdr(String line, CDR cdr, Map<String, String> context, FileWriter file) throws IOException {
		if (cdr.getEventDate() == null) file.write(line + " => " + context.get("eventDate") + " is required\n");
		else if (cdr.getQuantity() == null) file.write(line + " => " + context.get("quantity") + " is required\n");
		else if (cdr.getAccessCode() == null) file.write(line + " => " + context.get("accessCode") + " is required\n");
		else if (cdr.getParameter1() == null) file.write(line + " => " + context.get("parameter1") + " is required\n");

	}


	public String getProviderRootDir() {
		return paramBeanFactory.getDefaultChrootDir();
	}

}				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CdrJsonImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.meveo.admin.exception.BusinessException;
import org.meveo.commons.utils.ParamBeanFactory;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.model.rating.CDR;
import org.meveo.service.medina.impl.CDRService;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;

public class CdrJsonImportScript extends Script {

    private static final String DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mm:ssXXX";
    private final ParamBeanFactory paramBeanFactory = (ParamBeanFactory) getServiceInterface(ParamBeanFactory.class.getSimpleName());
    private final CDRService cdrService = (CDRService) getServiceInterface(CDRService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> contextMethod) throws BusinessException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        JSONParser parser = new JSONParser();
        JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) contextMethod.get("JobExecutionResult");
        Map<String, String> context = (Map<String, String>) jobExecutionResult.getJobInstance().getCfValues().getValues().get("mapping");
        String pathFile = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get("pathFile");
        CDR cdr;
        String rootPathFile = getProviderRootDir() + File.separator + pathFile;
        File dir = new File(rootPathFile);

        File[] fileList = dir.listFiles();
        try {
            for(File fileInput : fileList) {
            File file = new File(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
            if (!file.getParentFile().exists()) {
                file.getParentFile().mkdirs();
            }
            if (!file.exists()) {
                file.createNewFile();
            }
            FileWriter rejectFile = new FileWriter(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
            FileReader fread = new FileReader(fileInput.getAbsolutePath());
            Object obj = parser.parse(fread);
            JSONArray subjects = (JSONArray) obj;
            Iterator iterator = subjects.iterator();
            while (iterator.hasNext()) {
                cdr = new CDR();
                JSONObject jsonObject = (JSONObject) iterator.next();

                Date dateEvent = null;
                Date dateParam1 = null;
                Date dateParam2 = null;
                Date dateParam3 = null;
                Date dateParam4 = null;
                Date dateParam5 = null;
                boolean reject = false;
                try {
                    dateEvent = StringUtils.isEmpty((String) jsonObject.get(context.get("eventDate"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("eventDate")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("eventDate") + " \n");
                    reject = true;
                }

                String ac = (String) jsonObject.get(context.get("accessCode"));
                BigDecimal quantity = new BigDecimal(String.valueOf(jsonObject.get(context.get("quantity"))));
                String parameter1 = (String) jsonObject.get(context.get("parameter1"));
                String parameter2 = (String) jsonObject.get(context.get("parameter2"));
                String parameter3 = (String) jsonObject.get(context.get("parameter3"));
                String parameter4 = (String) jsonObject.get(context.get("parameter4"));
                String parameter5 = (String) jsonObject.get(context.get("parameter5"));
                String parameter6 = (String) jsonObject.get(context.get("parameter6"));
                String parameter7 = (String) jsonObject.get(context.get("parameter7"));
                String parameter8 = (String) jsonObject.get(context.get("parameter8"));
                String parameter9 = (String) jsonObject.get(context.get("parameter9"));

                try {
                    dateParam1 = StringUtils.isEmpty((String) jsonObject.get(context.get("dateParam1"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("dateParam1")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("dateParam1") + " \n");
                    reject = true;
                }
                try {
                    dateParam2 = StringUtils.isEmpty((String) jsonObject.get(context.get("dateParam2"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("dateParam2")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("dateParam2") + " \n");
                    reject = true;
                }
                try {
                    dateParam3 = StringUtils.isEmpty((String) jsonObject.get(context.get("dateParam3"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("dateParam3")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("dateParam3") + " \n");
                    reject = true;
                }
                try {
                    dateParam4 = StringUtils.isEmpty((String) jsonObject.get(context.get("dateParam4"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("dateParam4")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("dateParam4") + " \n");
                    reject = true;
                }
                try {
                    dateParam5 = StringUtils.isEmpty((String) jsonObject.get(context.get("dateParam5"))) ? null : dateFormat.parse((String) jsonObject.get(context.get("dateParam5")));
                } catch (ParseException e) {
                    if (!reject)
                        rejectFile.write(jsonObject + " => Incorrect format date for cdr " + context.get("dateParam5") + " \n");
                    reject = true;
                }
                BigDecimal decimalParam1 = StringUtils.isEmpty((String) jsonObject.get(context.get("decimalParam1"))) ? null : new BigDecimal(String.valueOf(jsonObject.get(context.get("decimalParam1"))));
                BigDecimal decimalParam2 = StringUtils.isEmpty((String) jsonObject.get(context.get("decimalParam2"))) ? null : new BigDecimal(String.valueOf(jsonObject.get(context.get("decimalParam2"))));
                BigDecimal decimalParam3 = StringUtils.isEmpty((String) jsonObject.get(context.get("decimalParam3"))) ? null : new BigDecimal(String.valueOf(jsonObject.get(context.get("decimalParam3"))));
                BigDecimal decimalParam4 = StringUtils.isEmpty((String) jsonObject.get(context.get("decimalParam4"))) ? null : new BigDecimal(String.valueOf(jsonObject.get(context.get("decimalParam4"))));
                BigDecimal decimalParam5 = StringUtils.isEmpty((String) jsonObject.get(context.get("decimalParam5"))) ? null : new BigDecimal(String.valueOf(jsonObject.get(context.get("decimalParam5"))));

                String extraParam = String.valueOf(jsonObject);
                cdr.setEventDate(dateEvent);
                cdr.setAccessCode(ac);
                cdr.setQuantity(quantity);
                cdr.setParameter1(parameter1);
                cdr.setParameter2(parameter2);
                cdr.setParameter3(parameter3);
                cdr.setParameter4(parameter4);
                cdr.setParameter5(parameter5);
                cdr.setParameter6(parameter6);
                cdr.setParameter7(parameter7);
                cdr.setParameter8(parameter8);
                cdr.setParameter9(parameter9);
                cdr.setDateParam1(dateParam1);
                cdr.setDateParam2(dateParam2);
                cdr.setDateParam3(dateParam3);
                cdr.setDateParam4(dateParam4);
                cdr.setDateParam5(dateParam5);
                cdr.setDecimalParam1(decimalParam1);
                cdr.setDecimalParam2(decimalParam2);
                cdr.setDecimalParam3(decimalParam3);
                cdr.setDecimalParam4(decimalParam4);
                cdr.setDecimalParam5(decimalParam5);
                cdr.setExtraParameter(extraParam);
                if (!reject && cdr.getEventDate() != null && cdr.getQuantity() != null && cdr.getAccessCode() != null && cdr.getParameter1() != null)
                    cdrService.create(cdr);
                else if (!reject) {
                    validateCdr(jsonObject, cdr, context, rejectFile);
                }
            }
                rejectFile.close();
                fread.close();
                fileInput.delete();
            }
        }catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void validateCdr(JSONObject line, CDR cdr, Map<String, String> context, FileWriter file) throws IOException {
        if (cdr.getEventDate() == null) file.write(line + " => " + context.get("eventDate") + " is required\n");
        else if (cdr.getQuantity() == null) file.write(line + " => " + context.get("quantity") + " is required\n");
        else if (cdr.getAccessCode() == null) file.write(line + " => " + context.get("accessCode") + " is required\n");
        else if (cdr.getParameter1() == null) file.write(line + " => " + context.get("parameter1") + " is required\n");

    }

    public String getProviderRootDir() {
        return paramBeanFactory.getDefaultChrootDir();
    }
}
				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CdrCsvImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.model.rating.CDR;
import org.meveo.service.medina.impl.CDRService;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

public class CdrMassImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mm:ssXXX";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "CDR";
    private static final String ENTITY_NAME = "Cdr";
    private final CDRService cdrService = (CDRService) getServiceInterface(CDRService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked") Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                CdrActionEnum action = CdrActionEnum.CREATE;

                CDR cdrDto = validateAndGetCdr(action, recordMap);


                if (CdrActionEnum.CREATE.equals(action)) {
                    setCdrValues(recordMap, cdrDto);
                    cdrService.create(cdrDto);

                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private CDR validateAndGetCdr(CdrActionEnum action, Map<String, Object> recordMap) {
        CDR cdr = null;

        String ocDate = (String) recordMap.get("OC_CDR_DATE");
        if (ocDate.isEmpty()) {
            throw new ValidationException("OC_CDR_DATE is required");
        }
        String ocQantity = (String) recordMap.get("OC_QANTITY");
        if (ocQantity.isEmpty()) {
            throw new ValidationException("OC_QANTITY is required");
        }
        String ocAp = (String) recordMap.get("OC_AC");
        if (ocAp.isEmpty()) {
            throw new ValidationException("OC_AC is required");
        }
        String ocParametre1 = (String) recordMap.get("OC_PARAMETER_1");
        if (ocParametre1.isEmpty()) {
            throw new ValidationException("OC_PARAMETER_1 is required");
        }

        cdr = new CDR();

        return cdr;
    }

    private void setCdrValues(Map<String, Object> recordMap, CDR cdr) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);

        String OC_cdr_date = (String) recordMap.get("OC_CDR_DATE");
        String OC_quantity = (String) recordMap.get("OC_QANTITY");
        String OC_ac = (String) recordMap.get("OC_AC");
        Date cdrDate;
        try {
            cdrDate = StringUtils.isEmpty(OC_cdr_date) ? null : dateFormat.parse(OC_cdr_date);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_CDR_DATE");
        }
        BigDecimal cdrQuantity = OC_quantity.isEmpty() ? null : new BigDecimal(OC_quantity);


        String OC_date_param_1 = (String) recordMap.get("OC_DATE_PARAM_1");
        String OC_date_param_2 = (String) recordMap.get("OC_DATE_PARAM_2");
        String OC_date_param_3 = (String) recordMap.get("OC_DATE_PARAM_3");
        String OC_date_param_4 = (String) recordMap.get("OC_DATE_PARAM_4");
        String OC_date_param_5 = (String) recordMap.get("OC_DATE_PARAM_5");
        Date cdrDateParam1;
        Date cdrDateParam2;
        Date cdrDateParam3;
        Date cdrDateParam4;
        Date cdrDateParam5;
        try {
            cdrDateParam1 = StringUtils.isEmpty(OC_date_param_1) ? null : dateFormat.parse(OC_date_param_1);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_DATE_PARAM_1");
        }
        try {
            cdrDateParam2 = StringUtils.isEmpty(OC_date_param_2) ? null : dateFormat.parse(OC_date_param_2);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_DATE_PARAM_2");
        }
        try {
            cdrDateParam3 = StringUtils.isEmpty(OC_date_param_3) ? null : dateFormat.parse(OC_date_param_3);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_DATE_PARAM_3");
        }
        try {
            cdrDateParam4 = StringUtils.isEmpty(OC_date_param_4) ? null : dateFormat.parse(OC_date_param_4);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_DATE_PARAM_4");
        }
        try {
            cdrDateParam5 = StringUtils.isEmpty(OC_date_param_5) ? null : dateFormat.parse(OC_date_param_5);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect format date for cdr OC_DATE_PARAM_5");
        }

        String OC_decimal_param_1 = (String) recordMap.get("OC_DECIMAL_PARAM_1");
        String OC_decimal_param_2 = (String) recordMap.get("OC_DECIMAL_PARAM_2");
        String OC_decimal_param_3 = (String) recordMap.get("OC_DECIMAL_PARAM_3");
        String OC_decimal_param_4 = (String) recordMap.get("OC_DECIMAL_PARAM_4");
        String OC_decimal_param_5 = (String) recordMap.get("OC_DECIMAL_PARAM_5");

        BigDecimal cdrDecimalParam1 = OC_decimal_param_1.isEmpty() ? null : new BigDecimal(OC_decimal_param_1);
        BigDecimal cdrDecimalParam2 = OC_decimal_param_2.isEmpty() ? null : new BigDecimal(OC_decimal_param_2);
        BigDecimal cdrDecimalParam3 = OC_decimal_param_3.isEmpty() ? null : new BigDecimal(OC_decimal_param_3);
        BigDecimal cdrDecimalParam4 = OC_decimal_param_4.isEmpty() ? null : new BigDecimal(OC_decimal_param_4);
        BigDecimal cdrDecimalParam5 = OC_decimal_param_5.isEmpty() ? null : new BigDecimal(OC_decimal_param_5);

        cdr.setEventDate(cdrDate);
        cdr.setQuantity(cdrQuantity);
        cdr.setAccessCode(OC_ac);

        cdr.setParameter1((String) recordMap.get("OC_PARAMETER_1"));
        cdr.setParameter2((String) recordMap.get("OC_PARAMETER_2"));
        cdr.setParameter3((String) recordMap.get("OC_PARAMETER_3"));
        cdr.setParameter4((String) recordMap.get("OC_PARAMETER_4"));
        cdr.setParameter5((String) recordMap.get("OC_PARAMETER_5"));
        cdr.setParameter6((String) recordMap.get("OC_PARAMETER_6"));
        cdr.setParameter7((String) recordMap.get("OC_PARAMETER_7"));
        cdr.setParameter8((String) recordMap.get("OC_PARAMETER_8"));
        cdr.setParameter9((String) recordMap.get("OC_PARAMETER_9"));

        cdr.setDateParam1(cdrDateParam1);
        cdr.setDateParam2(cdrDateParam2);
        cdr.setDateParam3(cdrDateParam3);
        cdr.setDateParam4(cdrDateParam4);
        cdr.setDateParam5(cdrDateParam5);

        cdr.setDecimalParam1(cdrDecimalParam1);
        cdr.setDecimalParam2(cdrDecimalParam2);
        cdr.setDecimalParam3(cdrDecimalParam3);
        cdr.setDecimalParam4(cdrDecimalParam4);
        cdr.setDecimalParam5(cdrDecimalParam5);

        cdr.setExtraParameter((String) recordMap.get("OC_EXTRA_PARAM"));

    }

    public enum CdrActionEnum {CREATE, UPDATE, SUSPEND, RESUME, ACTIVATE, TERMINATE}
}


				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
	</changeSet>
	<changeSet id="#OUTRD-3_20221006-jobs" author="MohamedChaouki">
		<!-- JOBS -->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="CsvImportCDR" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/cdr/csv/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/cdr/csv/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/cdr/csv/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/cdr/csv/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\" />\r\n            <property name=\"comments\" value=\"END\" />\r\n            <property name=\"multilineEnabled\" value=\"true\" />\r\n        </parser>\r\n  <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n  <field name=\"OC_CDR_DATE\" ignore=\"true\"/>\r\n  <field name=\"OC_QANTITY\" ignore=\"true\"/>\r\n  <field name=\"OC_AC\" ignore=\"true\"/>\r\n  <field name=\"OC_PARAMETER_1\" ignore=\"true\"/>\r\n <field name=\"OC_PARAMETER_2\" ignore=\"true\"/>\r\n  <field name=\"OC_PARAMETER_3\" ignore=\"true\"/>\r\n <field name=\"OC_PARAMETER_4\" ignore=\"true\"/>\r\n   <field name=\"OC_PARAMETER_5\" ignore=\"true\"/>\r\n  <field name=\"OC_PARAMETER_6\" ignore=\"true\"/>\r\n  <field name=\"OC_PARAMETER_7\" ignore=\"true\"/>\r\n  <field name=\"OC_PARAMETER_8\" ignore=\"true\"/>\r\n   <field name=\"OC_PARAMETER_9\" ignore=\"true\"/>\r\n  <field name=\"OC_DATE_PARAM_1\" ignore=\"true\"/>\r\n   <field name=\"OC_DATE_PARAM_2\" ignore=\"true\"/>\r\n  <field name=\"OC_DATE_PARAM_3\" ignore=\"true\"/>\r\n   <field name=\"OC_DATE_PARAM_4\" ignore=\"true\"/>\r\n  <field name=\"OC_DATE_PARAM_5\" ignore=\"true\"/>\r\n  <field name=\"OC_DECIMAL_PARAM_1\" ignore=\"true\"/>\r\n  <field name=\"OC_DECIMAL_PARAM_2\" ignore=\"true\"/>\r\n   <field name=\"OC_DECIMAL_PARAM_3\" ignore=\"true\"/>\r\n   <field name=\"OC_DECIMAL_PARAM_4\" ignore=\"true\"/>\r\n   <field name=\"OC_DECIMAL_PARAM_5\" ignore=\"true\"/>\r\n  <field name=\"OC_EXTRA_PARAM\" ignore=\"true\"/>\r\n  </record>\r\n  <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n  <field name=\"OC_CDR_DATE\" required=\"true\"/>\r\n  <field name=\"OC_QANTITY\" required=\"true\"/>\r\n  <field name=\"OC_AC\" required=\"true\"/>\r\n   <field name=\"OC_PARAMETER_1\"/>\r\n  <field name=\"OC_PARAMETER_2\"/>\r\n  <field name=\"OC_PARAMETER_3\" />\r\n   <field name=\"OC_PARAMETER_4\" />\r\n  <field name=\"OC_PARAMETER_5\" />\r\n  <field name=\"OC_PARAMETER_6\" />\r\n  <field name=\"OC_PARAMETER_7\" />\r\n <field name=\"OC_PARAMETER_8\" />\r\n <field name=\"OC_PARAMETER_9\" />\r\n  <field name=\"OC_DATE_PARAM_1\"/>\r\n  <field name=\"OC_DATE_PARAM_2\"/>\r\n <field name=\"OC_DATE_PARAM_3\" />\r\n  <field name=\"OC_DATE_PARAM_4\" />\r\n  <field name=\"OC_DATE_PARAM_5\" />\r\n   <field name=\"OC_DECIMAL_PARAM_1\"/>\r\n  <field name=\"OC_DECIMAL_PARAM_2\"/>\r\n <field name=\"OC_DECIMAL_PARAM_3\" />\r\n <field name=\"OC_DECIMAL_PARAM_4\" />\r\n  <field name=\"OC_DECIMAL_PARAM_5\" />\r\n  <field name=\"OC_EXTRA_PARAM\" />\r\n  </record>\r\n  </stream>\r\n  </beanio>\r\n"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.CdrCsvImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="now()" />
			<column name="updated" valueDate="null" />
			<column name="uuid" value="FlatFileImportCDR" />
			<column name="code" value="FlatFileImportCDR" />
			<column name="description" value="FlatFileImportCDR" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="ScriptingJob" />
			<column name="parametres" valueNumeric="null" />
			<column name="creator" value="opencell.admin" />
			<column name="updater" value="null" />
			<column name="timerentity_id" value="null" />
			<column name="cf_values">
				<![CDATA[
            		{"ScriptingJob_script":[{"entity":{"classname":"org.meveo.model.scripts.ScriptInstance","code":"org.meveo.service.script.CdrFlatFileImportScript","id":-30}}],"ScriptingJob_TransactionType":[{"string":"REQUIRES_NEW"}]}
            	]]>
			</column>
		</insert>
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="now()" />
			<column name="updated" valueDate="null" />
			<column name="uuid" value="JsonImportCDR" />
			<column name="code" value="JsonImportCDR" />
			<column name="description" value="JsonImportCDR" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="ScriptingJob" />
			<column name="parametres" valueNumeric="null" />
			<column name="creator" value="opencell.admin" />
			<column name="updater" value="null" />
			<column name="timerentity_id" value="null" />
			<column name="cf_values">
				<![CDATA[
            		{"ScriptingJob_script":[{"entity":{"classname":"org.meveo.model.scripts.ScriptInstance","code":"org.meveo.service.script.CdrJsonImportScript","id":-30}}],"ScriptingJob_TransactionType":[{"string":"REQUIRES_NEW"}]}
            	]]>
			</column>
		</insert>

	</changeSet>
	<changeSet id="#OUTRD-3_20221006-custom-field" author="MohamedChaouki">
		<insert tableName="crm_custom_field_tmpl">
			<column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="pathFile"/>
			<column name="applies_to" value="JobInstance_ScriptingJob"/>
			<column name="description" value="pathFile"/>
			<column name="field_type" value="STRING"/>
			<column name="value_required" value="0"/>
			<column name="creator" value="applicationInitializer"/>
			<column name="versionable" value="0"/>
			<column name="storage_type" value="SINGLE"/>
			<column name="gui_position" value=""/>
			<column name="allow_edit" value="1"/>
			<column name="hide_on_new" value="0"/>
			<column name="inh_as_def_value" value="0"/>
			<column name="max_value" valueNumeric="256"/>
			<column name="cf_protectable" value="0"/>
		</insert>
		<insert tableName="crm_custom_field_tmpl">
			<column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="mapping"/>
			<column name="applies_to" value="JobInstance_ScriptingJob"/>
			<column name="description" value="mapping"/>
			<column name="field_type" value="STRING"/>
			<column name="value_required" value="0"/>
			<column name="creator" value="applicationInitializer"/>
			<column name="versionable" value="0"/>
			<column name="storage_type" value="MAP"/>
			<column name="gui_position" value=""/>
			<column name="allow_edit" value="1"/>
			<column name="hide_on_new" value="0"/>
			<column name="inh_as_def_value" value="0"/>
			<column name="mapkey_type" value="STRING"/>
			<column name="max_value" valueNumeric="256"/>
			<column name="cf_protectable" value="0"/>
		</insert>

	</changeSet>


<changeSet id="#OUTRD-49_20220913-scripts" author="HamzaBiadi">
		<!-- SCRIPTS -->
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CustomerImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.CustomerApi;
import org.meveo.api.dto.account.CustomerDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.model.crm.Customer;
import org.meveo.model.crm.CustomerCategory;
import org.meveo.service.crm.impl.CustomerCategoryService;
import org.meveo.service.crm.impl.CustomerService;
import org.meveo.service.script.GenericMassImportScript;

import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class CustomerImportScript extends GenericMassImportScript {

    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "CUSTOMER";
    private static final String ENTITY_NAME = "Customer";

    public enum CustomerActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final CustomerCategoryService customerCategoryService = (CustomerCategoryService) getServiceInterface(
            "CustomerCategoryService");
    private final CustomerService customerService = (CustomerService) getServiceInterface("CustomerService");
    private final CustomerApi customerApi = (CustomerApi) getServiceInterface(CustomerApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(CustomerActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                CustomerActionEnum action = CustomerActionEnum.valueOf(ocAction);

                CustomerDto customerDto = validateAndGetCustomer(action, recordMap);

                if (CustomerActionEnum.DELETE.equals(action)) {
                    customerApi.remove(customerDto.getCode());
                } else {
                    setCustomerValues(recordMap, customerDto);
                    if (CustomerActionEnum.CREATE.equals(action)) {
                        Customer customer = customerApi.create(customerDto);

                        this.setCFValues(recordMap, customer, ENTITY_NAME);
                    } else if (CustomerActionEnum.UPDATE.equals(action)) {
                        customerApi.update(customerDto);
                    }

                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private CustomerDto validateAndGetCustomer(CustomerActionEnum action, Map<String, Object> recordMap) {
        CustomerDto customerDto;

        String customerCode = (String) recordMap.get("OC_CUSTOMER_CODE");
        if (customerCode.isEmpty()) {
            throw new ValidationException("customer_code is required");
        }
        Customer customer = customerService.findByCode(customerCode);

        // For update and delete : check if there is a record
        if (!CustomerActionEnum.CREATE.equals(action)) {
            if (customer == null) {
                throw new ValidationException("no customer found for customer_code: '" + customerCode + "'");
            }
            customerDto = customerApi.find(customerCode);
            // Create action : check if there is no record
        } else {
            customerDto = new CustomerDto();
            String ocCustomerCategory = (String) recordMap.get("OC_CU_CATEGORY");
            CustomerCategory customerCategory = customerCategoryService.findByCode(ocCustomerCategory);
            if (customerCategory == null) {
                throw new ValidationException("no customer category found for code: '" + ocCustomerCategory + "'");
            }
        }
        return customerDto;
    }

    private void setCustomerValues(Map<String, Object> recordMap, CustomerDto customerDto) {
        customerDto.setCode((String) recordMap.get("OC_CUSTOMER_CODE"));
        customerDto.setDescription((String) recordMap.get("OC_CUSTOMER_DESCRIPTION"));
        customerDto.setRegistrationNo((String) recordMap.get("OC_CU_REGISTRATION"));
        customerDto.setVatNo((String) recordMap.get("OC_CU_TVANUMBER"));
        customerDto.setSeller((String) recordMap.get("OC_CUSTOMER_SELLER"));
        customerDto.setCustomerCategory((String) recordMap.get("OC_CU_CATEGORY"));
        customerDto.setIsCompany(Objects.equals(recordMap.get("OC_CU_IS_COMPANY"), "X"));
        NameDto nameDto = new NameDto();
        nameDto.setTitle((String) recordMap.get("OC_CU_TITLE"));
        nameDto.setFirstName((String) recordMap.get("OC_CU_FIRST_NAME"));
        nameDto.setLastName((String) recordMap.get("OC_CU_LAST_NAME"));
        customerDto.setName(nameDto);
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CustomerAccountImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.CustomerAccountApi;
import org.meveo.api.dto.account.CustomerAccountDto;
import org.meveo.model.crm.Customer;
import org.meveo.model.payments.CustomerAccount;
import org.meveo.service.crm.impl.CustomerService;
import org.meveo.service.script.GenericMassImportScript;

import java.util.Map;
import java.util.stream.Stream;


public class CustomerAccountImportScript extends GenericMassImportScript {

    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "CUSTOMER_ACCOUNT";
    private static final String ENTITY_NAME = "CustomerAccount";

    public enum CustomerAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final CustomerService customerService = (CustomerService) getServiceInterface("CustomerService");
    private final CustomerAccountApi customerAccountApi = (CustomerAccountApi) getServiceInterface(CustomerAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(CustomerAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                CustomerAccountActionEnum action = CustomerAccountActionEnum.valueOf(ocAction);

                CustomerAccountDto customerAccountDto = validateAndGetCustomerAccount(action, recordMap);

                if (CustomerAccountActionEnum.DELETE.equals(action)) {
                    customerAccountApi.remove(customerAccountDto.getCode());
                } else {
                    setCustomerAccountValues(recordMap, customerAccountDto);
                    if (CustomerAccountActionEnum.CREATE.equals(action)) {
                        CustomerAccount customerAccount = customerAccountApi.create(customerAccountDto);

                        this.setCFValues(recordMap, customerAccount, ENTITY_NAME);
                    } else if (CustomerAccountActionEnum.UPDATE.equals(action)) {
                        customerAccountApi.update(customerAccountDto);
                    }

                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private CustomerAccountDto validateAndGetCustomerAccount(CustomerAccountActionEnum action, Map<String, Object> recordMap) throws Exception {
        CustomerAccountDto customerAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String customerCode = (String) recordMap.get("OC_CUSTOMER_CODE");
        if (customerCode.isEmpty()) {
            throw new ValidationException("customer_code is required");
        }
        Customer customer = customerService.findByCode(customerCode);

        // For update and delete : check if there is a record
        if (!CustomerAccountActionEnum.CREATE.equals(action)) {
            if (customer == null) {
                throw new ValidationException("no customer found for customer_code: '" + customerCode + "'");
            }
            customerAccountDto = customerAccountApi.find(customerAccountCode, false);
            // Create action : check if there is no record
        } else {
            customerAccountDto = new CustomerAccountDto();
        }
        return customerAccountDto;
    }

    private void setCustomerAccountValues(Map<String, Object> recordMap, CustomerAccountDto customerAccountDto) {
        customerAccountDto.setCustomer((String) recordMap.get("OC_CUSTOMER_CODE"));
        customerAccountDto.setCode((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        customerAccountDto.setCurrency((String) recordMap.get("OC_CUSTOMERACCOUNT_CURRENCY"));
        customerAccountDto.setDueDateDelayEL((String) recordMap.get("OC_CUSTOMERACCOUNT_PAYTERM"));
        customerAccountDto.setCreditCategory((String) recordMap.get("OC_CUSTOMERACCOUNT_CREDCAT"));
        customerAccountDto.setLanguage((String) recordMap.get("OC_CUSTOMERACCOUNT_LANG"));
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.PaymentMethodImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.dto.account.BankCoordinatesDto;
import org.meveo.api.dto.payment.PaymentMethodDto;
import org.meveo.api.payment.PaymentMethodApi;
import org.meveo.model.payments.CreditCardTypeEnum;
import org.meveo.model.payments.PaymentMethod;
import org.meveo.model.payments.PaymentMethodEnum;
import org.meveo.service.payments.impl.PaymentMethodService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class PaymentMethodImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "PAYMENT_METHOD";
    private static final String ENTITY_NAME = "PaymentMethod";

    public enum PaymentMethodActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface("PaymentMethodService");
    private final PaymentMethodApi paymentMethodApi = (PaymentMethodApi) getServiceInterface(PaymentMethodApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(PaymentMethodActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                PaymentMethodActionEnum action = PaymentMethodActionEnum.valueOf(ocAction);

                PaymentMethodDto paymentMethodDto = validateAndGetPaymentMethod(recordMap);


                if (action == PaymentMethodActionEnum.CREATE &&
                        PaymentMethodEnum.valueOf((String) recordMap.get("OC_PMT_TYPE")) != PaymentMethodEnum.CARD) {
                    setPaymentMethodValues(recordMap, paymentMethodDto);
                    Long paymentMethodId = paymentMethodApi.create(paymentMethodDto);
                    PaymentMethod paymentMethod = paymentMethodService.findById(paymentMethodId);
                    this.setCFValues(recordMap, paymentMethod, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private PaymentMethodDto validateAndGetPaymentMethod(Map<String, Object> recordMap) {
        PaymentMethodDto paymentMethodDto = new PaymentMethodDto();

        String customerAccountCode = (String) recordMap.get("OC_PMT_CA");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        return paymentMethodDto;
    }

    private void setPaymentMethodValues(Map<String, Object> recordMap, PaymentMethodDto paymentMethodDto) throws ParseException {
        PaymentMethodEnum ocPaymentMethodType = PaymentMethodEnum.valueOf((String) recordMap.get("OC_PMT_TYPE"));
        paymentMethodDto.setPaymentMethodType(ocPaymentMethodType);
        paymentMethodDto.setPreferred(Objects.equals(recordMap.get("OC_PMT_PREFERRED"), "X"));
        paymentMethodDto.setAlias((String) recordMap.get("OC_PMT_ALIAS"));
        paymentMethodDto.setCustomerAccountCode((String) recordMap.get("OC_PMT_CA"));
        if (!((String) recordMap.get("OC_PMT_cardType")).isEmpty()) {
            paymentMethodDto.setCardType(CreditCardTypeEnum.valueOf((String) recordMap.get("OC_PMT_cardType")));
        }
        if (!((String) recordMap.get("OC_PMT_monthExpiration")).isEmpty()) {
            paymentMethodDto.setMonthExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_monthExpiration")));
        }
        if (!((String) recordMap.get("OC_PMT_yearExpiration")).isEmpty()) {
            paymentMethodDto.setYearExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_yearExpiration")));
        }
        paymentMethodDto.setTokenId((String) recordMap.get("OC_PMT_tokenId"));
        paymentMethodDto.setCardNumber((String) recordMap.get("OC_PMT_cardNumber"));
        paymentMethodDto.setIssueNumber((String) recordMap.get("OC_PMT_issueNumber"));
        paymentMethodDto.setUserId((String) recordMap.get("OC_PMT_userId"));
        paymentMethodDto.setEmail((String) recordMap.get("OC_PMT_email"));
        if (!((String) recordMap.get("OC_PMT_referenceDocumentCode")).isEmpty()) {
            paymentMethodDto.setReferenceDocumentCode((String) recordMap.get("OC_PMT_referenceDocumentCode"));
        }

        if (ocPaymentMethodType == PaymentMethodEnum.DIRECTDEBIT) {
            BankCoordinatesDto bankCoordinatesDto = new BankCoordinatesDto();
            bankCoordinatesDto.setBankCode((String) recordMap.get("OC_PMT_bankCode"));
            bankCoordinatesDto.setBranchCode((String) recordMap.get("OC_PMT_branchCode"));
            bankCoordinatesDto.setAccountNumber((String) recordMap.get("OC_PMT_accountNumber"));
            bankCoordinatesDto.setKey((String) recordMap.get("OC_PMT_key"));
            bankCoordinatesDto.setIban((String) recordMap.get("OC_PMT_iban"));
            bankCoordinatesDto.setBic((String) recordMap.get("OC_PMT_bic"));
            bankCoordinatesDto.setAccountOwner((String) recordMap.get("OC_PMT_accountOwner"));
            bankCoordinatesDto.setBankName((String) recordMap.get("OC_PMT_bankName"));
            bankCoordinatesDto.setBankId((String) recordMap.get("OC_PMT_bankId"));
            bankCoordinatesDto.setIssuerNumber((String) recordMap.get("OC_PMT_issuerNumber"));
            bankCoordinatesDto.setIssuerName((String) recordMap.get("OC_PMT_issuerName"));
            bankCoordinatesDto.setIcs((String) recordMap.get("OC_PMT_ics"));
            paymentMethodDto.setBankCoordinates(bankCoordinatesDto);
        }

        paymentMethodDto.setMandateIdentification((String) recordMap.get("OC_PMT_mandateIdentification"));

        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String ocPaymentMethodMandateDate = (String) recordMap.get("OC_PMT_mandateDate");
        Date mandateDate = StringUtils.isEmpty(ocPaymentMethodMandateDate) ? null : dateFormat.parse(ocPaymentMethodMandateDate);
        paymentMethodDto.setMandateDate(mandateDate);
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.BillingAccountImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.BillingAccountApi;
import org.meveo.api.dto.account.AddressDto;
import org.meveo.api.dto.account.BillingAccountDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.model.billing.BillingAccount;
import org.meveo.service.script.GenericMassImportScript;

import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class BillingAccountImportScript extends GenericMassImportScript {

    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "BILLING_ACCOUNT";
    private static final String ENTITY_NAME = "BillingAccount";

    public enum BillingAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final BillingAccountApi billingAccountApi = (BillingAccountApi) getServiceInterface(BillingAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(BillingAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                BillingAccountActionEnum action = BillingAccountActionEnum.valueOf(ocAction);

                BillingAccountDto billingAccountDto = validateAndGetBillingAccount(recordMap);

                if (BillingAccountActionEnum.CREATE.equals(action)) {
                    setBillingAccountValues(recordMap, billingAccountDto);
                    BillingAccount billingAccount = billingAccountApi.create(billingAccountDto);
                    this.setCFValues(recordMap, billingAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private BillingAccountDto validateAndGetBillingAccount(Map<String, Object> recordMap) {
        BillingAccountDto billingAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        billingAccountDto = new BillingAccountDto();

        return billingAccountDto;
    }

    private void setBillingAccountValues(Map<String, Object> recordMap, BillingAccountDto billingAccountDto) {
        billingAccountDto.setCustomerAccount((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        billingAccountDto.setCode((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        billingAccountDto.setDescription((String) recordMap.get("OC_BILLINGACCOUNT_DESCRIPTION"));
        billingAccountDto.setBillingCycle((String) recordMap.get("OC_BILLINGACCOUNT_BC"));
        billingAccountDto.setCountry((String) recordMap.get("OC_BILLINGACCOUNT_COUNTRY"));
        billingAccountDto.setLanguage((String) recordMap.get("OC_BILLINGACCOUNT_LANGUAGE"));
        billingAccountDto.setTradingCurrency((String) recordMap.get("OC_BILLINGACCOUNT_CURRENCY"));
        billingAccountDto.setTaxCategoryCode((String) recordMap.get("OC_BILLINGACCOUNT_TAXCAT"));
        billingAccountDto.setRegistrationNo((String) recordMap.get("OC_BA_REGISTRATION"));
        billingAccountDto.setVatNo((String) recordMap.get("OC_BA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_BA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_BA_FNAME"));
        name.setLastName((String) recordMap.get("OC_BA_LNAME"));
        billingAccountDto.setName(name);

        billingAccountDto.setIsCompany(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X"));
        billingAccountDto.setElectronicBilling(Objects.equals(recordMap.get("OC_BA_EBILL"), "X"));
        billingAccountDto.setEmail((String) recordMap.get("OC_BA_EBILLEMAIL"));
        billingAccountDto.setCcedEmails((String) recordMap.get("OC_BA_EBILLEMAILS"));

        AddressDto addressDto = new AddressDto();
        addressDto.setAddress1((String) recordMap.get("OC_BA_ADDRESS"));
        addressDto.setZipCode((String) recordMap.get("OC_BA_ZIPCODE"));
        addressDto.setCity((String) recordMap.get("OC_BA_CITY"));
        addressDto.setState((String) recordMap.get("OC_BA_STATE"));
        addressDto.setCountry((String) recordMap.get("OC_BA_COUNTRY"));
        billingAccountDto.setAddress(addressDto);
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.UserAccountImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.UserAccountApi;
import org.meveo.api.dto.account.NameDto;
import org.meveo.api.dto.account.UserAccountDto;
import org.meveo.model.billing.UserAccount;

import java.text.ParseException;
import java.util.Map;
import java.util.stream.Stream;


public class UserAccountImportScript extends GenericMassImportScript {

    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "USER_ACCOUNT";
    private static final String ENTITY_NAME = "UserAccount";

    public enum UserAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final UserAccountApi userAccountApi = (UserAccountApi) getServiceInterface(UserAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(UserAccountActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                UserAccountActionEnum action = UserAccountActionEnum.valueOf(OC_ACTION);

                UserAccountDto userAccountDto = validateAndGetCustomer(action, recordMap);

                if (UserAccountActionEnum.CREATE.equals(action)) {
                    setAccessValues(recordMap, userAccountDto);
                    UserAccount userAccount = userAccountApi.create(userAccountDto);
                    this.setCFValues(recordMap, userAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private UserAccountDto validateAndGetCustomer(UserAccountActionEnum action, Map<String, Object> recordMap) throws Exception {
        UserAccountDto userAccountDto = null;

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        String userAccountCode = (String) recordMap.get("OC_USERACCOUNT_CODE");
        if (userAccountCode.isEmpty()) {
            throw new ValidationException("user_account_code is required");
        }

        userAccountDto = new UserAccountDto();

        return userAccountDto;
    }

    private void setAccessValues(Map<String, Object> recordMap, UserAccountDto userAccountDto) throws ParseException {
        userAccountDto.setBillingAccount((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        userAccountDto.setCode((String) recordMap.get("OC_USERACCOUNT_CODE"));
      	String ocParentUACode = (String) recordMap.get("OC_PARENT_UA_CODE");
        if(!ocParentUACode.isEmpty()) {
            userAccountDto.setParentUserAccountCode(ocParentUACode);
        }
        userAccountDto.setDescription((String) recordMap.get("OC_USERACCOUNT_ DESCRIPTION"));
        userAccountDto.setRegistrationNo((String) recordMap.get("OC_UA_REGISTRATION"));
        userAccountDto.setVatNo((String) recordMap.get("OC_UA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_UA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_UA_FNAME"));
        name.setLastName((String) recordMap.get("OC_UA_LNAME"));
        userAccountDto.setName(name);

        userAccountDto.setIsCompany((String) recordMap.get("OC_UA_ORGANIZATION") == "X");
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
		<!-- Job notification script -->
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.CustomerJobNotification" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class CustomerJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = "noreply@itnewvision.oc-sb.eu";

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String CUSTOMER_JOB_CODE = "massImportCustomerJob";
    private static final String CUSTOMER_ACCOUNT_JOB_CODE = "massImportCustomerAccountJob";
    private static final String PAYMENT_METHOD_JOB_CODE = "massImportPaymentMethodJob";
    private static final String BILLING_ACCOUNT_JOB_CODE = "massImportBillingAccountJob";
    private static final String USER_ACCOUNT_JOB_CODE = "massImportUserAccountJob";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;

            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case CUSTOMER_JOB_CODE:
                nextJobCode = CUSTOMER_ACCOUNT_JOB_CODE;
                break;
            case CUSTOMER_ACCOUNT_JOB_CODE:
                nextJobCode = PAYMENT_METHOD_JOB_CODE;
                break;
            case PAYMENT_METHOD_JOB_CODE:
                nextJobCode = BILLING_ACCOUNT_JOB_CODE;
                break;
            case BILLING_ACCOUNT_JOB_CODE:
                nextJobCode = USER_ACCOUNT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
	</changeSet>

	<changeSet id="#OUTRD-49_20220913" author="HamzaBiadi">
		<insert tableName="crm_custom_field_tmpl">
			<column name="id" valueSequenceNext="crm_custom_fld_tmp_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="user"/>
			<column name="description" value="User"/>
			<column name="field_type" value="STRING"/>
			<column name="value_required" value="0"/>
			<column name="creator" value="opencell.admin"/>
			<column name="versionable" value="0"/>
			<column name="storage_type" value="SINGLE"/>
			<column name="trigger_end_period_event" value="0"/>
			<column name="applies_to" value="JobInstance_FlatFileProcessingJob"/>
			<column name="allow_edit" value="1"/>
			<column name="max_value" value="50"/>
			<column name="hide_on_new" value="0"/>
			<column name="inh_as_def_value" value="0"/>
			<column name="gui_position" value="tab:Configuration:1;fieldGroup:Execution configuration:0;field:3"/>
			<column name="cf_protectable" value="0"/>
		</insert>
		<!-- CUSTOMER -->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="massImportCustomerJob" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/massImport/customer/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/massImport/customer/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/massImport/customer/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/massImport/customer/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\" />\r\n            <property name=\"comments\" value=\"END\" />\r\n            <property name=\"multilineEnabled\" value=\"true\" />\r\n        </parser>\r\n        <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n            <field name=\"OC_ACTION\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_CODE\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_DESCRIPTION\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_REGISTRATION\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_TVANUMBER\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_SELLER\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_CATEGORY\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_IS_COMPANY\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_TITLE\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_FIRST_NAME\" ignore=\"true\"/>\r\n            <field name=\"OC_CU_LAST_NAME\" ignore=\"true\"/>\r\n        </record>\r\n        <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" required=\"true\"/>\r\n            <field name=\"OC_ACTION\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_CODE\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_DESCRIPTION\"/>\r\n            <field name=\"OC_CU_REGISTRATION\"/>\r\n            <field name=\"OC_CU_TVANUMBER\" />\r\n            <field name=\"OC_CUSTOMER_SELLER\" />\r\n            <field name=\"OC_CU_CATEGORY\" />\r\n            <field name=\"OC_CU_IS_COMPANY\" />\r\n            <field name=\"OC_CU_TITLE\" />\r\n            <field name=\"OC_CU_FIRST_NAME\" />\r\n            <field name=\"OC_CU_LAST_NAME\" />\r\n            <field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n        </record>\r\n    </stream>\r\n</beanio>\r\n"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.CustomerImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>
		<!-- CUSTOMER_ACCOUNT -->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="massImportCustomerAccountJob" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/massImport/customerAccount/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/massImport/customerAccount/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/massImport/customerAccount/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/massImport/customerAccount/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\" />\r\n            <property name=\"comments\" value=\"END\" />\r\n            <property name=\"multilineEnabled\" value=\"true\" />\r\n        </parser>\r\n        <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n            <field name=\"OC_ACTION\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_CODE\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CODE\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CURRENCY\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_PAYTERM\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CREDCAT\" ignore=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_LANG\" ignore=\"true\"/>\r\n        </record>\r\n        <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" required=\"true\"/>\r\n            <field name=\"OC_ACTION\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMER_CODE\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CODE\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CURRENCY\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_PAYTERM\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CREDCAT\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_LANG\" required=\"true\"/>\r\n            <field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n        </record>\r\n    </stream>\r\n</beanio>"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.CustomerAccountImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>
		<!--	PAYMENT_METHOD	-->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="massImportPaymentMethodJob" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/massImport/paymentMethod/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/massImport/paymentMethod/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/massImport/paymentMethod/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/massImport/paymentMethod/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\"/>\r\n            <property name=\"comments\" value=\"END\"/>\r\n            <property name=\"multilineEnabled\" value=\"true\"/>\r\n        </parser>\r\n        <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n            <field name=\"OC_ACTION\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_TYPE\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_PREFERRED\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_ALIAS\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_CA\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_cardType\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_monthExpiration\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_yearExpiration\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_tokenId\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_cardNumber\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_issueNumber\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_userId\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_email\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_referenceDocumentCode\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_bankCode\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_branchCode\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_accountNumber\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_key\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_iban\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_bic\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_accountOwner\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_bankName\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_bankId\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_issuerNumber\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_issuerName\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_ics\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_mandateIdentification\" ignore=\"true\"/>\r\n            <field name=\"OC_PMT_mandateDate\" ignore=\"true\"/>\r\n        </record>\r\n        <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" required=\"true\"/>\r\n            <field name=\"OC_ACTION\" required=\"true\"/>\r\n            <field name=\"OC_PMT_TYPE\" required=\"true\"/>\r\n            <field name=\"OC_PMT_PREFERRED\"/>\r\n            <field name=\"OC_PMT_ALIAS\"/>\r\n            <field name=\"OC_PMT_CA\"/>\r\n            <field name=\"OC_PMT_cardType\"/>\r\n            <field name=\"OC_PMT_monthExpiration\"/>\r\n            <field name=\"OC_PMT_yearExpiration\"/>\r\n            <field name=\"OC_PMT_tokenId\"/>\r\n            <field name=\"OC_PMT_cardNumber\"/>\r\n            <field name=\"OC_PMT_issueNumber\"/>\r\n            <field name=\"OC_PMT_userId\"/>\r\n            <field name=\"OC_PMT_email\"/>\r\n            <field name=\"OC_PMT_referenceDocumentCode\"/>\r\n            <field name=\"OC_PMT_bankCode\" />\r\n            <field name=\"OC_PMT_branchCode\" />\r\n            <field name=\"OC_PMT_accountNumber\" />\r\n            <field name=\"OC_PMT_key\" />\r\n            <field name=\"OC_PMT_iban\" />\r\n            <field name=\"OC_PMT_bic\" />\r\n            <field name=\"OC_PMT_accountOwner\"/>\r\n            <field name=\"OC_PMT_bankName\"/>\r\n            <field name=\"OC_PMT_bankId\"/>\r\n            <field name=\"OC_PMT_issuerNumber\"/>\r\n            <field name=\"OC_PMT_issuerName\"/>\r\n            <field name=\"OC_PMT_ics\"/>\r\n            <field name=\"OC_PMT_mandateIdentification\"/>\r\n            <field name=\"OC_PMT_mandateDate\"/>\r\n            <field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n        </record>\r\n    </stream>\r\n</beanio>\r\n"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.PaymentMethodImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>
		<!-- BILLING_ACCOUNT -->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="massImportBillingAccountJob" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/massImport/billingAccount/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/massImport/billingAccount/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/massImport/billingAccount/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/massImport/billingAccount/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\"/>\r\n            <property name=\"comments\" value=\"END\"/>\r\n            <property name=\"multilineEnabled\" value=\"true\"/>\r\n        </parser>\r\n        <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" ignore=\"true\" />\r\n            <field name=\"OC_ACTION\" ignore=\"true\" />\r\n            <field name=\"OC_CUSTOMERACCOUNT_CODE\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_CODE\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_DESCRIPTION\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_BC\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_COUNTRY\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_LANGUAGE\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_CURRENCY\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_TAXCAT\" ignore=\"true\" />\r\n            <field name=\"OC_BA_DATE\" ignore=\"true\" />\r\n            <field name=\"OC_BA_REGISTRATION\" ignore=\"true\" />\r\n            <field name=\"OC_BA_TVANUMBER\" ignore=\"true\" />\r\n            <field name=\"OC_BA_TITLE\" ignore=\"true\" />\r\n            <field name=\"OC_BA_FNAME\" ignore=\"true\" />\r\n            <field name=\"OC_BA_LNAME\" ignore=\"true\" />\r\n            <field name=\"OC_BA_ORGANIZATION\" ignore=\"true\" />\r\n            <field name=\"OC_BA_EBILL\" ignore=\"true\" />\r\n            <field name=\"OC_BA_EBILLEMAIL\" ignore=\"true\" />\r\n            <field name=\"OC_BA_EBILLEMAILS\" ignore=\"true\" />\r\n            <field name=\"OC_BA_ADDRESS\" ignore=\"true\" />\r\n            <field name=\"OC_BA_ZIPCODE\" ignore=\"true\" />\r\n            <field name=\"OC_BA_CITY\" ignore=\"true\" />\r\n            <field name=\"OC_BA_STATE\" ignore=\"true\" />\r\n            <field name=\"OC_BA_COUNTRY\" ignore=\"true\" />\r\n        </record>\r\n        <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" required=\"true\"/>\r\n            <field name=\"OC_ACTION\" required=\"true\"/>\r\n            <field name=\"OC_CUSTOMERACCOUNT_CODE\" />\r\n            <field name=\"OC_BILLINGACCOUNT_CODE\" />\r\n            <field name=\"OC_BILLINGACCOUNT_DESCRIPTION\" />\r\n            <field name=\"OC_BILLINGACCOUNT_BC\" required=\"true\"/>\r\n            <field name=\"OC_BILLINGACCOUNT_COUNTRY\" required=\"true\"/>\r\n            <field name=\"OC_BILLINGACCOUNT_LANGUAGE\" required=\"true\"/>\r\n            <field name=\"OC_BILLINGACCOUNT_CURRENCY\" />\r\n            <field name=\"OC_BILLINGACCOUNT_TAXCAT\" />\r\n            <field name=\"OC_BA_DATE\" />\r\n            <field name=\"OC_BA_REGISTRATION\" />\r\n            <field name=\"OC_BA_TVANUMBER\" />\r\n            <field name=\"OC_BA_TITLE\" />\r\n            <field name=\"OC_BA_FNAME\" />\r\n            <field name=\"OC_BA_LNAME\" required=\"true\"/>\r\n            <field name=\"OC_BA_ORGANIZATION\" />\r\n            <field name=\"OC_BA_EBILL\" />\r\n            <field name=\"OC_BA_EBILLEMAIL\" />\r\n            <field name=\"OC_BA_EBILLEMAILS\" />\r\n            <field name=\"OC_BA_ADDRESS\" />\r\n            <field name=\"OC_BA_ZIPCODE\" />\r\n            <field name=\"OC_BA_CITY\" />\r\n            <field name=\"OC_BA_STATE\" />\r\n            <field name=\"OC_BA_COUNTRY\" />\r\n            <field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n        </record>\r\n    </stream>\r\n</beanio>\r\n"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.BillingAccountImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>
		<!-- USER_ACCOUNT -->
		<insert tableName="meveo_job_instance">
			<column name="id" valueSequenceNext="meveo_job_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="1" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="job_category" value="MEDIATION" />
			<column name="job_template" value="FlatFileProcessingJob" />
			<column name="code" value="massImportUserAccountJob" />
			<column name="creator" value="opencell.admin" />
			<column name="job_speed" value="NORMAL" />
			<column name="single_node" valueNumeric="1" />
			<column name="verbose_report" valueNumeric="1" />
			<column name="disabled" valueNumeric="0" />
			<column name="cf_values">
				<![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "/imports/massImport/userAccount/input"}], "FlatFileProcessingJob_outputDir": [{"string": "/imports/massImport/userAccount/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "/imports/massImport/userAccount/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "/imports/massImport/userAccount/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n        xmlns=\"http://www.beanio.org/2012/03\"\r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n    <stream name=\"record\" format=\"csv\">\r\n        <parser>\r\n            <property name=\"delimiter\" value=\";\"/>\r\n            <property name=\"comments\" value=\"END\"/>\r\n            <property name=\"multilineEnabled\" value=\"true\"/>\r\n        </parser>\r\n        <record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" ignore=\"true\" />\r\n            <field name=\"OC_ACTION\" ignore=\"true\" />\r\n            <field name=\"OC_BILLINGACCOUNT_CODE\" ignore=\"true\"/>\r\n          \t<field name=\"OC_PARENT_UA_CODE\" ignore=\"true\"/>\r\n            <field name=\"OC_USERACCOUNT_CODE\" ignore=\"true\"/>\r\n            <field name=\"OC_USERACCOUNT_ DESCRIPTION\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_DATE\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_REGISTRATION\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_TVANUMBER\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_TITLE\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_FNAME\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_LNAME\" ignore=\"true\"/>\r\n            <field name=\"OC_UA_ORGANIZATION\" ignore=\"true\"/>\r\n        </record>\r\n        <record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n            <field name=\"OC_ENTITY\" required=\"true\"/>\r\n            <field name=\"OC_ACTION\" required=\"true\"/>\r\n            <field name=\"OC_BILLINGACCOUNT_CODE\"/>\r\n          \t<field name=\"OC_PARENT_UA_CODE\"/>\r\n            <field name=\"OC_USERACCOUNT_CODE\"/>\r\n            <field name=\"OC_USERACCOUNT_ DESCRIPTION\"/>\r\n            <field name=\"OC_UA_DATE\"/>\r\n            <field name=\"OC_UA_REGISTRATION\"/>\r\n            <field name=\"OC_UA_TVANUMBER\"/>\r\n            <field name=\"OC_UA_TITLE\"/>\r\n            <field name=\"OC_UA_FNAME\"/>\r\n            <field name=\"OC_UA_LNAME\" required=\"true\"/>\r\n            <field name=\"OC_UA_ORGANIZATION\"/>\r\n            <field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n        </record>\r\n    </stream>\r\n</beanio>\r\n"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.UserAccountImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
			</column>
		</insert>

		<!-- Email templates -->
		<insert tableName="com_message_template">
			<column name="media" value="EMAIL" />
			<column name="id" valueSequenceNext="com_msg_tmpl_seq" />
			<column name="version" value="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="MASS_IMPORT_ISSUES_EMAIL" />
			<column name="tag_start" value="#{" />
			<column name="tag_end" value="}" />
			<column name="subject" value="Your import had a few issues : #{job}" />
			<column name="htmlcontent">
				<![CDATA[
				Your import was not a 100% success and some records were not created. Please review the rejection file.
                ]]>
			</column>
		</insert>
		<insert tableName="com_message_template">
			<column name="media" value="EMAIL" />
			<column name="id" valueSequenceNext="com_msg_tmpl_seq" />
			<column name="version" value="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="MASS_IMPORT_FAILURE_EMAIL" />
			<column name="tag_start" value="#{" />
			<column name="tag_end" value="}" />
			<column name="subject" value="Your import has failed : #{job}" />
			<column name="htmlcontent">
				<![CDATA[
				<font face="Arial, Verdana">Import process has failed. Please check the rejection file for more details. If this persists, please contact&nbsp;</font>your integrator or our support team.
                ]]>
			</column>
		</insert>
		<insert tableName="com_message_template">
			<column name="media" value="EMAIL" />
			<column name="id" valueSequenceNext="com_msg_tmpl_seq" />
			<column name="version" value="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="MASS_IMPORT_SUCCESS_EMAIL" />
			<column name="tag_start" value="#{" />
			<column name="tag_end" value="}" />
			<column name="subject" value="Your import was a success : #{job}" />
			<column name="htmlcontent">
				<![CDATA[
				<font face="Arial, Verdana">Your import that started&nbsp;<b>#{date}</b>&nbsp;at&nbsp;<b>#{time}&nbsp;</b>has been&nbsp;</font>processed successfully.
                ]]>
			</column>
		</insert>
		<!-- Job notification -->
		<insert tableName="adm_notification">
			<column name="id" valueSequenceNext="adm_notification_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="OC_CUSTOMER_JOB_NOTIFICATION" />
			<column name="class_name_filter" value="org.meveo.model.jobs.JobExecutionResultImpl" />
			<column name="event_type_filter" value="PROCESSED" />
			<column name="version" value="0" />
			<column name="creator" value="opencell.admin" />
			<column name="uuid" value="e60e376e-dbb7-424c-a37d-350280d6e033" />
			<column name="script_instance_id"
					valueComputed="(SELECT id from meveo_script_instance where code = 'org.meveo.service.script.CustomerJobNotification')"/>
		</insert>
		<insert tableName="adm_notif_job">
			<column name="id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_CUSTOMER_JOB_NOTIFICATION')" />
			<column name="job_instance_id"
					valueComputed="(SELECT id from meveo_job_instance where code = 'massImportCustomerJob')"/>
		</insert>
		<insert tableName="adm_notification_params">
			<column name="notification_id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_CUSTOMER_JOB_NOTIFICATION')" />
			<column name="params" value="customer"/>
			<column name="params_key" value="category"/>
		</insert>
	</changeSet>

	<changeSet id="#OUTRD-49-SUB_20220914-scripts" author="HamzaBiadi">
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.SubscriptionMassImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.EnumUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.SubscriptionDto;
import org.meveo.api.dto.billing.SubscriptionRenewalDto;
import org.meveo.model.billing.*;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.stream.Stream;


public class SubscriptionMassImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SUBSCRIPTION";
    private static final String ENTITY_NAME = "Subscription";

    public enum SubscriptionActionEnum {
        CREATE, UPDATE, SUSPEND, RESUME, ACTIVATE, TERMINATE
    }

    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(SubscriptionActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                SubscriptionActionEnum action = SubscriptionActionEnum.valueOf(OC_ACTION);

                SubscriptionDto subscriptionDto = validateAndGetSubscription(action, recordMap);

                if (SubscriptionActionEnum.CREATE.equals(action)) {
                    setSubscriptionValues(recordMap, subscriptionDto);
                    Subscription subscription = subscriptionApi.create(subscriptionDto);
                    this.setCFValues(recordMap, subscription, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private SubscriptionDto validateAndGetSubscription(SubscriptionActionEnum action, Map<String, Object> recordMap) {
        SubscriptionDto subscriptionDto = null;

        String subscriptionCode = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (subscriptionCode.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String useraccountCode = (String) recordMap.get("OC_USERACCOUNT_CODE");
        if (useraccountCode.isEmpty()) {
            throw new ValidationException("useraccount_code is required");
        }

        subscriptionDto = new SubscriptionDto();

        return subscriptionDto;
    }

    private void setSubscriptionValues(Map<String, Object> recordMap, SubscriptionDto subscriptionDto) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);


        String OC_subscription_date = (String) recordMap.get("OC_SUBSCRIPTION_DATE");
        String OC_endagreement_date = (String) recordMap.get("OC_ENDAGREEMENTDATE");
        String OC_termination_date = (String) recordMap.get("OC_TERMINATIONDATE");

        String OC_sub_inittermtype = (String) recordMap.get("OC_SUB_INITTERMTYPE");
        String OC_sub_durationtype = (String) recordMap.get("OC_SUB_DURATIONTYPE");
        Integer OC_sub_inittermlength = ((String) recordMap.get("OC_SUB_INITTERMLENGTH")).isEmpty() ? null
                : Integer.parseInt( (String) recordMap.get("OC_SUB_INITTERMLENGTH"));

        String OC_sub_inittermunit = (String) recordMap.get("OC_SUB_INITTERMUNIT");
        String OC_sub_endtermaction = (String) recordMap.get("OC_SUB_ENDTERMACTION");

        Date subscriptionDate = StringUtils.isEmpty(OC_subscription_date) ? null : dateFormat.parse(OC_subscription_date);
        Date endagreementDate = StringUtils.isEmpty(OC_endagreement_date) ? null : dateFormat.parse(OC_endagreement_date);
        Date terminationDate = StringUtils.isEmpty(OC_termination_date) ? null : dateFormat.parse(OC_termination_date);

        SubscriptionRenewal.InitialTermTypeEnum initialTermTypeEnum = (!EnumUtils.isValidEnum(SubscriptionRenewal.InitialTermTypeEnum.class, OC_sub_inittermtype)) ? null
                : SubscriptionRenewal.InitialTermTypeEnum.valueOf(OC_sub_inittermtype);
        SubscriptionRenewal.RenewalPeriodUnitEnum renewalPeriodUnit = (!EnumUtils.isValidEnum(SubscriptionRenewal.RenewalPeriodUnitEnum.class, OC_sub_durationtype)) ? null
                : SubscriptionRenewal.RenewalPeriodUnitEnum.valueOf(OC_sub_durationtype);

        SubscriptionRenewal.RenewalPeriodUnitEnum initialyActiveForUnit = (!EnumUtils.isValidEnum(SubscriptionRenewal.RenewalPeriodUnitEnum.class, OC_sub_inittermunit)) ? null
                : SubscriptionRenewal.RenewalPeriodUnitEnum.valueOf(OC_sub_inittermunit);
        SubscriptionRenewal.EndOfTermActionEnum endOfTermAction = (!EnumUtils.isValidEnum(SubscriptionRenewal.EndOfTermActionEnum.class, OC_sub_endtermaction)) ? null
                : SubscriptionRenewal.EndOfTermActionEnum.valueOf(OC_sub_endtermaction);
        String terminationReason = StringUtils.isEmpty((String) recordMap.get("OC_SUB_TERMINATIONREASON")) ? null : ((String) recordMap.get("OC_SUB_TERMINATIONREASON"));

        SubscriptionRenewalDto subscriptionRenewalDto = new SubscriptionRenewalDto();
        subscriptionRenewalDto.setInitialTermType(initialTermTypeEnum);
        subscriptionRenewalDto.setRenewForUnit(renewalPeriodUnit);
        subscriptionRenewalDto.setInitialyActiveFor(OC_sub_inittermlength);
        subscriptionRenewalDto.setInitialyActiveForUnit(initialyActiveForUnit);
        subscriptionRenewalDto.setEndOfTermAction(endOfTermAction);
        subscriptionRenewalDto.setTerminationReasonCode(terminationReason);

        subscriptionDto.setUserAccount((String) recordMap.get("OC_USERACCOUNT_CODE"));
        subscriptionDto.setCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        subscriptionDto.setStatus(SubscriptionStatusEnum.valueOf((String) recordMap.get("OC_STATUS")));
        subscriptionDto.setDescription((String) recordMap.get("OC_SUBSCRIPTION_DESCRIPTION"));
        subscriptionDto.setOfferTemplate((String) recordMap.get("OC_OFFER_CODE"));
        subscriptionDto.setSeller((String) recordMap.get("OC_SELLER_CODE"));
        subscriptionDto.setSubscriptionDate(subscriptionDate);
        subscriptionDto.setEndAgreementDate(endagreementDate);
        subscriptionDto.setTerminationDate(terminationDate);
        subscriptionDto.setBillingCycle((String) recordMap.get("OC_SUB_BC"));

        subscriptionDto.setRenewalRule(subscriptionRenewalDto);
        subscriptionDto.setElectronicBilling(recordMap.get("OC_SUB_EBILL").toString().equals("X"));
        subscriptionDto.setEmail((String) recordMap.get("OC_SUB_EBILLEMAIL"));
        subscriptionDto.setCcedEmails((String) recordMap.get("OC_SUB_EBILLEMAILS"));

    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>

		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.ServiceInstanceImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.cpq.ProductToInstantiateDto;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

public class ServiceInstanceImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SERVICE_INSTANCE";
    private static final String ENTITY_NAME = "ServiceInstance";

    public enum ServiceInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(ServiceInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

                ServiceInstance serviceInstance = validateAndGetServiceInstance(action, recordMap);

                if (ServiceInstanceActionEnum.CREATE.equals(action)) {
                    setServiceInstanceValues(recordMap, serviceInstance);
                    serviceInstanceService.create(serviceInstance);
                    this.setCFValues(recordMap, serviceInstance, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private ServiceInstance validateAndGetServiceInstance(ServiceInstanceActionEnum action, Map<String, Object> recordMap) {
        ServiceInstance serviceInstance = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SI_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        serviceInstance = new ServiceInstance();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return serviceInstance;
    }

    private void setServiceInstanceValues(Map<String, Object> recordMap, ServiceInstance serviceInstance) throws ParseException {
        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);

        serviceInstance.setCode((String) recordMap.get("OC_SI_CODE"));
        serviceInstance.setSubscription(subscription);
        serviceInstance.setDescription((String) recordMap.get("OC_SI_DESC"));

        // Instantiate products
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String OC_product_deliv_dt = (String) recordMap.get("OC_PRODUCT_DELIV_DT");
        Date deliveryDate = StringUtils.isEmpty(OC_product_deliv_dt) ? null : dateFormat.parse(OC_product_deliv_dt);

        ProductToInstantiateDto productToInstantiateDto = new ProductToInstantiateDto();
        productToInstantiateDto.setProductCode((String) recordMap.get("OC_PRODUCT_CODE"));
        productToInstantiateDto.setQuantity(new BigDecimal((String) recordMap.get("OC_PRODUCT_QTY")));
        productToInstantiateDto.setDeliveryDate(deliveryDate);

        List<ProductToInstantiateDto> products = new ArrayList<>();
        products.add(productToInstantiateDto);

        subscriptionApi.instanciateProduct(OC_subscription_code, products);

    }

}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>

		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.AttributeInstanceImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;


import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.AttributeInstanceDto;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.model.billing.AttributeInstance;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.model.cpq.Attribute;
import org.meveo.model.cpq.enums.AttributeTypeEnum;
import org.meveo.service.billing.impl.AttributeInstanceService;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.cpq.AttributeService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Map;
import java.util.stream.Stream;


public class AttributeInstanceImportScript extends GenericMassImportScript {
    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "ATTRIBUTE_INSTANCE";
    private static final String ENTITY_NAME = "AttributeInstance";

    public enum AttributeInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final AttributeInstanceService attributeInstanceService = (AttributeInstanceService) getServiceInterface("AttributeInstanceService");
    private final AttributeService attributeService = (AttributeService) getServiceInterface("AttributeService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");

    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());


    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(AttributeInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                AttributeInstanceActionEnum action = AttributeInstanceActionEnum.valueOf(OC_ACTION);

                AttributeInstanceDto attributeInstanceDto = validateAndGetAttributeInstance(action, recordMap);

                AttributeInstance attributeInstance = new AttributeInstance();

                if (AttributeInstanceActionEnum.CREATE.equals(action)) {
                    setAttributeInstanceValues(recordMap, attributeInstanceDto, attributeInstance);
                    this.setCFValues(recordMap, attributeInstance, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }


    private AttributeInstanceDto validateAndGetAttributeInstance(AttributeInstanceActionEnum action, Map<String, Object> recordMap) {
        AttributeInstanceDto attributeInstanceDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SERVICE_INSTANCE_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        attributeInstanceDto = new AttributeInstanceDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        ServiceInstance serviceInstance = serviceInstanceService.findByCode(OC_si_code);
        if (serviceInstance == null) {
            throw new ValidationException("no service instance found for code: '" + OC_si_code + "'");
        }

        return attributeInstanceDto;
    }


    private void setAttributeInstanceValues(Map<String, Object> recordMap, AttributeInstanceDto attributeInstanceDto, AttributeInstance attributeInstance) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);

        Attribute attribute = attributeService.findByCode((String) recordMap.get("OC_SI_ATTRIB_CODE"));
        AttributeTypeEnum type = attribute.getAttributeType();


        attributeInstanceDto.setAttributeCode((String) recordMap.get("OC_SI_ATTRIB_CODE"));
        attributeInstance.setAttribute(attribute);

        switch (type) {
            case TEXT:
                attributeInstanceDto.setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                attributeInstance.setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                break;
            case DATE:
                attributeInstanceDto.setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                        : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                attributeInstance.setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                        : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                break;
            case BOOLEAN:
                attributeInstanceDto.setBooleanValue((recordMap.get("OC_SI_ATTRIB_VALUE")).equals("X"));
                attributeInstance.setBooleanValue((recordMap.get("OC_SI_ATTRIB_VALUE")).equals("X"));
                break;
            case INTEGER:
                attributeInstanceDto.setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                attributeInstance.setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                break;
        }

        // ATTRIBUTE INSTANTIIATION
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();
        ServiceInstance serviceInstance = serviceInstanceService.findByCode((String) recordMap.get("OC_SERVICE_INSTANCE_CODE"));
        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());

        requestDto.addService(serviceDto);

        requestDto.setAttributeInstances(new ArrayList<>());
        requestDto.getAttributeInstances().add(attributeInstanceDto);

        subscriptionApi.updateServiceInstance(requestDto);

    }

}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>

		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.AccessPointImportScript" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.AccessApi;
import org.meveo.api.dto.account.AccessDto;
import org.meveo.model.billing.Subscription;
import org.meveo.model.mediation.Access;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.stream.Stream;

public class AccessPointImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "ACCESS_POINT";
    private static final String ENTITY_NAME = "Access";

    public enum AccessPointActionEnum {
        CREATE, UPDATE, DELETE
    }


    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final AccessApi accessApi = (AccessApi) getServiceInterface(AccessApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(AccessPointActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                AccessPointActionEnum action = AccessPointActionEnum.valueOf(OC_ACTION);

                AccessDto accessDto = validateAndGetAccessPoint(action, recordMap);

                if (AccessPointActionEnum.CREATE.equals(action)) {
                    setAccessValues(recordMap, accessDto);
                    Access access = accessApi.create(accessDto);
                    this.setCFValues(recordMap, access, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }


    private AccessDto validateAndGetAccessPoint(AccessPointActionEnum action, Map<String, Object> recordMap) {
        AccessDto accessDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        accessDto = new AccessDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return accessDto;
    }


    private void setAccessValues(Map<String, Object> recordMap, AccessDto accessDto) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String OC_accessPoint_startDate = (String) recordMap.get("OC_ACCESSPOINT_STARTDATE");
        String OC_accessPoint_endDate = (String) recordMap.get("OC_ACCESSPOINT_ENDDATE");
        Date startDate = StringUtils.isEmpty(OC_accessPoint_startDate) ? null : dateFormat.parse(OC_accessPoint_startDate);
        Date endDate = StringUtils.isEmpty(OC_accessPoint_endDate) ? null : dateFormat.parse(OC_accessPoint_endDate);

        accessDto.setSubscription((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        accessDto.setCode((String) recordMap.get("OC_ACCESSPOINT_CODE"));
        accessDto.setEndDate(endDate);
        accessDto.setStartDate(startDate);

    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>

		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.SubscriptionJobNotification" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class SubscriptionJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = "noreply@itnewvision.oc-sb.eu";

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String CUSTOMER_JOB_CODE = "massImportSubscriptionJob";
    private static final String CUSTOMER_ACCOUNT_JOB_CODE = "massImportServiceInstanceJob";
    private static final String PAYMENT_METHOD_JOB_CODE = "massImportAttributeInstance";
    private static final String BILLING_ACCOUNT_JOB_CODE = "importBillingAccountJob";
    private static final String USER_ACCOUNT_JOB_CODE = "importUserAccountJob";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;

            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    params.put("job", jobExecutionResult.getJobInstance().getCode());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case CUSTOMER_JOB_CODE:
                nextJobCode = CUSTOMER_ACCOUNT_JOB_CODE;
                break;
            case CUSTOMER_ACCOUNT_JOB_CODE:
                nextJobCode = PAYMENT_METHOD_JOB_CODE;
                break;
            case PAYMENT_METHOD_JOB_CODE:
                nextJobCode = BILLING_ACCOUNT_JOB_CODE;
                break;
            case BILLING_ACCOUNT_JOB_CODE:
                nextJobCode = USER_ACCOUNT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }
}

				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>
	</changeSet>

	<changeSet id="#OUTRD-49-SUB_20220914" author="HamzaBiadi">
        <!-- Subscription Job -->
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="code" value="massImportSubscriptionJob" />
            <column name="creator" value="opencell.admin" />
            <column name="job_speed" value="NORMAL" />
            <column name="single_node" valueNumeric="1" />
            <column name="verbose_report" valueNumeric="1" />
            <column name="disabled" valueNumeric="0" />
            <column name="cf_values">
                <![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "imports/massImport/subscription/input"}], "FlatFileProcessingJob_outputDir": [{"string": "imports/massImport/subscription/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "imports/massImport/subscription/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "imports/massImport/subscription/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_USERACCOUNT_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_STATUS\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DESCRIPTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_OFFER_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SELLER_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ENDAGREEMENTDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_TERMINATIONDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_BC\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMTYPE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_DURATIONTYPE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMLENGTH\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMUNIT\"  ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_ENDTERMACTION\"  ignore=\"true\" />\r\n\t\t\t<field name=\"OC_SUB_TERMINATIONREASON\"  ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILL\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAIL\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAILS\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_USERACCOUNT_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\"/>\r\n\t\t\t<field name=\"OC_STATUS\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DESCRIPTION\" />\r\n\t\t\t<field name=\"OC_OFFER_CODE\" />\r\n\t\t\t<field name=\"OC_SELLER_CODE\" />\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DATE\" />\r\n\t\t\t<field name=\"OC_ENDAGREEMENTDATE\" />\r\n\t\t\t<field name=\"OC_TERMINATIONDATE\" />\r\n\t\t\t<field name=\"OC_SUB_BC\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMTYPE\" />\r\n\t\t\t<field name=\"OC_SUB_DURATIONTYPE\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMLENGTH\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMUNIT\" />\r\n\t\t\t<field name=\"OC_SUB_ENDTERMACTION\" />\r\n\t\t\t<field name=\"OC_SUB_TERMINATIONREASON\" />\r\n\t\t\t<field name=\"OC_SUB_EBILL\" />\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAIL\" />\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAILS\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.SubscriptionMassImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
            </column>
        </insert>
        <!-- Service instance Job -->
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="code" value="massImportServiceInstanceJob" />
            <column name="creator" value="opencell.admin" />
            <column name="job_speed" value="NORMAL" />
            <column name="single_node" valueNumeric="1" />
            <column name="verbose_report" valueNumeric="1" />
            <column name="disabled" valueNumeric="0" />
            <column name="cf_values">
                <![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "imports/massImport/serviceInstance/input"}], "FlatFileProcessingJob_outputDir": [{"string": "imports/massImport/serviceInstance/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "imports/massImport/serviceInstance/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "imports/massImport/serviceInstance/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_DESC\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_QTY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_DELIV_DT\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_DESC\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_CODE\" />\r\n\t\t\t<field name=\"OC_PRODUCT_QTY\" />\r\n\t\t\t<field name=\"OC_PRODUCT_DELIV_DT\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.ServiceInstanceImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
            </column>
        </insert>
        <!-- Attribute Instance Job -->
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="code" value="massImportAttributeInstance" />
            <column name="creator" value="opencell.admin" />
            <column name="job_speed" value="NORMAL" />
            <column name="single_node" valueNumeric="1" />
            <column name="verbose_report" valueNumeric="1" />
            <column name="disabled" valueNumeric="0" />
            <column name="cf_values">
                <![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "imports/massImport/attributeInstance/input"}], "FlatFileProcessingJob_outputDir": [{"string": "imports/massImport/attributeInstance/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "imports/massImport/attributeInstance/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "imports/massImport/attributeInstance/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SERVICE_INSTANCE_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_VALUE\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SERVICE_INSTANCE_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_VALUE\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.AttributeInstanceImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
            </column>
        </insert>
        <!-- Access Point Job -->
        <insert tableName="meveo_job_instance">
            <column name="id" valueSequenceNext="meveo_job_instance_seq" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="job_category" value="MEDIATION" />
            <column name="job_template" value="FlatFileProcessingJob" />
            <column name="code" value="massImportAccessPoint" />
            <column name="creator" value="opencell.admin" />
            <column name="job_speed" value="NORMAL" />
            <column name="single_node" valueNumeric="1" />
            <column name="verbose_report" valueNumeric="1" />
            <column name="disabled" valueNumeric="0" />
            <column name="cf_values">
                <![CDATA[
				{"nbRuns": [{"long": 1}], "oneFilePerJob": [{"boolean": false}], "waitingMillis": [{"long": 0}], "FlatFileProcessingJob_inputDir": [{"string": "imports/massImport/accessPoint/input"}], "FlatFileProcessingJob_outputDir": [{"string": "imports/massImport/accessPoint/output"}], "FlatFileProcessingJob_rejectDir": [{"string": "imports/massImport/accessPoint/reject"}], "FlatFileProcessingJob_archiveDir": [{"string": "imports/massImport/accessPoint/archive"}], "FlatFileProcessingJob_errorAction": [{"string": "CONTINUE"}], "FlatFileProcessingJob_mappingConf": [{"string": "<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_CODE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_STARTDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_ENDDATE\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_CODE\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_STARTDATE\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_ENDDATE\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}], "FlatFileProcessingJob_scriptsFlow": [{"string": "org.meveo.service.script.AccessPointImportScript"}], "FlatFileProcessingJob_formatTransfo": [{"string": "None"}], "FlatFileProcessingJob_originFilename": [{"string": "origin_filename"}], "FlatFileProcessingJob_nbLinesToProcess": [{"long": 1}], "FlatFileProcessingJob_fileNameExtension": [{"string": "csv"}], "FlatFileProcessingJob_recordVariableName": [{"string": "record"}]}
				]]>
            </column>
        </insert>

		<insert tableName="adm_notification">
			<column name="id" valueSequenceNext="adm_notification_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION" />
			<column name="class_name_filter" value="org.meveo.model.jobs.JobExecutionResultImpl" />
			<column name="event_type_filter" value="PROCESSED" />
			<column name="version" value="0" />
			<column name="creator" value="opencell.admin" />
			<column name="script_instance_id"
					valueComputed="(SELECT id from meveo_script_instance where code = 'org.meveo.service.script.SubscriptionJobNotification')"/>
		</insert>
		<insert tableName="adm_notif_job">
			<column name="id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION')" />
			<column name="job_instance_id"
					valueComputed="(SELECT id from meveo_job_instance where code = 'massImportSubscriptionJob')"/>
		</insert>
		<insert tableName="adm_notification_params">
			<column name="notification_id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION')" />
			<column name="params" value="customer"/>
			<column name="params_key" value="category"/>
		</insert>
	</changeSet>


	<changeSet id="#OUTRD-63-SUB_20220926-scripts" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.CustomerAccountApi;
import org.meveo.api.dto.account.CustomerAccountDto;
import org.meveo.model.crm.Customer;
import org.meveo.model.payments.CustomerAccount;
import org.meveo.service.crm.impl.CustomerService;
import org.meveo.service.script.GenericMassImportScript;

import java.util.Map;
import java.util.stream.Stream;


public class CustomerAccountImportScript extends GenericMassImportScript {

    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "CUSTOMER_ACCOUNT";
    private static final String ENTITY_NAME = "CustomerAccount";

    public enum CustomerAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final CustomerService customerService = (CustomerService) getServiceInterface("CustomerService");
    private final CustomerAccountApi customerAccountApi = (CustomerAccountApi) getServiceInterface(CustomerAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(CustomerAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                CustomerAccountActionEnum action = CustomerAccountActionEnum.valueOf(ocAction);

                CustomerAccountDto customerAccountDto = validateAndGetCustomerAccount(action, recordMap);

                if (CustomerAccountActionEnum.DELETE.equals(action)) {
                    customerAccountApi.remove(customerAccountDto.getCode());
                } else {
                    setCustomerAccountValues(recordMap, customerAccountDto);
                    if (CustomerAccountActionEnum.CREATE.equals(action)) {
                        CustomerAccount customerAccount = customerAccountApi.create(customerAccountDto);

                        this.setCFValues(recordMap, customerAccount, ENTITY_NAME);
                    } else if (CustomerAccountActionEnum.UPDATE.equals(action)) {
                        customerAccountApi.update(customerAccountDto);
                    }

                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private CustomerAccountDto validateAndGetCustomerAccount(CustomerAccountActionEnum action, Map<String, Object> recordMap) throws Exception {
        CustomerAccountDto customerAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String customerCode = (String) recordMap.get("OC_CUSTOMER_CODE");
        if (customerCode.isEmpty()) {
            throw new ValidationException("customer_code is required");
        }
        Customer customer = customerService.findByCode(customerCode);

        // For update and delete : check if there is a record
        if (!CustomerAccountActionEnum.CREATE.equals(action)) {
            if (customer == null) {
                throw new ValidationException("no customer found for customer_code: '" + customerCode + "'");
            }
            customerAccountDto = customerAccountApi.find(customerAccountCode, false);
            // Create action : check if there is no record
        } else {
            customerAccountDto = new CustomerAccountDto();
        }
        return customerAccountDto;
    }

    private void setCustomerAccountValues(Map<String, Object> recordMap, CustomerAccountDto customerAccountDto) {
        customerAccountDto.setCustomer((String) recordMap.get("OC_CUSTOMER_CODE"));
        customerAccountDto.setCode((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        customerAccountDto.setCurrency((String) recordMap.get("OC_CUSTOMERACCOUNT_CURRENCY"));
        customerAccountDto.setDueDateDelayEL((String) recordMap.get("OC_CUSTOMERACCOUNT_PAYTERM"));
        customerAccountDto.setCreditCategory((String) recordMap.get("OC_CUSTOMERACCOUNT_CREDCAT"));
        customerAccountDto.setLanguage((String) recordMap.get("OC_CUSTOMERACCOUNT_LANG"));
    }
}

				]]>
			</column>
			<where>code='org.meveo.service.script.CustomerAccountImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-56-SUB_20220926-scripts" author="Ilham-Chafik">
		<!-- Update notification scripts -->
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class CustomerJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = "noreply@itnewvision.oc-sb.eu";

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String CUSTOMER_JOB_CODE = "massImportCustomerJob";
    private static final String CUSTOMER_ACCOUNT_JOB_CODE = "massImportCustomerAccountJob";
    private static final String PAYMENT_METHOD_JOB_CODE = "massImportPaymentMethodJob";
    private static final String BILLING_ACCOUNT_JOB_CODE = "massImportBillingAccountJob";
    private static final String USER_ACCOUNT_JOB_CODE = "massImportUserAccountJob";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;


            String jobCode = jobExecutionResult.getJobInstance().getCode();
            params.put("entityName", EntityNameEnum.valueOf(jobCode).entity);
            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case CUSTOMER_JOB_CODE:
                nextJobCode = CUSTOMER_ACCOUNT_JOB_CODE;
                break;
            case CUSTOMER_ACCOUNT_JOB_CODE:
                nextJobCode = PAYMENT_METHOD_JOB_CODE;
                break;
            case PAYMENT_METHOD_JOB_CODE:
                nextJobCode = BILLING_ACCOUNT_JOB_CODE;
                break;
            case BILLING_ACCOUNT_JOB_CODE:
                nextJobCode = USER_ACCOUNT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }

    private enum EntityNameEnum {
        massImportCustomerJob("Customer"),
        massImportCustomerAccountJob("CustomerAccount"),
        massImportPaymentMethodJob("PaymentMethod"),
        massImportBillingAccountJob("BillingAccount"),
        massImportUserAccountJob("UserAccount");

        String entity;

        EntityNameEnum(String entity) {
            this.entity = entity;
        }

    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.CustomerJobNotification'</where>
		</update>
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class SubscriptionJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = "noreply@itnewvision.oc-sb.eu";

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String SUBSCRIPTION_JOB_CODE = "massImportSubscriptionJob";
    private static final String SERVICE_INSTANCE_JOB_CODE = "massImportServiceInstanceJob";
    private static final String ATTRIBUTE_INTSNACE_JOB_CODE = "massImportAttributeInstance";
    private static final String ACCESS_POINT_JOB_CODE = "massImportAccessPoint";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;

            String jobCode = jobExecutionResult.getJobInstance().getCode();
            params.put("entityName", EntityNameEnum.valueOf(jobCode).entity);
            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case SUBSCRIPTION_JOB_CODE:
                nextJobCode = SERVICE_INSTANCE_JOB_CODE;
                break;
            case SERVICE_INSTANCE_JOB_CODE:
                nextJobCode = ATTRIBUTE_INTSNACE_JOB_CODE;
                break;
            case ATTRIBUTE_INTSNACE_JOB_CODE:
                nextJobCode = ACCESS_POINT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }

    private enum EntityNameEnum {
        massImportSubscriptionJob("Subscription"),
        massImportServiceInstanceJob("ServiceInstance"),
        massImportAttributeInstance("AttributeInstance"),
        massImportAccessPoint("AccessPoint");

        String entity;

        EntityNameEnum(String entity) {
            this.entity = entity;
        }

    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.SubscriptionJobNotification'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-56-SUB_20220926" author="Ilham-Chafik">
		<!-- Update email templates -->
		<update tableName="com_message_template">
			<column name="subject" value="Your import had a few issues 🧐" />
			<column name="htmlcontent">
				<![CDATA[
					<font face="Arial, Verdana">Your import of&nbsp;<b>#{entityName}</b>&nbsp;was not a 100% success and some records were not created. Please review the rejection file.
					]]>
			</column>
			<where>code='MASS_IMPORT_ISSUES_EMAIL'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Your import has failed 😟" />
			<column name="htmlcontent">
				<![CDATA[
					<font face="Arial, Verdana">Import process of&nbsp;<b>#{entityName}</b>&nbsp;has failed. Please check the rejection file for more details. If this persists, please contact&nbsp;</font>your integrator or our support team.
					]]>
			</column>
			<where>code='MASS_IMPORT_FAILURE_EMAIL'</where>
		</update>
		<update tableName="com_message_template">
			<column name="subject" value="Your import was a success 🥳" />
			<column name="htmlcontent">
				<![CDATA[
					<font face="Arial, Verdana">Your import of&nbsp;<b>#{entityName}</b>&nbsp;that started&nbsp;<b>#{date}</b>&nbsp;at&nbsp;<b>#{time}&nbsp;</b>has been&nbsp;</font>processed successfully.
					]]>
			</column>
			<where>code='MASS_IMPORT_SUCCESS_EMAIL'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-53_20220930" author="Ilham-Chafik">
		<!-- Delete existing job notifications -->
		<delete tableName="adm_notif_job">
			<where>id IN (SELECT id from adm_notification where code = 'OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION')</where>
		</delete>
		<delete tableName="adm_notification_params">
			<where>notification_id IN (SELECT id from adm_notification where code = 'OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION')</where>
		</delete>
		<delete tableName="adm_notification">
			<where>code='OC_CUSTOMER_SUBSCRIPTION_NOTIFICATION'</where>
		</delete>
		<delete tableName="adm_notif_job">
			<where>id IN (SELECT id from adm_notification where code = 'OC_CUSTOMER_JOB_NOTIFICATION')</where>
		</delete>
		<delete tableName="adm_notification_params">
			<where>notification_id IN (SELECT id from adm_notification where code = 'OC_CUSTOMER_JOB_NOTIFICATION')</where>
		</delete>
		<delete tableName="adm_notification">
			<where>code='OC_CUSTOMER_JOB_NOTIFICATION'</where>
		</delete>
		<!-- Delete separate scripts for job notifications (Customers & Subscriptions) -->
		<delete tableName="meveo_script_instance">
			<where>code='org.meveo.service.script.CustomerJobNotification'</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code='org.meveo.service.script.SubscriptionJobNotification'</where>
		</delete>

		<!-- Job notification script -->
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="code" value="org.meveo.service.script.ImportJobNotification" />
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class ImportJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = "noreply@itnewvision.oc-sb.eu";

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String CUSTOMER_JOB_CODE = "massImportCustomerJob";
    private static final String CUSTOMER_ACCOUNT_JOB_CODE = "massImportCustomerAccountJob";
    private static final String PAYMENT_METHOD_JOB_CODE = "massImportPaymentMethodJob";
    private static final String BILLING_ACCOUNT_JOB_CODE = "massImportBillingAccountJob";
    private static final String USER_ACCOUNT_JOB_CODE = "massImportUserAccountJob";

    private static final String SUBSCRIPTION_JOB_CODE = "massImportSubscriptionJob";
    private static final String SERVICE_INSTANCE_JOB_CODE = "massImportServiceInstanceJob";
    private static final String ATTRIBUTE_INTSNACE_JOB_CODE = "massImportAttributeInstance";
    private static final String ACCESS_POINT_JOB_CODE = "massImportAccessPoint";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;


            String jobCode = jobExecutionResult.getJobInstance().getCode();
            params.put("entityName", EntityNameEnum.valueOf(jobCode).entity);
            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case CUSTOMER_JOB_CODE:
                nextJobCode = CUSTOMER_ACCOUNT_JOB_CODE;
                break;
            case CUSTOMER_ACCOUNT_JOB_CODE:
                nextJobCode = PAYMENT_METHOD_JOB_CODE;
                break;
            case PAYMENT_METHOD_JOB_CODE:
                nextJobCode = BILLING_ACCOUNT_JOB_CODE;
                break;
            case BILLING_ACCOUNT_JOB_CODE:
                nextJobCode = USER_ACCOUNT_JOB_CODE;
                break;
            case SUBSCRIPTION_JOB_CODE:
                nextJobCode = SERVICE_INSTANCE_JOB_CODE;
                break;
            case SERVICE_INSTANCE_JOB_CODE:
                nextJobCode = ATTRIBUTE_INTSNACE_JOB_CODE;
                break;
            case ATTRIBUTE_INTSNACE_JOB_CODE:
                nextJobCode = ACCESS_POINT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }

    private enum EntityNameEnum {
        massImportCustomerJob("Customer"),
        massImportCustomerAccountJob("CustomerAccount"),
        massImportPaymentMethodJob("PaymentMethod"),
        massImportBillingAccountJob("BillingAccount"),
        massImportUserAccountJob("UserAccount"),
        massImportSubscriptionJob("Subscription"),
        massImportServiceInstanceJob("ServiceInstance"),
        massImportAttributeInstance("AttributeInstance"),
        massImportAccessPoint("AccessPoint");

        String entity;

        EntityNameEnum(String entity) {
            this.entity = entity;
        }

    }
}
				]]>
			</column>
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="opencell.admin" />
			<column name="version" valueNumeric="0" />
			<column name="src_type" value="JAVA" />
		</insert>

		<insert tableName="adm_notification">
			<column name="id" valueSequenceNext="adm_notification_seq" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="OC_MASS_IMPORT_NOTIFICATION" />
			<column name="class_name_filter" value="org.meveo.model.jobs.JobExecutionResultImpl" />
			<column name="event_type_filter" value="PROCESSED" />
			<column name="version" value="0" />
			<column name="creator" value="opencell.admin" />
			<column name="script_instance_id"
					valueComputed="(SELECT id from meveo_script_instance where code = 'org.meveo.service.script.ImportJobNotification')"/>
		</insert>
		<insert tableName="adm_notif_job">
			<column name="id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_MASS_IMPORT_NOTIFICATION')" />
			<column name="job_instance_id"
					valueComputed="(SELECT id from meveo_job_instance where code = 'massImportCustomerJob')"/>
		</insert>
		<insert tableName="adm_notification_params">
			<column name="notification_id"
					valueComputed="(SELECT id from adm_notification where code = 'OC_MASS_IMPORT_NOTIFICATION')" />
			<column name="params" value="customer"/>
			<column name="params_key" value="category"/>
		</insert>
	</changeSet>

	<changeSet id="#OUTRD-66_20221003" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.dto.account.BankCoordinatesDto;
import org.meveo.api.dto.payment.PaymentMethodDto;
import org.meveo.api.payment.PaymentMethodApi;
import org.meveo.model.payments.CreditCardTypeEnum;
import org.meveo.model.payments.PaymentMethod;
import org.meveo.model.payments.PaymentMethodEnum;
import org.meveo.service.payments.impl.PaymentMethodService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class PaymentMethodImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "PAYMENT_METHOD";
    private static final String ENTITY_NAME = "PaymentMethod";

    public enum PaymentMethodActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface("PaymentMethodService");
    private final PaymentMethodApi paymentMethodApi = (PaymentMethodApi) getServiceInterface(PaymentMethodApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(PaymentMethodActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                PaymentMethodActionEnum action = PaymentMethodActionEnum.valueOf(ocAction);

                PaymentMethodDto paymentMethodDto = validateAndGetPaymentMethod(recordMap);


                if (action == PaymentMethodActionEnum.CREATE) {
                    setPaymentMethodValues(recordMap, paymentMethodDto);
                    Long paymentMethodId = paymentMethodApi.create(paymentMethodDto);
                    PaymentMethod paymentMethod = paymentMethodService.findById(paymentMethodId);
                    this.setCFValues(recordMap, paymentMethod, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private PaymentMethodDto validateAndGetPaymentMethod(Map<String, Object> recordMap) {
        PaymentMethodDto paymentMethodDto = new PaymentMethodDto();

        String customerAccountCode = (String) recordMap.get("OC_PMT_CA");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        return paymentMethodDto;
    }

    private void setPaymentMethodValues(Map<String, Object> recordMap, PaymentMethodDto paymentMethodDto) throws ParseException {
        PaymentMethodEnum ocPaymentMethodType = PaymentMethodEnum.valueOf((String) recordMap.get("OC_PMT_TYPE"));
        paymentMethodDto.setPaymentMethodType(ocPaymentMethodType);
        paymentMethodDto.setPreferred(Objects.equals(recordMap.get("OC_PMT_PREFERRED"), "X"));
        paymentMethodDto.setAlias((String) recordMap.get("OC_PMT_ALIAS"));
        paymentMethodDto.setCustomerAccountCode((String) recordMap.get("OC_PMT_CA"));
        if (!((String) recordMap.get("OC_PMT_cardType")).isEmpty()) {
            paymentMethodDto.setCardType(CreditCardTypeEnum.valueOf((String) recordMap.get("OC_PMT_cardType")));
        }
        if (!((String) recordMap.get("OC_PMT_monthExpiration")).isEmpty()) {
            paymentMethodDto.setMonthExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_monthExpiration")));
        }
        if (!((String) recordMap.get("OC_PMT_yearExpiration")).isEmpty()) {
            paymentMethodDto.setYearExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_yearExpiration")));
        }
        paymentMethodDto.setTokenId((String) recordMap.get("OC_PMT_tokenId"));
        paymentMethodDto.setCardNumber((String) recordMap.get("OC_PMT_cardNumber"));
        paymentMethodDto.setIssueNumber((String) recordMap.get("OC_PMT_issueNumber"));
        paymentMethodDto.setUserId((String) recordMap.get("OC_PMT_userId"));
        paymentMethodDto.setEmail((String) recordMap.get("OC_PMT_email"));
        paymentMethodDto.setOwner((String) recordMap.get("OC_PMT_accountOwner"));
        if (!((String) recordMap.get("OC_PMT_referenceDocumentCode")).isEmpty()) {
            paymentMethodDto.setReferenceDocumentCode((String) recordMap.get("OC_PMT_referenceDocumentCode"));
        }

        if (ocPaymentMethodType == PaymentMethodEnum.DIRECTDEBIT) {
            BankCoordinatesDto bankCoordinatesDto = new BankCoordinatesDto();
            bankCoordinatesDto.setBankCode((String) recordMap.get("OC_PMT_bankCode"));
            bankCoordinatesDto.setBranchCode((String) recordMap.get("OC_PMT_branchCode"));
            bankCoordinatesDto.setAccountNumber((String) recordMap.get("OC_PMT_accountNumber"));
            bankCoordinatesDto.setKey((String) recordMap.get("OC_PMT_key"));
            bankCoordinatesDto.setIban((String) recordMap.get("OC_PMT_iban"));
            bankCoordinatesDto.setBic((String) recordMap.get("OC_PMT_bic"));
            bankCoordinatesDto.setAccountOwner((String) recordMap.get("OC_PMT_accountOwner"));
            bankCoordinatesDto.setBankName((String) recordMap.get("OC_PMT_bankName"));
            bankCoordinatesDto.setBankId((String) recordMap.get("OC_PMT_bankId"));
            bankCoordinatesDto.setIssuerNumber((String) recordMap.get("OC_PMT_issuerNumber"));
            bankCoordinatesDto.setIssuerName((String) recordMap.get("OC_PMT_issuerName"));
            bankCoordinatesDto.setIcs((String) recordMap.get("OC_PMT_ics"));
            paymentMethodDto.setBankCoordinates(bankCoordinatesDto);
        }

        paymentMethodDto.setMandateIdentification((String) recordMap.get("OC_PMT_mandateIdentification"));

        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String ocPaymentMethodMandateDate = (String) recordMap.get("OC_PMT_mandateDate");
        Date mandateDate = StringUtils.isEmpty(ocPaymentMethodMandateDate) ? null : dateFormat.parse(ocPaymentMethodMandateDate);
        paymentMethodDto.setMandateDate(mandateDate);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.PaymentMethodImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-69_20221003-scripts" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.BillingAccountApi;
import org.meveo.api.dto.account.AddressDto;
import org.meveo.api.dto.account.BillingAccountDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.model.billing.BillingAccount;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class BillingAccountImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "BILLING_ACCOUNT";
    private static final String ENTITY_NAME = "BillingAccount";

    public enum BillingAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final BillingAccountApi billingAccountApi = (BillingAccountApi) getServiceInterface(BillingAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(BillingAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                BillingAccountActionEnum action = BillingAccountActionEnum.valueOf(ocAction);

                BillingAccountDto billingAccountDto = validateAndGetBillingAccount(recordMap);

                if (BillingAccountActionEnum.CREATE.equals(action)) {
                    setBillingAccountValues(recordMap, billingAccountDto);
                    BillingAccount billingAccount = billingAccountApi.create(billingAccountDto);
                    this.setCFValues(recordMap, billingAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private BillingAccountDto validateAndGetBillingAccount(Map<String, Object> recordMap) {
        BillingAccountDto billingAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        billingAccountDto = new BillingAccountDto();

        return billingAccountDto;
    }

    private void setBillingAccountValues(Map<String, Object> recordMap, BillingAccountDto billingAccountDto) throws ParseException {
        billingAccountDto.setCustomerAccount((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        billingAccountDto.setCode((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        billingAccountDto.setDescription((String) recordMap.get("OC_BILLINGACCOUNT_DESCRIPTION"));
        billingAccountDto.setBillingCycle((String) recordMap.get("OC_BILLINGACCOUNT_BC"));
        billingAccountDto.setCountry((String) recordMap.get("OC_BILLINGACCOUNT_COUNTRY"));
        billingAccountDto.setLanguage((String) recordMap.get("OC_BILLINGACCOUNT_LANGUAGE"));
        billingAccountDto.setTradingCurrency((String) recordMap.get("OC_BILLINGACCOUNT_CURRENCY"));
        billingAccountDto.setTaxCategoryCode((String) recordMap.get("OC_BILLINGACCOUNT_TAXCAT"));
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String subscriptionDate = (String) recordMap.get("OC_BA_DATE");
        billingAccountDto.setSubscriptionDate(StringUtils.isEmpty(subscriptionDate) ? null : dateFormat.parse(subscriptionDate));
        billingAccountDto.setRegistrationNo((String) recordMap.get("OC_BA_REGISTRATION"));
        billingAccountDto.setVatNo((String) recordMap.get("OC_BA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_BA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_BA_FNAME"));
        name.setLastName((String) recordMap.get("OC_BA_LNAME"));
        billingAccountDto.setName(name);

        billingAccountDto.setIsCompany(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X"));
        billingAccountDto.setElectronicBilling(Objects.equals(recordMap.get("OC_BA_EBILL"), "X"));
        billingAccountDto.setEmail((String) recordMap.get("OC_BA_EBILLEMAIL"));
        billingAccountDto.setCcedEmails((String) recordMap.get("OC_BA_EBILLEMAILS"));

        AddressDto addressDto = new AddressDto();
        addressDto.setAddress1((String) recordMap.get("OC_BA_ADDRESS"));
        addressDto.setZipCode((String) recordMap.get("OC_BA_ZIPCODE"));
        addressDto.setCity((String) recordMap.get("OC_BA_CITY"));
        addressDto.setState((String) recordMap.get("OC_BA_STATE"));
        addressDto.setCountry((String) recordMap.get("OC_BA_COUNTRY"));
        billingAccountDto.setAddress(addressDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.BillingAccountImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-68_20221004" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.BillingAccountApi;
import org.meveo.api.dto.account.AddressDto;
import org.meveo.api.dto.account.BillingAccountDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.api.dto.response.TitleDto;
import org.meveo.model.billing.BillingAccount;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class BillingAccountImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "BILLING_ACCOUNT";
    private static final String ENTITY_NAME = "BillingAccount";

    public enum BillingAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final BillingAccountApi billingAccountApi = (BillingAccountApi) getServiceInterface(BillingAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(BillingAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                BillingAccountActionEnum action = BillingAccountActionEnum.valueOf(ocAction);

                BillingAccountDto billingAccountDto = validateAndGetBillingAccount(recordMap);

                if (BillingAccountActionEnum.CREATE.equals(action)) {
                    setBillingAccountValues(recordMap, billingAccountDto);
                    BillingAccount billingAccount = billingAccountApi.create(billingAccountDto);
                    this.setCFValues(recordMap, billingAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private BillingAccountDto validateAndGetBillingAccount(Map<String, Object> recordMap) {
        BillingAccountDto billingAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        billingAccountDto = new BillingAccountDto();

        return billingAccountDto;
    }

    private void setBillingAccountValues(Map<String, Object> recordMap, BillingAccountDto billingAccountDto) throws ParseException {
        billingAccountDto.setCustomerAccount((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        billingAccountDto.setCode((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        billingAccountDto.setDescription((String) recordMap.get("OC_BILLINGACCOUNT_DESCRIPTION"));
        billingAccountDto.setBillingCycle((String) recordMap.get("OC_BILLINGACCOUNT_BC"));
        billingAccountDto.setCountry((String) recordMap.get("OC_BILLINGACCOUNT_COUNTRY"));
        billingAccountDto.setLanguage((String) recordMap.get("OC_BILLINGACCOUNT_LANGUAGE"));
        billingAccountDto.setTradingCurrency((String) recordMap.get("OC_BILLINGACCOUNT_CURRENCY"));
        billingAccountDto.setTaxCategoryCode((String) recordMap.get("OC_BILLINGACCOUNT_TAXCAT"));
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        String subscriptionDate = (String) recordMap.get("OC_BA_DATE");
        billingAccountDto.setSubscriptionDate(StringUtils.isEmpty(subscriptionDate) ? null : dateFormat.parse(subscriptionDate));
        billingAccountDto.setRegistrationNo((String) recordMap.get("OC_BA_REGISTRATION"));
        billingAccountDto.setVatNo((String) recordMap.get("OC_BA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_BA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_BA_FNAME"));
        name.setLastName((String) recordMap.get("OC_BA_LNAME"));
        billingAccountDto.setName(name);

        TitleDto titleDto = new TitleDto();
        if(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X")) {
            titleDto.setIsCompany(true);
            titleDto.setCode((String) recordMap.get("OC_BA_TITLE"));
            billingAccountDto.setLegalEntityType(titleDto);
        }

        billingAccountDto.setIsCompany(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X"));
        billingAccountDto.setElectronicBilling(Objects.equals(recordMap.get("OC_BA_EBILL"), "X"));
        billingAccountDto.setEmail((String) recordMap.get("OC_BA_EBILLEMAIL"));
        billingAccountDto.setCcedEmails((String) recordMap.get("OC_BA_EBILLEMAILS"));

        AddressDto addressDto = new AddressDto();
        addressDto.setAddress1((String) recordMap.get("OC_BA_ADDRESS"));
        addressDto.setZipCode((String) recordMap.get("OC_BA_ZIPCODE"));
        addressDto.setCity((String) recordMap.get("OC_BA_CITY"));
        addressDto.setState((String) recordMap.get("OC_BA_STATE"));
        addressDto.setCountry((String) recordMap.get("OC_BA_COUNTRY"));
        billingAccountDto.setAddress(addressDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.BillingAccountImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-69_20221005" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.BillingAccountApi;
import org.meveo.api.dto.account.AddressDto;
import org.meveo.api.dto.account.BillingAccountDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.api.dto.response.TitleDto;
import org.meveo.model.billing.BillingAccount;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class BillingAccountImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "BILLING_ACCOUNT";
    private static final String ENTITY_NAME = "BillingAccount";

    public enum BillingAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final BillingAccountApi billingAccountApi = (BillingAccountApi) getServiceInterface(BillingAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(BillingAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                BillingAccountActionEnum action = BillingAccountActionEnum.valueOf(ocAction);

                BillingAccountDto billingAccountDto = validateAndGetBillingAccount(recordMap);

                if (BillingAccountActionEnum.CREATE.equals(action)) {
                    setBillingAccountValues(recordMap, billingAccountDto);
                    BillingAccount billingAccount = billingAccountApi.create(billingAccountDto);
                    this.setCFValues(recordMap, billingAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private BillingAccountDto validateAndGetBillingAccount(Map<String, Object> recordMap) {
        BillingAccountDto billingAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        billingAccountDto = new BillingAccountDto();

        return billingAccountDto;
    }

    private void setBillingAccountValues(Map<String, Object> recordMap, BillingAccountDto billingAccountDto) throws ParseException {
        billingAccountDto.setCustomerAccount((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        billingAccountDto.setCode((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        billingAccountDto.setDescription((String) recordMap.get("OC_BILLINGACCOUNT_DESCRIPTION"));
        billingAccountDto.setBillingCycle((String) recordMap.get("OC_BILLINGACCOUNT_BC"));
        billingAccountDto.setCountry((String) recordMap.get("OC_BILLINGACCOUNT_COUNTRY"));
        billingAccountDto.setLanguage((String) recordMap.get("OC_BILLINGACCOUNT_LANGUAGE"));
        billingAccountDto.setTradingCurrency((String) recordMap.get("OC_BILLINGACCOUNT_CURRENCY"));
        billingAccountDto.setTaxCategoryCode((String) recordMap.get("OC_BILLINGACCOUNT_TAXCAT"));
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);
        String subscriptionDate = (String) recordMap.get("OC_BA_DATE");
        try {
            billingAccountDto.setSubscriptionDate(StringUtils.isEmpty(subscriptionDate) ? null : dateFormat.parse(subscriptionDate));
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for subscription date");
        }
        billingAccountDto.setRegistrationNo((String) recordMap.get("OC_BA_REGISTRATION"));
        billingAccountDto.setVatNo((String) recordMap.get("OC_BA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_BA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_BA_FNAME"));
        name.setLastName((String) recordMap.get("OC_BA_LNAME"));
        billingAccountDto.setName(name);

        TitleDto titleDto = new TitleDto();
        if(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X")) {
            titleDto.setIsCompany(true);
            titleDto.setCode((String) recordMap.get("OC_BA_TITLE"));
            billingAccountDto.setLegalEntityType(titleDto);
        }

        billingAccountDto.setIsCompany(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X"));
        billingAccountDto.setElectronicBilling(Objects.equals(recordMap.get("OC_BA_EBILL"), "X"));
        billingAccountDto.setEmail((String) recordMap.get("OC_BA_EBILLEMAIL"));
        billingAccountDto.setCcedEmails((String) recordMap.get("OC_BA_EBILLEMAILS"));

        AddressDto addressDto = new AddressDto();
        addressDto.setAddress1((String) recordMap.get("OC_BA_ADDRESS"));
        addressDto.setZipCode((String) recordMap.get("OC_BA_ZIPCODE"));
        addressDto.setCity((String) recordMap.get("OC_BA_CITY"));
        addressDto.setState((String) recordMap.get("OC_BA_STATE"));
        addressDto.setCountry((String) recordMap.get("OC_BA_COUNTRY"));
        billingAccountDto.setAddress(addressDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.BillingAccountImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-73_20221006" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.BillingAccountApi;
import org.meveo.api.dto.account.AddressDto;
import org.meveo.api.dto.account.BillingAccountDto;
import org.meveo.api.dto.account.NameDto;
import org.meveo.api.dto.response.TitleDto;
import org.meveo.model.billing.BillingAccount;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class BillingAccountImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "BILLING_ACCOUNT";
    private static final String ENTITY_NAME = "BillingAccount";

    public enum BillingAccountActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final BillingAccountApi billingAccountApi = (BillingAccountApi) getServiceInterface(BillingAccountApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(BillingAccountActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                BillingAccountActionEnum action = BillingAccountActionEnum.valueOf(ocAction);

                BillingAccountDto billingAccountDto = validateAndGetBillingAccount(recordMap);

                if (BillingAccountActionEnum.CREATE.equals(action)) {
                    setBillingAccountValues(recordMap, billingAccountDto);
                    BillingAccount billingAccount = billingAccountApi.create(billingAccountDto);
                    this.setCFValues(recordMap, billingAccount, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private BillingAccountDto validateAndGetBillingAccount(Map<String, Object> recordMap) {
        BillingAccountDto billingAccountDto;

        String customerAccountCode = (String) recordMap.get("OC_CUSTOMERACCOUNT_CODE");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        String billingAccountCode = (String) recordMap.get("OC_BILLINGACCOUNT_CODE");
        if (billingAccountCode.isEmpty()) {
            throw new ValidationException("billing_account_code is required");
        }

        billingAccountDto = new BillingAccountDto();

        return billingAccountDto;
    }

    private void setBillingAccountValues(Map<String, Object> recordMap, BillingAccountDto billingAccountDto) throws ParseException {
        billingAccountDto.setCustomerAccount((String) recordMap.get("OC_CUSTOMERACCOUNT_CODE"));
        billingAccountDto.setCode((String) recordMap.get("OC_BILLINGACCOUNT_CODE"));
        billingAccountDto.setDescription((String) recordMap.get("OC_BILLINGACCOUNT_DESCRIPTION"));
        billingAccountDto.setBillingCycle((String) recordMap.get("OC_BILLINGACCOUNT_BC"));
        billingAccountDto.setCountry((String) recordMap.get("OC_BILLINGACCOUNT_COUNTRY"));
        billingAccountDto.setLanguage((String) recordMap.get("OC_BILLINGACCOUNT_LANGUAGE"));
        billingAccountDto.setTradingCurrency((String) recordMap.get("OC_BILLINGACCOUNT_CURRENCY"));
        billingAccountDto.setTaxCategoryCode((String) recordMap.get("OC_BILLINGACCOUNT_TAXCAT"));
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);
        String subscriptionDate = (String) recordMap.get("OC_BA_DATE");
        try {
            billingAccountDto.setSubscriptionDate(StringUtils.isEmpty(subscriptionDate) ? null : dateFormat.parse(subscriptionDate));
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for initial agreement date. Please use 'dd/MM/yyyy'");
        }
        billingAccountDto.setRegistrationNo((String) recordMap.get("OC_BA_REGISTRATION"));
        billingAccountDto.setVatNo((String) recordMap.get("OC_BA_TVANUMBER"));

        NameDto name = new NameDto();
        name.setTitle((String) recordMap.get("OC_BA_TITLE"));
        name.setFirstName((String) recordMap.get("OC_BA_FNAME"));
        name.setLastName((String) recordMap.get("OC_BA_LNAME"));
        billingAccountDto.setName(name);

        TitleDto titleDto = new TitleDto();
        if(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X")) {
            titleDto.setIsCompany(true);
            titleDto.setCode((String) recordMap.get("OC_BA_TITLE"));
            billingAccountDto.setLegalEntityType(titleDto);
        }

        billingAccountDto.setIsCompany(Objects.equals(recordMap.get("OC_BA_ORGANIZATION"), "X"));
        billingAccountDto.setElectronicBilling(Objects.equals(recordMap.get("OC_BA_EBILL"), "X"));
        billingAccountDto.setEmail((String) recordMap.get("OC_BA_EBILLEMAIL"));
        billingAccountDto.setCcedEmails((String) recordMap.get("OC_BA_EBILLEMAILS"));

        AddressDto addressDto = new AddressDto();
        addressDto.setAddress1((String) recordMap.get("OC_BA_ADDRESS"));
        addressDto.setZipCode((String) recordMap.get("OC_BA_ZIPCODE"));
        addressDto.setCity((String) recordMap.get("OC_BA_CITY"));
        addressDto.setState((String) recordMap.get("OC_BA_STATE"));
        addressDto.setCountry((String) recordMap.get("OC_BA_COUNTRY"));
        billingAccountDto.setAddress(addressDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.BillingAccountImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-78_20221010" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.EnumUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.SubscriptionDto;
import org.meveo.api.dto.billing.SubscriptionRenewalDto;
import org.meveo.model.billing.*;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.stream.Stream;


public class SubscriptionMassImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SUBSCRIPTION";
    private static final String ENTITY_NAME = "Subscription";

    public enum SubscriptionActionEnum {
        CREATE, UPDATE, SUSPEND, RESUME, ACTIVATE, TERMINATE
    }

    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(SubscriptionActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                SubscriptionActionEnum action = SubscriptionActionEnum.valueOf(OC_ACTION);

                SubscriptionDto subscriptionDto = validateAndGetSubscription(action, recordMap);

                if (SubscriptionActionEnum.CREATE.equals(action)) {
                    setSubscriptionValues(recordMap, subscriptionDto);
                    Subscription subscription = subscriptionApi.create(subscriptionDto);
                    this.setCFValues(recordMap, subscription, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private SubscriptionDto validateAndGetSubscription(SubscriptionActionEnum action, Map<String, Object> recordMap) {
        SubscriptionDto subscriptionDto = null;

        String subscriptionCode = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (subscriptionCode.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String useraccountCode = (String) recordMap.get("OC_USERACCOUNT_CODE");
        if (useraccountCode.isEmpty()) {
            throw new ValidationException("useraccount_code is required");
        }

        subscriptionDto = new SubscriptionDto();

        return subscriptionDto;
    }

    private void setSubscriptionValues(Map<String, Object> recordMap, SubscriptionDto subscriptionDto) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        String OC_subscription_date = (String) recordMap.get("OC_SUBSCRIPTION_DATE");
        String OC_endagreement_date = (String) recordMap.get("OC_ENDAGREEMENTDATE");
        String OC_termination_date = (String) recordMap.get("OC_TERMINATIONDATE");

        String OC_sub_inittermtype = (String) recordMap.get("OC_SUB_INITTERMTYPE");
        String OC_sub_durationtype = (String) recordMap.get("OC_SUB_DURATIONTYPE");
        Integer OC_sub_inittermlength = ((String) recordMap.get("OC_SUB_INITTERMLENGTH")).isEmpty() ? null
                : Integer.parseInt( (String) recordMap.get("OC_SUB_INITTERMLENGTH"));

        String OC_sub_inittermunit = (String) recordMap.get("OC_SUB_INITTERMUNIT");
        String OC_sub_endtermaction = (String) recordMap.get("OC_SUB_ENDTERMACTION");

        try {
            Date subscriptionDate = StringUtils.isEmpty(OC_subscription_date) ? null : dateFormat.parse(OC_subscription_date);
            subscriptionDto.setSubscriptionDate(subscriptionDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for subscription date. Please use 'dd/MM/yyyy'");
        }
        try {
            Date endagreementDate = StringUtils.isEmpty(OC_endagreement_date) ? null : dateFormat.parse(OC_endagreement_date);
            subscriptionDto.setEndAgreementDate(endagreementDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for end agreement date. Please use 'dd/MM/yyyy'");
        }
        try {
            Date terminationDate = StringUtils.isEmpty(OC_termination_date) ? null : dateFormat.parse(OC_termination_date);
            subscriptionDto.setTerminationDate(terminationDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for termination date. Please use 'dd/MM/yyyy'");
        }

        SubscriptionRenewal.InitialTermTypeEnum initialTermTypeEnum = (!EnumUtils.isValidEnum(SubscriptionRenewal.InitialTermTypeEnum.class, OC_sub_inittermtype)) ? null
                : SubscriptionRenewal.InitialTermTypeEnum.valueOf(OC_sub_inittermtype);
        SubscriptionRenewal.RenewalPeriodUnitEnum renewalPeriodUnit = (!EnumUtils.isValidEnum(SubscriptionRenewal.RenewalPeriodUnitEnum.class, OC_sub_durationtype)) ? null
                : SubscriptionRenewal.RenewalPeriodUnitEnum.valueOf(OC_sub_durationtype);

        SubscriptionRenewal.RenewalPeriodUnitEnum initialyActiveForUnit = (!EnumUtils.isValidEnum(SubscriptionRenewal.RenewalPeriodUnitEnum.class, OC_sub_inittermunit)) ? null
                : SubscriptionRenewal.RenewalPeriodUnitEnum.valueOf(OC_sub_inittermunit);
        SubscriptionRenewal.EndOfTermActionEnum endOfTermAction = (!EnumUtils.isValidEnum(SubscriptionRenewal.EndOfTermActionEnum.class, OC_sub_endtermaction)) ? null
                : SubscriptionRenewal.EndOfTermActionEnum.valueOf(OC_sub_endtermaction);
        String terminationReason = StringUtils.isEmpty((String) recordMap.get("OC_SUB_TERMINATIONREASON")) ? null : ((String) recordMap.get("OC_SUB_TERMINATIONREASON"));

        SubscriptionRenewalDto subscriptionRenewalDto = new SubscriptionRenewalDto();
        subscriptionRenewalDto.setInitialTermType(initialTermTypeEnum);
        subscriptionRenewalDto.setRenewForUnit(renewalPeriodUnit);
        subscriptionRenewalDto.setInitialyActiveFor(OC_sub_inittermlength);
        subscriptionRenewalDto.setInitialyActiveForUnit(initialyActiveForUnit);
        subscriptionRenewalDto.setEndOfTermAction(endOfTermAction);
        subscriptionRenewalDto.setTerminationReasonCode(terminationReason);

        subscriptionDto.setUserAccount((String) recordMap.get("OC_USERACCOUNT_CODE"));
        subscriptionDto.setCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        subscriptionDto.setStatus(SubscriptionStatusEnum.valueOf((String) recordMap.get("OC_STATUS")));
        subscriptionDto.setDescription((String) recordMap.get("OC_SUBSCRIPTION_DESCRIPTION"));
        subscriptionDto.setOfferTemplate((String) recordMap.get("OC_OFFER_CODE"));
        subscriptionDto.setSeller((String) recordMap.get("OC_SELLER_CODE"));
        subscriptionDto.setTerminationReason(terminationReason);
        subscriptionDto.setBillingCycle((String) recordMap.get("OC_SUB_BC"));

        subscriptionDto.setRenewalRule(subscriptionRenewalDto);
        subscriptionDto.setElectronicBilling(recordMap.get("OC_SUB_EBILL").toString().equals("X"));
        subscriptionDto.setEmail((String) recordMap.get("OC_SUB_EBILLEMAIL"));
        subscriptionDto.setCcedEmails((String) recordMap.get("OC_SUB_EBILLEMAILS"));

    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.SubscriptionMassImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-72_20221011" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.cpq.ProductToInstantiateDto;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

public class ServiceInstanceImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SERVICE_INSTANCE";
    private static final String ENTITY_NAME = "ServiceInstance";

    public enum ServiceInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(ServiceInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

                ServiceInstance serviceInstance = validateAndGetServiceInstance(action, recordMap);

                if (ServiceInstanceActionEnum.CREATE.equals(action)) {
                    setServiceInstanceValues(recordMap, serviceInstance);
                    this.setCFValues(recordMap, serviceInstance, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private ServiceInstance validateAndGetServiceInstance(ServiceInstanceActionEnum action, Map<String, Object> recordMap) {
        ServiceInstance serviceInstance = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SI_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        serviceInstance = new ServiceInstance();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return serviceInstance;
    }

    private void setServiceInstanceValues(Map<String, Object> recordMap, ServiceInstance serviceInstance) throws ParseException {
        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);

        serviceInstance.setCode((String) recordMap.get("OC_SI_CODE"));
        serviceInstance.setSubscription(subscription);
        serviceInstance.setDescription((String) recordMap.get("OC_SI_DESC"));

        // Instantiate products
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        String OC_product_deliv_dt = (String) recordMap.get("OC_PRODUCT_DELIV_DT");
        ProductToInstantiateDto productToInstantiateDto = new ProductToInstantiateDto();
        productToInstantiateDto.setProductCode((String) recordMap.get("OC_PRODUCT_CODE"));
        productToInstantiateDto.setQuantity(new BigDecimal((String) recordMap.get("OC_PRODUCT_QTY")));
        try {
            Date deliveryDate = StringUtils.isEmpty(OC_product_deliv_dt) ? null : dateFormat.parse(OC_product_deliv_dt);
            productToInstantiateDto.setDeliveryDate(deliveryDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for delivery date. Please use 'dd/MM/yyyy'");
        }

        List<ProductToInstantiateDto> products = new ArrayList<>();
        products.add(productToInstantiateDto);

        subscriptionApi.instanciateProduct(OC_subscription_code, products);

    }

}
				]]>
			</column>
			<where>code='org.meveo.service.script.ServiceInstanceImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-79_20221011" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.AttributeInstanceDto;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.model.billing.AttributeInstance;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.model.cpq.Attribute;
import org.meveo.model.cpq.enums.AttributeTypeEnum;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.cpq.AttributeService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class AttributeInstanceImportScript extends GenericMassImportScript {
    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "ATTRIBUTE_INSTANCE";
    private static final String ENTITY_NAME = "AttributeInstance";

    public enum AttributeInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final AttributeService attributeService = (AttributeService) getServiceInterface("AttributeService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");

    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());


    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(AttributeInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                AttributeInstanceActionEnum action = AttributeInstanceActionEnum.valueOf(OC_ACTION);

                AttributeInstanceDto attributeInstanceDto = validateAndGetAttributeInstance(action, recordMap);

                AttributeInstance attributeInstance = new AttributeInstance();

                if (AttributeInstanceActionEnum.CREATE.equals(action)) {
                    setAttributeInstanceValues(recordMap, attributeInstance);
                    this.setCFValues(recordMap, attributeInstance, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }


    private AttributeInstanceDto validateAndGetAttributeInstance(AttributeInstanceActionEnum action, Map<String, Object> recordMap) {
        AttributeInstanceDto attributeInstanceDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SERVICE_INSTANCE_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        attributeInstanceDto = new AttributeInstanceDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        ServiceInstance serviceInstance = serviceInstanceService.findByCode(OC_si_code);
        if (serviceInstance == null) {
            throw new ValidationException("no service instance found for code: '" + OC_si_code + "'");
        }

        return attributeInstanceDto;
    }


    private void setAttributeInstanceValues(Map<String, Object> recordMap, AttributeInstance attributeInstance) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        Attribute attribute = attributeService.findByCode((String) recordMap.get("OC_SI_ATTRIB_CODE"));
        AttributeTypeEnum type = attribute.getAttributeType();

        attributeInstance.setAttribute(attribute);

        ServiceInstance serviceInstance = serviceInstanceService.findByCode((String) recordMap.get("OC_SERVICE_INSTANCE_CODE"));
        List<AttributeInstanceDto> attributeInstances = new ArrayList<>();
        for(AttributeInstance ai : serviceInstance.getAttributeInstances()) {
            attributeInstances.add( new AttributeInstanceDto(ai, null));
        }

        switch (type) {
            case LIST_TEXT:
            case TEXT:
            case EMAIL:
            case INFO:
            case PHONE:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                attributeInstance.setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                break;
            case TOTAL :
            case COUNT :
            case NUMERIC :
            case INTEGER:
            case LIST_NUMERIC:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                attributeInstance.setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                break;
            case DATE:
                try {
                    attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                            .findFirst()
                            .get().setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                                    : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                    attributeInstance.setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                            : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                }catch (ParseException e) {
                    throw new ValidationException("Incorrect date format for "+attribute.getCode()+". Please use dd/MM/yyyy");
                }

                break;
            case BOOLEAN:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setStringValue(Objects.equals(recordMap.get("OC_SI_ATTRIB_VALUE"), "X") ? "true" : "false");
                attributeInstance.setStringValue(Objects.equals(recordMap.get("OC_SI_ATTRIB_VALUE"), "X") ? "true" : "false");
                break;
        }

        // ATTRIBUTE INSTANTIIATION
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();

        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());

        requestDto.addService(serviceDto);

        requestDto.setAttributeInstances(attributeInstances);

        subscriptionApi.updateServiceInstance(requestDto);

    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.AttributeInstanceImportScript'</where>
		</update>
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.dto.account.BankCoordinatesDto;
import org.meveo.api.dto.payment.PaymentMethodDto;
import org.meveo.api.payment.PaymentMethodApi;
import org.meveo.model.payments.CreditCardTypeEnum;
import org.meveo.model.payments.PaymentMethod;
import org.meveo.model.payments.PaymentMethodEnum;
import org.meveo.service.payments.impl.PaymentMethodService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class PaymentMethodImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "PAYMENT_METHOD";
    private static final String ENTITY_NAME = "PaymentMethod";

    public enum PaymentMethodActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface("PaymentMethodService");
    private final PaymentMethodApi paymentMethodApi = (PaymentMethodApi) getServiceInterface(PaymentMethodApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {

        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String ocEntity = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(ocEntity)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + ocEntity);
                }
                // VALIDATE ACTION
                String ocAction = (String) recordMap.get("OC_ACTION");
                if (Stream.of(PaymentMethodActionEnum.values()).noneMatch(e -> e.toString().equals(ocAction))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + ocAction);
                }

                PaymentMethodActionEnum action = PaymentMethodActionEnum.valueOf(ocAction);

                PaymentMethodDto paymentMethodDto = validateAndGetPaymentMethod(recordMap);


                if (action == PaymentMethodActionEnum.CREATE) {
                    setPaymentMethodValues(recordMap, paymentMethodDto);
                    Long paymentMethodId = paymentMethodApi.create(paymentMethodDto);
                    PaymentMethod paymentMethod = paymentMethodService.findById(paymentMethodId);
                    this.setCFValues(recordMap, paymentMethod, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private PaymentMethodDto validateAndGetPaymentMethod(Map<String, Object> recordMap) {
        PaymentMethodDto paymentMethodDto = new PaymentMethodDto();

        String customerAccountCode = (String) recordMap.get("OC_PMT_CA");
        if (customerAccountCode.isEmpty()) {
            throw new ValidationException("customer_account_code is required");
        }

        return paymentMethodDto;
    }

    private void setPaymentMethodValues(Map<String, Object> recordMap, PaymentMethodDto paymentMethodDto) throws ParseException {
        PaymentMethodEnum ocPaymentMethodType = PaymentMethodEnum.valueOf((String) recordMap.get("OC_PMT_TYPE"));
        paymentMethodDto.setPaymentMethodType(ocPaymentMethodType);
        paymentMethodDto.setPreferred(Objects.equals(recordMap.get("OC_PMT_PREFERRED"), "X"));
        paymentMethodDto.setAlias((String) recordMap.get("OC_PMT_ALIAS"));
        paymentMethodDto.setCustomerAccountCode((String) recordMap.get("OC_PMT_CA"));
        if (!((String) recordMap.get("OC_PMT_cardType")).isEmpty()) {
            paymentMethodDto.setCardType(CreditCardTypeEnum.valueOf((String) recordMap.get("OC_PMT_cardType")));
        }
        if (!((String) recordMap.get("OC_PMT_monthExpiration")).isEmpty()) {
            paymentMethodDto.setMonthExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_monthExpiration")));
        }
        if (!((String) recordMap.get("OC_PMT_yearExpiration")).isEmpty()) {
            paymentMethodDto.setYearExpiration(Integer.parseInt((String) recordMap.get("OC_PMT_yearExpiration")));
        }
        paymentMethodDto.setTokenId((String) recordMap.get("OC_PMT_tokenId"));
        paymentMethodDto.setCardNumber((String) recordMap.get("OC_PMT_cardNumber"));
        paymentMethodDto.setIssueNumber((String) recordMap.get("OC_PMT_issueNumber"));
        paymentMethodDto.setUserId((String) recordMap.get("OC_PMT_userId"));
        paymentMethodDto.setEmail((String) recordMap.get("OC_PMT_email"));
        paymentMethodDto.setOwner((String) recordMap.get("OC_PMT_accountOwner"));
        if (!((String) recordMap.get("OC_PMT_referenceDocumentCode")).isEmpty()) {
            paymentMethodDto.setReferenceDocumentCode((String) recordMap.get("OC_PMT_referenceDocumentCode"));
        }

        if (ocPaymentMethodType == PaymentMethodEnum.DIRECTDEBIT) {
            BankCoordinatesDto bankCoordinatesDto = new BankCoordinatesDto();
            bankCoordinatesDto.setBankCode((String) recordMap.get("OC_PMT_bankCode"));
            bankCoordinatesDto.setBranchCode((String) recordMap.get("OC_PMT_branchCode"));
            bankCoordinatesDto.setAccountNumber((String) recordMap.get("OC_PMT_accountNumber"));
            bankCoordinatesDto.setKey((String) recordMap.get("OC_PMT_key"));
            bankCoordinatesDto.setIban((String) recordMap.get("OC_PMT_iban"));
            bankCoordinatesDto.setBic((String) recordMap.get("OC_PMT_bic"));
            bankCoordinatesDto.setAccountOwner((String) recordMap.get("OC_PMT_accountOwner"));
            bankCoordinatesDto.setBankName((String) recordMap.get("OC_PMT_bankName"));
            bankCoordinatesDto.setBankId((String) recordMap.get("OC_PMT_bankId"));
            bankCoordinatesDto.setIssuerNumber((String) recordMap.get("OC_PMT_issuerNumber"));
            bankCoordinatesDto.setIssuerName((String) recordMap.get("OC_PMT_issuerName"));
            bankCoordinatesDto.setIcs((String) recordMap.get("OC_PMT_ics"));
            paymentMethodDto.setBankCoordinates(bankCoordinatesDto);
        }

        paymentMethodDto.setMandateIdentification((String) recordMap.get("OC_PMT_mandateIdentification"));

        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);
        String ocPaymentMethodMandateDate = (String) recordMap.get("OC_PMT_mandateDate");
        try {
            Date mandateDate = StringUtils.isEmpty(ocPaymentMethodMandateDate) ? null : dateFormat.parse(ocPaymentMethodMandateDate);
            paymentMethodDto.setMandateDate(mandateDate);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect date format for mandate date. Please use dd/MM/yyyy");
        }

    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.PaymentMethodImportScript'</where>
		</update>
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.account.AccessApi;
import org.meveo.api.dto.account.AccessDto;
import org.meveo.model.billing.Subscription;
import org.meveo.model.mediation.Access;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.stream.Stream;

public class AccessPointImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "ACCESS_POINT";
    private static final String ENTITY_NAME = "Access";

    public enum AccessPointActionEnum {
        CREATE, UPDATE, DELETE
    }


    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final AccessApi accessApi = (AccessApi) getServiceInterface(AccessApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(AccessPointActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                AccessPointActionEnum action = AccessPointActionEnum.valueOf(OC_ACTION);

                AccessDto accessDto = validateAndGetAccessPoint(action, recordMap);

                if (AccessPointActionEnum.CREATE.equals(action)) {
                    setAccessValues(recordMap, accessDto);
                    Access access = accessApi.create(accessDto);
                    this.setCFValues(recordMap, access, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }


    private AccessDto validateAndGetAccessPoint(AccessPointActionEnum action, Map<String, Object> recordMap) {
        AccessDto accessDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        accessDto = new AccessDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return accessDto;
    }


    private void setAccessValues(Map<String, Object> recordMap, AccessDto accessDto) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);
        String OC_accessPoint_startDate = (String) recordMap.get("OC_ACCESSPOINT_STARTDATE");
        String OC_accessPoint_endDate = (String) recordMap.get("OC_ACCESSPOINT_ENDDATE");
        try {
            Date startDate = StringUtils.isEmpty(OC_accessPoint_startDate) ? null : dateFormat.parse(OC_accessPoint_startDate);
            accessDto.setStartDate(startDate);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect date format for start date. Please use dd/MM/yyyy");
        }

        try {
            Date endDate = StringUtils.isEmpty(OC_accessPoint_endDate) ? null : dateFormat.parse(OC_accessPoint_endDate);
            accessDto.setEndDate(endDate);
        } catch (ParseException e) {
            throw new ValidationException("Incorrect date format for end date. Please use dd/MM/yyyy");
        }

        accessDto.setSubscription((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        accessDto.setCode((String) recordMap.get("OC_ACCESSPOINT_CODE"));
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.AccessPointImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-79_20221013" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.api.dto.cpq.ProductToInstantiateDto;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

public class ServiceInstanceImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SERVICE_INSTANCE";
    private static final String ENTITY_NAME = "ServiceInstance";

    public enum ServiceInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(ServiceInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

                ProductToInstantiateDto productToInstantiateDto = validateAndGetServiceInstance(action, recordMap);

                if (ServiceInstanceActionEnum.CREATE.equals(action)) {
                    setServiceInstanceValues(recordMap, productToInstantiateDto);

                    Subscription subscription = subscriptionService.findByCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
                    ServiceInstance si = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);
                    this.setCFValues(recordMap, si, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private ProductToInstantiateDto validateAndGetServiceInstance(ServiceInstanceActionEnum action, Map<String, Object> recordMap) {
        ProductToInstantiateDto productToInstantiateDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SI_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        productToInstantiateDto = new ProductToInstantiateDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return productToInstantiateDto;
    }

    private void setServiceInstanceValues(Map<String, Object> recordMap, ProductToInstantiateDto productToInstantiateDto) throws ParseException {
        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);

        // Instantiate products
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        String OC_product_deliv_dt = (String) recordMap.get("OC_PRODUCT_DELIV_DT");
        productToInstantiateDto.setProductCode((String) recordMap.get("OC_PRODUCT_CODE"));
        productToInstantiateDto.setQuantity(new BigDecimal((String) recordMap.get("OC_PRODUCT_QTY")));
        try {
            Date deliveryDate = StringUtils.isEmpty(OC_product_deliv_dt) ? null : dateFormat.parse(OC_product_deliv_dt);
            productToInstantiateDto.setDeliveryDate(deliveryDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for delivery date. Please use 'dd/MM/yyyy'");
        }

        List<ProductToInstantiateDto> products = new ArrayList<>();
        products.add(productToInstantiateDto);

        subscriptionApi.instanciateProduct(OC_subscription_code, products);

        // Save SI description
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();

        ServiceInstance serviceInstance = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);
        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());
        serviceDto.setDescription((String) recordMap.get("OC_SI_DESC"));

        requestDto.addService(serviceDto);

        subscriptionApi.updateServiceInstance(requestDto);

    }

}
				]]>
			</column>
			<where>code='org.meveo.service.script.ServiceInstanceImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-79_20221014" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.AttributeInstanceDto;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.api.dto.cpq.ProductToInstantiateDto;
import org.meveo.model.billing.AttributeInstance;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ServiceInstanceImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SERVICE_INSTANCE";
    private static final String ENTITY_NAME = "ServiceInstance";

    public enum ServiceInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(ServiceInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

                ProductToInstantiateDto productToInstantiateDto = validateAndGetServiceInstance(action, recordMap);

                if (ServiceInstanceActionEnum.CREATE.equals(action)) {
                    setServiceInstanceValues(recordMap, productToInstantiateDto);

                    Subscription subscription = subscriptionService.findByCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
                    ServiceInstance si = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);
                    this.setCFValues(recordMap, si, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private ProductToInstantiateDto validateAndGetServiceInstance(ServiceInstanceActionEnum action, Map<String, Object> recordMap) {
        ProductToInstantiateDto productToInstantiateDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SI_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        productToInstantiateDto = new ProductToInstantiateDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return productToInstantiateDto;
    }

    private void setServiceInstanceValues(Map<String, Object> recordMap, ProductToInstantiateDto productToInstantiateDto) throws ParseException {
        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);

        // Instantiate products
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        String OC_product_deliv_dt = (String) recordMap.get("OC_PRODUCT_DELIV_DT");
        productToInstantiateDto.setProductCode((String) recordMap.get("OC_PRODUCT_CODE"));
        productToInstantiateDto.setQuantity(new BigDecimal((String) recordMap.get("OC_PRODUCT_QTY")));
        try {
            Date deliveryDate = StringUtils.isEmpty(OC_product_deliv_dt) ? null : dateFormat.parse(OC_product_deliv_dt);
            productToInstantiateDto.setDeliveryDate(deliveryDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for delivery date. Please use 'dd/MM/yyyy'");
        }

        List<ProductToInstantiateDto> products = new ArrayList<>();
        products.add(productToInstantiateDto);

        subscriptionApi.instanciateProduct(OC_subscription_code, products);

        // Save SI description
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();
        ServiceInstance serviceInstance = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);

        List<AttributeInstance> attributeInstances = serviceInstance.getAttributeInstances();
        List<AttributeInstanceDto> aiDto = attributeInstances.stream().map(attribute ->
                new AttributeInstanceDto(attribute, null)).collect(Collectors.toList());

        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());
        serviceDto.setDescription((String) recordMap.get("OC_SI_DESC"));

        requestDto.addService(serviceDto);
        requestDto.setAttributeInstances(aiDto);

        subscriptionApi.updateServiceInstance(requestDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.ServiceInstanceImportScript'</where>
		</update>
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;


import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.AttributeInstanceDto;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.model.billing.AttributeInstance;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.model.cpq.Attribute;
import org.meveo.model.cpq.enums.AttributeTypeEnum;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.cpq.AttributeService;
import org.meveo.service.script.GenericMassImportScript;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;


public class AttributeInstanceImportScript extends GenericMassImportScript {
    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "ATTRIBUTE_INSTANCE";
    private static final String ENTITY_NAME = "AttributeInstance";

    public enum AttributeInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final AttributeService attributeService = (AttributeService) getServiceInterface("AttributeService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");

    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());


    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(AttributeInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                AttributeInstanceActionEnum action = AttributeInstanceActionEnum.valueOf(OC_ACTION);

                AttributeInstanceDto attributeInstanceDto = validateAndGetAttributeInstance(action, recordMap);

                AttributeInstance attributeInstance = new AttributeInstance();

                if (AttributeInstanceActionEnum.CREATE.equals(action)) {
                    setAttributeInstanceValues(recordMap, attributeInstance);
                    this.setCFValues(recordMap, attributeInstance, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }


    private AttributeInstanceDto validateAndGetAttributeInstance(AttributeInstanceActionEnum action, Map<String, Object> recordMap) {
        AttributeInstanceDto attributeInstanceDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SERVICE_INSTANCE_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        attributeInstanceDto = new AttributeInstanceDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        ServiceInstance serviceInstance = serviceInstanceService.findByCode(OC_si_code);
        if (serviceInstance == null) {
            throw new ValidationException("no service instance found for code: '" + OC_si_code + "'");
        }

        return attributeInstanceDto;
    }


    private void setAttributeInstanceValues(Map<String, Object> recordMap, AttributeInstance attributeInstance) throws ParseException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        Attribute attribute = attributeService.findByCode((String) recordMap.get("OC_SI_ATTRIB_CODE"));
        AttributeTypeEnum type = attribute.getAttributeType();

        attributeInstance.setAttribute(attribute);


        Subscription subscription = subscriptionService.findByCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceInstance serviceInstance = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_SERVICE_INSTANCE_CODE"), subscription);

        List<AttributeInstanceDto> attributeInstances = new ArrayList<>();
        for(AttributeInstance ai : serviceInstance.getAttributeInstances()) {
            attributeInstances.add( new AttributeInstanceDto(ai, null));
        }

        switch (type) {
            case LIST_TEXT:
            case TEXT:
            case EMAIL:
            case INFO:
            case PHONE:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                attributeInstance.setStringValue((String) recordMap.get("OC_SI_ATTRIB_VALUE"));
                break;
            case TOTAL :
            case COUNT :
            case NUMERIC :
            case INTEGER:
            case LIST_NUMERIC:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                attributeInstance.setDoubleValue(Double.valueOf((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                break;
            case DATE:
                try {
                    attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                            .findFirst()
                            .get().setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                                    : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                    attributeInstance.setDateValue(StringUtils.isEmpty((String) recordMap.get("OC_SI_ATTRIB_VALUE")) ? null
                            : dateFormat.parse((String) recordMap.get("OC_SI_ATTRIB_VALUE")));
                }catch (ParseException e) {
                    throw new ValidationException("Incorrect date format for "+attribute.getCode()+". Please use dd/MM/yyyy");
                }

                break;
            case BOOLEAN:
                attributeInstances.stream().filter(ai -> Objects.equals(ai.getAttributeCode(), attribute.getCode()))
                        .findFirst()
                        .get().setStringValue(Objects.equals(recordMap.get("OC_SI_ATTRIB_VALUE"), "X") ? "true" : "false");
                attributeInstance.setStringValue(Objects.equals(recordMap.get("OC_SI_ATTRIB_VALUE"), "X") ? "true" : "false");
                break;
        }

        // ATTRIBUTE INSTANTIIATION
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();

        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());

        requestDto.addService(serviceDto);
        requestDto.setAttributeInstances(attributeInstances);

        subscriptionApi.updateServiceInstance(requestDto);
    }
}
				]]>
			</column>
			<where>code='org.meveo.service.script.AttributeInstanceImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#OUTRD-95_20221027" author="HamzaBiadi">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.commons.utils.ParamBeanFactory;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.model.rating.CDR;
import org.meveo.service.medina.impl.CDRService;

import java.io.*;
import java.math.BigDecimal;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

public class CdrFlatFileImportScript extends Script {

    private static final String DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mm:ssXXX";
    private final transient ParamBeanFactory paramBeanFactory = (ParamBeanFactory) getServiceInterface(ParamBeanFactory.class.getSimpleName());
    private final transient CDRService cdrService = (CDRService) getServiceInterface(CDRService.class.getSimpleName());

    public static boolean elementExisted(Map<String, String> context, String[] header, String[] body, String element) {
        return ArrayUtils.indexOf(header, context.get(element)) >= 0
                && ArrayUtils.indexOf(header, context.get(element)) < body.length;
    }

    @Override
    public void execute(Map<String, Object> contextMethod) throws BusinessException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) contextMethod.get("JobExecutionResult");
        Map<String, String> context = (Map<String, String>) jobExecutionResult.getJobInstance().getCfValues().getValues().get("mapping");
        String pathFile = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get("pathFile");

        CDR cdr;
        String rootPathFile = getProviderRootDir() + File.separator + pathFile;
        File dir = new File(rootPathFile);

        File[] fileList = dir.listFiles();
        try {
            for(File fileInput : fileList) {
                File file = new File(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
                if (!file.getParentFile().exists()) {
                    file.getParentFile().mkdirs();
                }
                if (!file.exists()) {
                    file.createNewFile();
                }
                FileWriter rejectFile = new FileWriter(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
                FileReader fread = new FileReader(fileInput.getAbsolutePath());
                BufferedReader br = new BufferedReader(fread);
                String line = "";
                String splitBy = ";";
                String[] header = br.readLine().split(splitBy);
                while ((line = br.readLine()) != null) {
                    try {
                        cdr = new CDR();
                        String[] body = line.split(splitBy);
                        Date dateEvent = null;
                        Date dateParam1 = null;
                        Date dateParam2 = null;
                        Date dateParam3 = null;
                        Date dateParam4 = null;
                        Date dateParam5 = null;
                        boolean reject = false;
                        try {
                            dateEvent = elementExisted(context, header, body, "eventDate") && !body[ArrayUtils.indexOf(header, context.get("eventDate"))].isEmpty() ?
                                    StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("eventDate"))]) ?
                                            null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("eventDate"))])
                                    : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("eventDate") + " \n");
                            reject = true;
                        }
                        String ac = elementExisted(context, header, body, "accessCode") && !body[ArrayUtils.indexOf(header, context.get("accessCode"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("accessCode"))] : null;
                        BigDecimal quantity = elementExisted(context, header, body, "quantity") && !body[ArrayUtils.indexOf(header, context.get("quantity"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("quantity"))]) : null;
                        String parameter1 = elementExisted(context, header, body, "parameter1") && !body[ArrayUtils.indexOf(header, context.get("parameter1"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter1"))] : null;
                        String parameter2 = elementExisted(context, header, body, "parameter2") && !body[ArrayUtils.indexOf(header, context.get("parameter2"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter2"))] : null;
                        String parameter3 = elementExisted(context, header, body, "parameter3") && !body[ArrayUtils.indexOf(header, context.get("parameter3"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter3"))] : null;
                        String parameter4 = elementExisted(context, header, body, "parameter4") && !body[ArrayUtils.indexOf(header, context.get("parameter4"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter4"))] : null;
                        String parameter5 = elementExisted(context, header, body, "parameter5") && !body[ArrayUtils.indexOf(header, context.get("parameter5"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter5"))] : null;
                        String parameter6 = elementExisted(context, header, body, "parameter6") && !body[ArrayUtils.indexOf(header, context.get("parameter6"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter6"))] : null;
                        String parameter7 = elementExisted(context, header, body, "parameter7") && !body[ArrayUtils.indexOf(header, context.get("parameter7"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter7"))] : null;
                        String parameter8 = elementExisted(context, header, body, "parameter8") && !body[ArrayUtils.indexOf(header, context.get("parameter8"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter8"))] : null;
                        String parameter9 = elementExisted(context, header, body, "parameter9") && !body[ArrayUtils.indexOf(header, context.get("parameter9"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter9"))] : null;
                        String extraParameter = elementExisted(context, header, body, "extraParam") && !body[ArrayUtils.indexOf(header, context.get("extraParam"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("extraParam"))] : null;
                        try {
                            dateParam1 = elementExisted(context, header, body, "dateParam1") && !body[ArrayUtils.indexOf(header, context.get("dateParam1"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam1") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam2 = elementExisted(context, header, body, "dateParam2") && !body[ArrayUtils.indexOf(header, context.get("dateParam2"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam2") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam3 = elementExisted(context, header, body, "dateParam3") && !body[ArrayUtils.indexOf(header, context.get("dateParam3"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam3") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam4 = elementExisted(context, header, body, "dateParam4") && !body[ArrayUtils.indexOf(header, context.get("dateParam4"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam4") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam5 = elementExisted(context, header, body, "dateParam5") && !body[ArrayUtils.indexOf(header, context.get("dateParam5"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam5") + " \n");
                            reject = true;
                        }

                        BigDecimal decimalParam1 = elementExisted(context, header, body, "decimalParam1") && !body[ArrayUtils.indexOf(header, context.get("decimalParam1"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam1"))]) : null;
                        BigDecimal decimalParam2 = elementExisted(context, header, body, "decimalParam2") && !body[ArrayUtils.indexOf(header, context.get("decimalParam2"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam2"))]) : null;
                        BigDecimal decimalParam3 = elementExisted(context, header, body, "decimalParam3") && !body[ArrayUtils.indexOf(header, context.get("decimalParam3"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam3"))]) : null;
                        BigDecimal decimalParam4 = elementExisted(context, header, body, "decimalParam4") && !body[ArrayUtils.indexOf(header, context.get("decimalParam4"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam4"))]) : null;
                        BigDecimal decimalParam5 = elementExisted(context, header, body, "decimalParam5") && !body[ArrayUtils.indexOf(header, context.get("decimalParam5"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam5"))]) : null;

                        cdr.setEventDate(dateEvent);
                        cdr.setAccessCode(ac);
                        cdr.setQuantity(quantity);
                        cdr.setParameter1(parameter1);
                        cdr.setParameter2(parameter2);
                        cdr.setParameter3(parameter3);
                        cdr.setParameter4(parameter4);
                        cdr.setParameter5(parameter5);
                        cdr.setParameter6(parameter6);
                        cdr.setParameter7(parameter7);
                        cdr.setParameter8(parameter8);
                        cdr.setParameter9(parameter9);
                        cdr.setDateParam1(dateParam1);
                        cdr.setDateParam2(dateParam2);
                        cdr.setDateParam3(dateParam3);
                        cdr.setDateParam4(dateParam4);
                        cdr.setDateParam5(dateParam5);
                        cdr.setDecimalParam1(decimalParam1);
                        cdr.setDecimalParam2(decimalParam2);
                        cdr.setDecimalParam3(decimalParam3);
                        cdr.setDecimalParam4(decimalParam4);
                        cdr.setDecimalParam5(decimalParam5);
                        cdr.setExtraParameter(extraParameter);
                        if (!reject && cdr.getEventDate() != null && cdr.getQuantity() != null && cdr.getAccessCode() != null && cdr.getParameter1() != null)
                            cdrService.create(cdr);
                        else if (!reject) {
                            validateCdr(line, cdr, context, rejectFile);
                        }
                    } catch (Exception e) {
                        rejectFile.write(line + " => " + e.getMessage() + " \n");
                    }
                }
                rejectFile.close();
                br.close();
                fread.close();
                String toPath = getProviderRootDir() + File.separator
                        + "imports/cdr/flatFile/archive" + File.separator + fileInput.getName();
                Files.createDirectories(Paths.get(toPath));
                Files.move(Paths.get(fileInput.getPath()), Paths.get(toPath), StandardCopyOption.REPLACE_EXISTING);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void validateCdr(String line, CDR cdr, Map<String, String> context, FileWriter file) throws IOException {
        if (cdr.getEventDate() == null) file.write(line + " => " + context.get("eventDate") + " is required\n");
        else if (cdr.getQuantity() == null) file.write(line + " => " + context.get("quantity") + " is required\n");
        else if (cdr.getAccessCode() == null) file.write(line + " => " + context.get("accessCode") + " is required\n");
        else if (cdr.getParameter1() == null) file.write(line + " => " + context.get("parameter1") + " is required\n");

    }


    public String getProviderRootDir() {
        return paramBeanFactory.getDefaultChrootDir();
    }

}

				]]>
			</column>
			<where>code='org.meveo.service.script.CdrFlatFileImportScript'</where>
		</update>
	</changeSet>


	<changeSet id="#OUTRD-99_20221205" author="Ilham-Chafik">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.apache.commons.io.FilenameUtils;
import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.commons.utils.ParamBeanFactory;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.model.rating.CDR;
import org.meveo.service.medina.impl.CDRService;
import org.meveo.service.script.Script;

import java.io.*;
import java.math.BigDecimal;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

public class CdrFlatFileImportScript extends Script {

    private static final String DATE_FORMAT_PATTERN = "yyyy-MM-dd'T'HH:mm:ssXXX";
    private final transient ParamBeanFactory paramBeanFactory = (ParamBeanFactory) getServiceInterface(ParamBeanFactory.class.getSimpleName());
    private final transient CDRService cdrService = (CDRService) getServiceInterface(CDRService.class.getSimpleName());

    public static boolean elementExisted(Map<String, String> context, String[] header, String[] body, String element) {
        return ArrayUtils.indexOf(header, context.get(element)) >= 0
                && ArrayUtils.indexOf(header, context.get(element)) < body.length;
    }

    @Override
    public void execute(Map<String, Object> contextMethod) throws BusinessException {
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) contextMethod.get("JobExecutionResult");
        Map<String, String> context = (Map<String, String>) jobExecutionResult.getJobInstance().getCfValues().getValues().get("mapping");
        String pathFile = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get("pathFile");

        CDR cdr;
        String rootPathFile = getProviderRootDir() + File.separator + pathFile;
        File dir = new File(rootPathFile);

        File[] fileList = dir.listFiles();
        try {
            for(File fileInput : fileList) {
                if (!FilenameUtils.getExtension(fileInput.getName()).equals("csv")) {
                    continue;
                }
                File file = new File(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
                if (!file.getParentFile().exists()) {
                    file.getParentFile().mkdirs();
                }
                if (!file.exists()) {
                    file.createNewFile();
                }
                FileWriter rejectFile = new FileWriter(fileInput.getAbsolutePath().replace("input", "reject") + ".rejected");
                FileReader fread = new FileReader(fileInput.getAbsolutePath());
                BufferedReader br = new BufferedReader(fread);
                String line = "";
                String splitBy = ";";
                String[] header = br.readLine().split(splitBy);
                while ((line = br.readLine()) != null) {
                    try {
                        cdr = new CDR();
                        String[] body = line.split(splitBy);
                        Date dateEvent = null;
                        Date dateParam1 = null;
                        Date dateParam2 = null;
                        Date dateParam3 = null;
                        Date dateParam4 = null;
                        Date dateParam5 = null;
                        boolean reject = false;
                        try {
                            dateEvent = elementExisted(context, header, body, "eventDate") && !body[ArrayUtils.indexOf(header, context.get("eventDate"))].isEmpty() ?
                                    StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("eventDate"))]) ?
                                            null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("eventDate"))])
                                    : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("eventDate") + " \n");
                            reject = true;
                        }
                        String ac = elementExisted(context, header, body, "accessCode") && !body[ArrayUtils.indexOf(header, context.get("accessCode"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("accessCode"))] : null;
                        BigDecimal quantity = elementExisted(context, header, body, "quantity") && !body[ArrayUtils.indexOf(header, context.get("quantity"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("quantity"))]) : null;
                        String parameter1 = elementExisted(context, header, body, "parameter1") && !body[ArrayUtils.indexOf(header, context.get("parameter1"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter1"))] : null;
                        String parameter2 = elementExisted(context, header, body, "parameter2") && !body[ArrayUtils.indexOf(header, context.get("parameter2"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter2"))] : null;
                        String parameter3 = elementExisted(context, header, body, "parameter3") && !body[ArrayUtils.indexOf(header, context.get("parameter3"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter3"))] : null;
                        String parameter4 = elementExisted(context, header, body, "parameter4") && !body[ArrayUtils.indexOf(header, context.get("parameter4"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter4"))] : null;
                        String parameter5 = elementExisted(context, header, body, "parameter5") && !body[ArrayUtils.indexOf(header, context.get("parameter5"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter5"))] : null;
                        String parameter6 = elementExisted(context, header, body, "parameter6") && !body[ArrayUtils.indexOf(header, context.get("parameter6"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter6"))] : null;
                        String parameter7 = elementExisted(context, header, body, "parameter7") && !body[ArrayUtils.indexOf(header, context.get("parameter7"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter7"))] : null;
                        String parameter8 = elementExisted(context, header, body, "parameter8") && !body[ArrayUtils.indexOf(header, context.get("parameter8"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter8"))] : null;
                        String parameter9 = elementExisted(context, header, body, "parameter9") && !body[ArrayUtils.indexOf(header, context.get("parameter9"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("parameter9"))] : null;
                        String extraParameter = elementExisted(context, header, body, "extraParam") && !body[ArrayUtils.indexOf(header, context.get("extraParam"))].isEmpty() ? body[ArrayUtils.indexOf(header, context.get("extraParam"))] : null;
                        try {
                            dateParam1 = elementExisted(context, header, body, "dateParam1") && !body[ArrayUtils.indexOf(header, context.get("dateParam1"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam1"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam1") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam2 = elementExisted(context, header, body, "dateParam2") && !body[ArrayUtils.indexOf(header, context.get("dateParam2"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam2"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam2") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam3 = elementExisted(context, header, body, "dateParam3") && !body[ArrayUtils.indexOf(header, context.get("dateParam3"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam3"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam3") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam4 = elementExisted(context, header, body, "dateParam4") && !body[ArrayUtils.indexOf(header, context.get("dateParam4"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam4"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam4") + " \n");
                            reject = true;
                        }
                        try {
                            dateParam5 = elementExisted(context, header, body, "dateParam5") && !body[ArrayUtils.indexOf(header, context.get("dateParam5"))].isEmpty() ? StringUtils.isEmpty(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) ? null : dateFormat.parse(body[ArrayUtils.indexOf(header, context.get("dateParam5"))]) : null;
                        } catch (ParseException e) {
                            if (!reject)
                                rejectFile.write(line + " => Incorrect format date for cdr " + context.get("dateParam5") + " \n");
                            reject = true;
                        }

                        BigDecimal decimalParam1 = elementExisted(context, header, body, "decimalParam1") && !body[ArrayUtils.indexOf(header, context.get("decimalParam1"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam1"))]) : null;
                        BigDecimal decimalParam2 = elementExisted(context, header, body, "decimalParam2") && !body[ArrayUtils.indexOf(header, context.get("decimalParam2"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam2"))]) : null;
                        BigDecimal decimalParam3 = elementExisted(context, header, body, "decimalParam3") && !body[ArrayUtils.indexOf(header, context.get("decimalParam3"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam3"))]) : null;
                        BigDecimal decimalParam4 = elementExisted(context, header, body, "decimalParam4") && !body[ArrayUtils.indexOf(header, context.get("decimalParam4"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam4"))]) : null;
                        BigDecimal decimalParam5 = elementExisted(context, header, body, "decimalParam5") && !body[ArrayUtils.indexOf(header, context.get("decimalParam5"))].isEmpty() ? new BigDecimal(body[ArrayUtils.indexOf(header, context.get("decimalParam5"))]) : null;

                        cdr.setEventDate(dateEvent);
                        cdr.setAccessCode(ac);
                        cdr.setQuantity(quantity);
                        cdr.setParameter1(parameter1);
                        cdr.setParameter2(parameter2);
                        cdr.setParameter3(parameter3);
                        cdr.setParameter4(parameter4);
                        cdr.setParameter5(parameter5);
                        cdr.setParameter6(parameter6);
                        cdr.setParameter7(parameter7);
                        cdr.setParameter8(parameter8);
                        cdr.setParameter9(parameter9);
                        cdr.setDateParam1(dateParam1);
                        cdr.setDateParam2(dateParam2);
                        cdr.setDateParam3(dateParam3);
                        cdr.setDateParam4(dateParam4);
                        cdr.setDateParam5(dateParam5);
                        cdr.setDecimalParam1(decimalParam1);
                        cdr.setDecimalParam2(decimalParam2);
                        cdr.setDecimalParam3(decimalParam3);
                        cdr.setDecimalParam4(decimalParam4);
                        cdr.setDecimalParam5(decimalParam5);
                        cdr.setExtraParameter(extraParameter);
                        if (!reject && cdr.getEventDate() != null && cdr.getQuantity() != null && cdr.getAccessCode() != null && cdr.getParameter1() != null)
                            cdrService.create(cdr);
                        else if (!reject) {
                            validateCdr(line, cdr, context, rejectFile);
                        }
                    } catch (Exception e) {
                        rejectFile.write(line + " => " + e.getMessage() + " \n");
                    }
                }
                rejectFile.close();
                br.close();
                fread.close();
                String toPath = getProviderRootDir() + File.separator
                        + "imports/cdr/flatFile/archive" + File.separator + fileInput.getName();
                Files.createDirectories(Paths.get(toPath));
                Files.move(Paths.get(fileInput.getPath()), Paths.get(toPath), StandardCopyOption.REPLACE_EXISTING);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void validateCdr(String line, CDR cdr, Map<String, String> context, FileWriter file) throws IOException {
        if (cdr.getEventDate() == null) file.write(line + " => " + context.get("eventDate") + " is required\n");
        else if (cdr.getQuantity() == null) file.write(line + " => " + context.get("quantity") + " is required\n");
        else if (cdr.getAccessCode() == null) file.write(line + " => " + context.get("accessCode") + " is required\n");
        else if (cdr.getParameter1() == null) file.write(line + " => " + context.get("parameter1") + " is required\n");

    }


    public String getProviderRootDir() {
        return paramBeanFactory.getDefaultChrootDir();
    }

}
				]]>
			</column>
			<where>code='org.meveo.service.script.CdrFlatFileImportScript'</where>
		</update>
	</changeSet>

	<changeSet id="#INTRD-12677_20221230" author="aeljaouhari">
		<insert tableName="crm_provider_order_line_type">
			<column name="provider_id" valueNumeric="1" />
			<column name="order_line_type" value="CREATE" />
		</insert>
		<insert tableName="crm_provider_order_line_type">
			<column name="provider_id" valueNumeric="1" />
			<column name="order_line_type" value="AMEND" />
		</insert>
		<insert tableName="crm_provider_order_line_type">
			<column name="provider_id" valueNumeric="1" />
			<column name="order_line_type" value="TERMINATE" />
		</insert>
		<insert tableName="crm_provider_order_line_type">
			<column name="provider_id" valueNumeric="1" />
			<column name="order_line_type" value="APPLY_ONE_SHOT" />
		</insert>
	</changeSet>
	
	<changeSet id="#12132_20221219" author="HatimOUDAD">
		<sql>
		<![CDATA[
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, '0002', 'System Information et Repertoire des Entreprise et des Etablissements: SIRENE ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, '0003', 'Codification Numerique des Etablissments Financiers En Belgique ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, '0004', 'NBS/OSI NETWORK ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, '0005', 'USA FED GOV OSI NETWORK ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, '0006', 'USA DOD OSI NETWORK ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, '0007', 'Organisationsnummer ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, '0008', 'LE NUMERO NATIONAL ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, '0009', 'SIRET-CODE ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, '0010', 'Organizational Identifiers for Structured Names under ISO 9541 Part 2 ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, '0011', 'International Code Designator for the Identification of OSI-based, Amateur Radio Organizations, Network Objects and Application Services. ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, '0012', 'European Computer Manufacturers Association: ECMA ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, '0013', 'VSA FTP CODE (FTP = File Transfer Protocol) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, '0014', 'NIST/OSI Implememts'' Workshop ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, '0015', 'Electronic Data Interchange: EDI ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, '0016', 'EWOS Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, '0017', 'COMMON LANGUAGE ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, '0018', 'SNA/OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, '0019', 'Air Transport Industry Services Communications Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, '0020', 'European Laboratory for Particle Physics: CERN ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (20, 0, now(), NULL, 'opencell.admin', NULL, '0021', 'SOCIETY FOR WORLDWIDE INTERBANK FINANCIAL, TELECOMMUNICATION S.W.I.F.T. ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (21, 0, now(), NULL, 'opencell.admin', NULL, '0022', 'OSF Distributed Computing Object Identification ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (22, 0, now(), NULL, 'opencell.admin', NULL, '0023', 'Nordic University and Research Network: NORDUnet ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (23, 0, now(), NULL, 'opencell.admin', NULL, '0024', 'Digital Equipment Corporation: DEC ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (24, 0, now(), NULL, 'opencell.admin', NULL, '0025', 'OSI ASIA-OCEANIA WORKSHOP ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (25, 0, now(), NULL, 'opencell.admin', NULL, '0026', 'NATO ISO 6523 ICDE coding scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (26, 0, now(), NULL, 'opencell.admin', NULL, '0027', 'Aeronautical Telecommunications Network (ATN) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (27, 0, now(), NULL, 'opencell.admin', NULL, '0028', 'International Standard ISO 6523 ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (28, 0, now(), NULL, 'opencell.admin', NULL, '0029', 'The All-Union Classifier of Enterprises and Organisations ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (29, 0, now(), NULL, 'opencell.admin', NULL, '0030', 'AT&T/OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (30, 0, now(), NULL, 'opencell.admin', NULL, '0031', 'EDI Partner Identification Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (31, 0, now(), NULL, 'opencell.admin', NULL, '0032', 'Telecom Australia ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (32, 0, now(), NULL, 'opencell.admin', NULL, '0033', 'S G W OSI Internetwork ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (33, 0, now(), NULL, 'opencell.admin', NULL, '0034', 'Reuter Open Address Standard ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (34, 0, now(), NULL, 'opencell.admin', NULL, '0035', 'ISO 6523 - ICD ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (35, 0, now(), NULL, 'opencell.admin', NULL, '0036', 'TeleTrust Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (36, 0, now(), NULL, 'opencell.admin', NULL, '0037', 'LY-tunnus ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (37, 0, now(), NULL, 'opencell.admin', NULL, '0038', 'The Australian GOSIP Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (38, 0, now(), NULL, 'opencell.admin', NULL, '0039', 'The OZ DOD OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (39, 0, now(), NULL, 'opencell.admin', NULL, '0040', 'Unilever Group Companies ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (40, 0, now(), NULL, 'opencell.admin', NULL, '0041', 'Citicorp Global Information Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (41, 0, now(), NULL, 'opencell.admin', NULL, '0042', 'DBP Telekom Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (42, 0, now(), NULL, 'opencell.admin', NULL, '0043', 'HydroNETT ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (43, 0, now(), NULL, 'opencell.admin', NULL, '0044', 'Thai Industrial Standards Institute (TISI) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (44, 0, now(), NULL, 'opencell.admin', NULL, '0045', 'ICI Company Identification System ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (45, 0, now(), NULL, 'opencell.admin', NULL, '0046', 'FUNLOC ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (46, 0, now(), NULL, 'opencell.admin', NULL, '0047', 'BULL ODI/DSA/UNIX Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (47, 0, now(), NULL, 'opencell.admin', NULL, '0048', 'OSINZ ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (48, 0, now(), NULL, 'opencell.admin', NULL, '0049', 'Auckland Area Health ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (49, 0, now(), NULL, 'opencell.admin', NULL, '0050', 'Firmenich ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (50, 0, now(), NULL, 'opencell.admin', NULL, '0051', 'AGFA-DIS ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (51, 0, now(), NULL, 'opencell.admin', NULL, '0052', 'Society of Motion Picture and Television Engineers (SMPTE) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (52, 0, now(), NULL, 'opencell.admin', NULL, '0053', 'Migros_Network M_NETOPZ ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (53, 0, now(), NULL, 'opencell.admin', NULL, '0054', 'ISO6523 - ICDPCR ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (54, 0, now(), NULL, 'opencell.admin', NULL, '0055', 'Energy Net ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (55, 0, now(), NULL, 'opencell.admin', NULL, '0056', 'Nokia Object Identifiers (NOI) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (56, 0, now(), NULL, 'opencell.admin', NULL, '0057', 'Saint Gobain ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (57, 0, now(), NULL, 'opencell.admin', NULL, '0058', 'Siemens Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (58, 0, now(), NULL, 'opencell.admin', NULL, '0059', 'DANZNET ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (59, 0, now(), NULL, 'opencell.admin', NULL, '0060', 'Data Universal Numbering System (D-U-N-S Number) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (60, 0, now(), NULL, 'opencell.admin', NULL, '0061', 'SOFFEX OSI ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (61, 0, now(), NULL, 'opencell.admin', NULL, '0062', 'KPN OVN ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (62, 0, now(), NULL, 'opencell.admin', NULL, '0063', 'ascomOSINet ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (63, 0, now(), NULL, 'opencell.admin', NULL, '0064', 'UTC: Uniforme Transport Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (64, 0, now(), NULL, 'opencell.admin', NULL, '0065', 'SOLVAY OSI CODING ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (65, 0, now(), NULL, 'opencell.admin', NULL, '0066', 'Roche Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (66, 0, now(), NULL, 'opencell.admin', NULL, '0067', 'ZellwegerOSINet ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (67, 0, now(), NULL, 'opencell.admin', NULL, '0068', 'Intel Corporation OSI ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (68, 0, now(), NULL, 'opencell.admin', NULL, '0069', 'SITA Object Identifier Tree ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (69, 0, now(), NULL, 'opencell.admin', NULL, '0070', 'DaimlerChrysler Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (70, 0, now(), NULL, 'opencell.admin', NULL, '0071', 'LEGO /OSI NETWORK ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (71, 0, now(), NULL, 'opencell.admin', NULL, '0072', 'NAVISTAR/OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (72, 0, now(), NULL, 'opencell.admin', NULL, '0073', 'ICD Formatted ATM address ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (73, 0, now(), NULL, 'opencell.admin', NULL, '0074', 'ARINC ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (74, 0, now(), NULL, 'opencell.admin', NULL, '0075', 'Alcanet/Alcatel-Alsthom Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (75, 0, now(), NULL, 'opencell.admin', NULL, '0076', 'Sistema Italiano di Identificazione di ogetti gestito da UNINFO ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (76, 0, now(), NULL, 'opencell.admin', NULL, '0077', 'Sistema Italiano di Indirizzamento di Reti OSI Gestito da UNINFO ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (77, 0, now(), NULL, 'opencell.admin', NULL, '0078', 'Mitel terminal or switching equipment ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (78, 0, now(), NULL, 'opencell.admin', NULL, '0079', 'ATM Forum ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (79, 0, now(), NULL, 'opencell.admin', NULL, '0080', 'UK National Health Service Scheme, (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (80, 0, now(), NULL, 'opencell.admin', NULL, '0081', 'International NSAP ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (81, 0, now(), NULL, 'opencell.admin', NULL, '0082', 'Norwegian Telecommunications Authority''s, NTA''S, EDI, identifier scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (82, 0, now(), NULL, 'opencell.admin', NULL, '0083', 'Advanced Telecommunications Modules Limited, Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (83, 0, now(), NULL, 'opencell.admin', NULL, '0084', 'Athens Chamber of Commerce & Industry Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (84, 0, now(), NULL, 'opencell.admin', NULL, '0085', 'Swiss Chambers of Commerce Scheme (EDIRA) compliant ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (85, 0, now(), NULL, 'opencell.admin', NULL, '0086', 'United States Council for International Business (USCIB) Scheme, (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (86, 0, now(), NULL, 'opencell.admin', NULL, '0087', 'National Federation of Chambers of Commerce & Industry of Belgium, Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (87, 0, now(), NULL, 'opencell.admin', NULL, '0088', 'EAN Location Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (88, 0, now(), NULL, 'opencell.admin', NULL, '0089', 'The Association of British Chambers of Commerce Ltd. Scheme, (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (89, 0, now(), NULL, 'opencell.admin', NULL, '0090', 'Internet IP addressing - ISO 6523 ICD encoding ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (90, 0, now(), NULL, 'opencell.admin', NULL, '0091', 'Cisco Sysytems / OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (91, 0, now(), NULL, 'opencell.admin', NULL, '0093', 'Revenue Canada Business Number Registration (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (92, 0, now(), NULL, 'opencell.admin', NULL, '0094', 'DEUTSCHER INDUSTRIE- UND HANDELSTAG (DIHT) Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (93, 0, now(), NULL, 'opencell.admin', NULL, '0095', 'Hewlett - Packard Company Internal AM Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (94, 0, now(), NULL, 'opencell.admin', NULL, '0096', 'DANISH CHAMBER OF COMMERCE Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (95, 0, now(), NULL, 'opencell.admin', NULL, '0097', 'FTI - Ediforum Italia, (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (96, 0, now(), NULL, 'opencell.admin', NULL, '0098', 'CHAMBER OF COMMERCE TEL AVIV-JAFFA Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (97, 0, now(), NULL, 'opencell.admin', NULL, '0099', 'Siemens Supervisory Systems Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (98, 0, now(), NULL, 'opencell.admin', NULL, '0100', 'PNG_ICD Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (99, 0, now(), NULL, 'opencell.admin', NULL, '0101', 'South African Code Allocation ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (100, 0, now(), NULL, 'opencell.admin', NULL, '0102', 'HEAG ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (101, 0, now(), NULL, 'opencell.admin', NULL, '0104', 'BT - ICD Coding System ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (102, 0, now(), NULL, 'opencell.admin', NULL, '0105', 'Portuguese Chamber of Commerce and Industry Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (103, 0, now(), NULL, 'opencell.admin', NULL, '0106', 'Vereniging van Kamers van Koophandel en Fabrieken in Nederland (Association of Chambers of Commerce and Industry in the Netherlands), Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (104, 0, now(), NULL, 'opencell.admin', NULL, '0107', 'Association of Swedish Chambers of Commerce and Industry Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (105, 0, now(), NULL, 'opencell.admin', NULL, '0108', 'Australian Chambers of Commerce and Industry Scheme (EDIRA compliant) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (106, 0, now(), NULL, 'opencell.admin', NULL, '0109', 'BellSouth ICD AESA (ATM End System Address) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (107, 0, now(), NULL, 'opencell.admin', NULL, '0110', 'Bell Atlantic ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (108, 0, now(), NULL, 'opencell.admin', NULL, '0111', 'Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (109, 0, now(), NULL, 'opencell.admin', NULL, '0112', 'ISO register for Standards producing Organizations ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (110, 0, now(), NULL, 'opencell.admin', NULL, '0113', 'OriginNet ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (111, 0, now(), NULL, 'opencell.admin', NULL, '0114', 'Check Point Software Technologies ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (112, 0, now(), NULL, 'opencell.admin', NULL, '0115', 'Pacific Bell Data Communications Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (113, 0, now(), NULL, 'opencell.admin', NULL, '0116', 'PSS Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (114, 0, now(), NULL, 'opencell.admin', NULL, '0117', 'STENTOR-ICD CODING SYSTEM ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (115, 0, now(), NULL, 'opencell.admin', NULL, '0118', 'ATM-Network ZN''96 ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (116, 0, now(), NULL, 'opencell.admin', NULL, '0119', 'MCI / OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (117, 0, now(), NULL, 'opencell.admin', NULL, '0120', 'Advantis ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (118, 0, now(), NULL, 'opencell.admin', NULL, '0121', 'Affable Software Data Interchange Codes ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (119, 0, now(), NULL, 'opencell.admin', NULL, '0122', 'BB-DATA GmbH ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (120, 0, now(), NULL, 'opencell.admin', NULL, '0123', 'BASF Company ATM-Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (121, 0, now(), NULL, 'opencell.admin', NULL, '0124', 'IOTA Identifiers for Organizations for Telecommunications Addressing using the ICD system format defined in ISO/IEC 8348 ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (122, 0, now(), NULL, 'opencell.admin', NULL, '0125', 'Henkel Corporate Network (H-Net) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (123, 0, now(), NULL, 'opencell.admin', NULL, '0126', 'GTE/OSI Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (124, 0, now(), NULL, 'opencell.admin', NULL, '0127', 'Dresdner Bank Corporate Network ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (125, 0, now(), NULL, 'opencell.admin', NULL, '0128', 'BCNR (Swiss Clearing Bank Number) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (126, 0, now(), NULL, 'opencell.admin', NULL, '0129', 'BPI (Swiss Business Partner Identification) code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (127, 0, now(), NULL, 'opencell.admin', NULL, '0130', 'Directorates of the European Commission ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (128, 0, now(), NULL, 'opencell.admin', NULL, '0131', 'Code for the Identification of National Organizations ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (129, 0, now(), NULL, 'opencell.admin', NULL, '0132', 'Certicom Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (130, 0, now(), NULL, 'opencell.admin', NULL, '0133', 'TC68 OID ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (131, 0, now(), NULL, 'opencell.admin', NULL, '0134', 'Infonet Services Corporation ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (132, 0, now(), NULL, 'opencell.admin', NULL, '0135', 'SIA Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (133, 0, now(), NULL, 'opencell.admin', NULL, '0136', 'Cable & Wireless Global ATM End-System Address Plan ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (134, 0, now(), NULL, 'opencell.admin', NULL, '0137', 'Global AESA scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (135, 0, now(), NULL, 'opencell.admin', NULL, '0138', 'France Telecom ATM End System Address Plan ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (136, 0, now(), NULL, 'opencell.admin', NULL, '0139', 'Savvis Communications AESA:. ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (137, 0, now(), NULL, 'opencell.admin', NULL, '0140', 'Toshiba Organizations, Partners, And Suppliers'' (TOPAS) Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (138, 0, now(), NULL, 'opencell.admin', NULL, '0141', 'NATO Commercial and Government Entity system ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (139, 0, now(), NULL, 'opencell.admin', NULL, '0142', 'SECETI Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (140, 0, now(), NULL, 'opencell.admin', NULL, '0143', 'EINESTEINet AG ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (141, 0, now(), NULL, 'opencell.admin', NULL, '0144', 'DoDAAC (Department of Defense Activity Address Code) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (142, 0, now(), NULL, 'opencell.admin', NULL, '0145', 'DGCP (Direction Générale de la Comptabilité Publique)administrative accounting identification scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (143, 0, now(), NULL, 'opencell.admin', NULL, '0146', 'DGI (Direction Générale des Impots) code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (144, 0, now(), NULL, 'opencell.admin', NULL, '0147', 'Standard Company Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (145, 0, now(), NULL, 'opencell.admin', NULL, '0148', 'ITU (International Telecommunications Union)Data Network Identification Codes (DNIC) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (146, 0, now(), NULL, 'opencell.admin', NULL, '0149', 'Global Business Identifier ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (147, 0, now(), NULL, 'opencell.admin', NULL, '0150', 'Madge Networks Ltd- ICD ATM Addressing Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (148, 0, now(), NULL, 'opencell.admin', NULL, '0151', 'Australian Business Number (ABN) Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (149, 0, now(), NULL, 'opencell.admin', NULL, '0152', 'Edira Scheme Identifier Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (150, 0, now(), NULL, 'opencell.admin', NULL, '0153', 'Concert Global Network Services ICD AESA ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (151, 0, now(), NULL, 'opencell.admin', NULL, '0154', 'Identification number of economic subjects: (ICO) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (152, 0, now(), NULL, 'opencell.admin', NULL, '0155', 'Global Crossing AESA (ATM End System Address) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (153, 0, now(), NULL, 'opencell.admin', NULL, '0156', 'AUNA ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (154, 0, now(), NULL, 'opencell.admin', NULL, '0157', 'ATM interconnection with the Dutch KPN Telecom ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (155, 0, now(), NULL, 'opencell.admin', NULL, '0158', 'Identification number of economic subject (ICO) Act on State Statistics of 29 November 2''001, § 27 ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (156, 0, now(), NULL, 'opencell.admin', NULL, '0159', 'ACTALIS Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (157, 0, now(), NULL, 'opencell.admin', NULL, '0160', 'GTIN - Global Trade Item Number ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (158, 0, now(), NULL, 'opencell.admin', NULL, '0161', 'ECCMA Open Technical Directory ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (159, 0, now(), NULL, 'opencell.admin', NULL, '0162', 'CEN/ISSS Object Identifier Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (160, 0, now(), NULL, 'opencell.admin', NULL, '0163', 'US-EPA Facility Identifier ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (161, 0, now(), NULL, 'opencell.admin', NULL, '0164', 'TELUS Corporation ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (162, 0, now(), NULL, 'opencell.admin', NULL, '0165', 'FIEIE Object identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (163, 0, now(), NULL, 'opencell.admin', NULL, '0166', 'Swissguide Identifier Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (164, 0, now(), NULL, 'opencell.admin', NULL, '0167', 'Priority Telecom ATM End System Address Plan ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (165, 0, now(), NULL, 'opencell.admin', NULL, '0168', 'Vodafone Ireland OSI Addressing ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (166, 0, now(), NULL, 'opencell.admin', NULL, '0169', 'Swiss Federal Business Identification Number. Central Business names Index (zefix) Identification Number ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (167, 0, now(), NULL, 'opencell.admin', NULL, '0170', 'Teikoku Company Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (168, 0, now(), NULL, 'opencell.admin', NULL, '0171', 'Luxembourg CP & CPS (Certification Policy and Certification Practice Statement) Index ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (169, 0, now(), NULL, 'opencell.admin', NULL, '0172', 'Project Group “Lists of Properties” (PROLIST®) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (170, 0, now(), NULL, 'opencell.admin', NULL, '0173', 'eCI@ss ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (171, 0, now(), NULL, 'opencell.admin', NULL, '0174', 'StepNexus ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (172, 0, now(), NULL, 'opencell.admin', NULL, '0175', 'Siemens AG ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (173, 0, now(), NULL, 'opencell.admin', NULL, '0176', 'Paradine GmbH ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (174, 0, now(), NULL, 'opencell.admin', NULL, '0177', 'Odette International Limited ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (175, 0, now(), NULL, 'opencell.admin', NULL, '0178', 'Route1 MobiNET ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (176, 0, now(), NULL, 'opencell.admin', NULL, '0179', 'Penango Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (177, 0, now(), NULL, 'opencell.admin', NULL, '0180', 'Lithuanian military PKI ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (178, 0, now(), NULL, 'opencell.admin', NULL, '0183', 'Numéro d''identification suisse des enterprises (IDE), Swiss Unique Business Identification Number (UIDB) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (179, 0, now(), NULL, 'opencell.admin', NULL, '0184', 'DIGSTORG ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (180, 0, now(), NULL, 'opencell.admin', NULL, '0185', 'Perceval Object Code ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (181, 0, now(), NULL, 'opencell.admin', NULL, '0186', 'TrustPoint Object Identifiers ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (182, 0, now(), NULL, 'opencell.admin', NULL, '0187', 'Amazon Unique Identification Scheme ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (183, 0, now(), NULL, 'opencell.admin', NULL, '0188', 'Corporate Number of The Social Security and Tax Number System ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (184, 0, now(), NULL, 'opencell.admin', NULL, '0189', 'European Business Identifier (EBID) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (185, 0, now(), NULL, 'opencell.admin', NULL, '0190', 'Organisatie Indentificatie Nummer (OIN) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (186, 0, now(), NULL, 'opencell.admin', NULL, '0191', 'Company Code (Estonia) ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (187, 0, now(), NULL, 'opencell.admin', NULL, '0192', 'Organisasjonsnummer ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (188, 0, now(), NULL, 'opencell.admin', NULL, '0193', 'UBL.BE Party Identifier ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (189, 0, now(), NULL, 'opencell.admin', NULL, '0194', 'KOIOS Open Technical Dictionary');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (190, 0, now(), NULL, 'opencell.admin', NULL, '0195', 'Singapore Nationwide E-lnvoice Framework ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (191, 0, now(), NULL, 'opencell.admin', NULL, '0196', 'Icelandic identifier - Íslensk kennitala ');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (192, 0, now(), NULL, 'opencell.admin', NULL, '0197', 'APPLiA Pl Standard');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (193, 0, now(), NULL, 'opencell.admin', NULL, '0198', 'ERSTORG');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (194, 0, now(), NULL, 'opencell.admin', NULL, '0199', 'Legal Entity Identifier (LEI)');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (195, 0, now(), NULL, 'opencell.admin', NULL, '0200', 'Legal entity code (Lithuania)');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (196, 0, now(), NULL, 'opencell.admin', NULL, '0201', 'Codice Univoco Unità Organizzativa iPA');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (197, 0, now(), NULL, 'opencell.admin', NULL, '0202', 'Indirizzo di Posta Elettronica Certificata');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (198, 0, now(), NULL, 'opencell.admin', NULL, '0203', 'eDelivery Network Participant identifier');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (199, 0, now(), NULL, 'opencell.admin', NULL, '0204', 'Leitweg-ID');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (200, 0, now(), NULL, 'opencell.admin', NULL, '0205', 'CODDEST');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (201, 0, now(), NULL, 'opencell.admin', NULL, '0206', 'Registre du Commerce et de l’Industrie : RCI');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (202, 0, now(), NULL, 'opencell.admin', NULL, '0207', 'PiLog Ontology Codification Identifier (POCI)');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (203, 0, now(), NULL, 'opencell.admin', NULL, '0208', 'Numero d''entreprise / ondernemingsnummer / Unternehmensnummer');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (204, 0, now(), NULL, 'opencell.admin', NULL, '0209', 'GS1 identification keys');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (205, 0, now(), NULL, 'opencell.admin', NULL, '0210', 'CODICE FISCALE');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (206, 0, now(), NULL, 'opencell.admin', NULL, '0211', 'PARTITA IVA');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (207, 0, now(), NULL, 'opencell.admin', NULL, '0212', 'Finnish Organization Identifier');
			INSERT INTO ${db.schema.adapted}iso_icd(id,version,created,updated,creator,updater,code,scheme_name) VALUES (208, 0, now(), NULL, 'opencell.admin', NULL, '0213', 'Finnish Organization Value Add Tax Identifier');
			
						INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, '80', 'Invoice', 'Debit note related to goods or services');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, '81', 'Credit Note', 'Credit note related to goods or services');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, '82', 'Invoice', 'Metered services invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, '83', 'Credit Note', 'Credit note related to financial adjustments');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, '84', 'Invoice', 'Debit note related to financial adjustments');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, '130', 'Invoice', 'Invoicing data sheet');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, '202', 'Invoice', 'Direct payment valuation');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, '203', 'Invoice', 'Provisional payment valuation');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, '204', 'Invoice', 'Payment valuation');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, '211', 'Invoice', 'Interim application for payment');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, '261', 'Credit Note', 'Self billed credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, '262', 'Credit Note', 'Consolidated credit note - goods and services');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, '295', 'Invoice', 'Price variation invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, '296', 'Credit Note', 'Credit note for price variation');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, '308', 'Credit Note', 'Delcredere credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, '325', 'Invoice', 'Proforma invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, '326', 'Invoice', 'Partial invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, '380', 'Invoice', 'Commercial invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, '381', 'Credit Note', 'Credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (20, 0, now(), NULL, 'opencell.admin', NULL, '383', 'Invoice', 'Debit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (21, 0, now(), NULL, 'opencell.admin', NULL, '384', 'Invoice', 'Corrected invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (22, 0, now(), NULL, 'opencell.admin', NULL, '385', 'Invoice', 'Consolidated invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (23, 0, now(), NULL, 'opencell.admin', NULL, '386', 'Invoice', 'Prepayment invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (24, 0, now(), NULL, 'opencell.admin', NULL, '387', 'Invoice', 'Hire invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (25, 0, now(), NULL, 'opencell.admin', NULL, '388', 'Invoice', 'Tax invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (26, 0, now(), NULL, 'opencell.admin', NULL, '389', 'Invoice', 'Self-billed invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (27, 0, now(), NULL, 'opencell.admin', NULL, '390', 'Invoice', 'Delcredere invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (28, 0, now(), NULL, 'opencell.admin', NULL, '393', 'Invoice', 'Factored invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (29, 0, now(), NULL, 'opencell.admin', NULL, '394', 'Invoice', 'Lease invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (30, 0, now(), NULL, 'opencell.admin', NULL, '395', 'Invoice', 'Consignment invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (31, 0, now(), NULL, 'opencell.admin', NULL, '396', 'Credit Note', 'Factored credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (32, 0, now(), NULL, 'opencell.admin', NULL, '420', 'Credit Note', 'Optical Character Reading (OCR) payment credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (33, 0, now(), NULL, 'opencell.admin', NULL, '456', 'Invoice', 'Debit advice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (34, 0, now(), NULL, 'opencell.admin', NULL, '457', 'Invoice', 'Reversal of debit');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (35, 0, now(), NULL, 'opencell.admin', NULL, '458', 'Credit Note', 'Reversal of credit');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (36, 0, now(), NULL, 'opencell.admin', NULL, '527', 'Invoice', 'Self billed debit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (37, 0, now(), NULL, 'opencell.admin', NULL, '532', 'Credit Note', 'Forwarder''s credit note');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (38, 0, now(), NULL, 'opencell.admin', NULL, '575', 'Invoice', 'Insurer''s invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (39, 0, now(), NULL, 'opencell.admin', NULL, '623', 'Invoice', 'Forwarder''s invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (40, 0, now(), NULL, 'opencell.admin', NULL, '633', 'Invoice', 'Port charges documents');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (41, 0, now(), NULL, 'opencell.admin', NULL, '751', 'Invoice', 'Invoice information for accounting purposes');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (42, 0, now(), NULL, 'opencell.admin', NULL, '780', 'Invoice', 'Freight invoice');
			INSERT INTO ${db.schema.adapted}untdid_1001_invoice_code_type(id,version,created,updated,creator,updater,code,en16931_interpretation,name) VALUES (43, 0, now(), NULL, 'opencell.admin', NULL, '935', 'Invoice', 'Customs invoice');
			
			INSERT INTO ${db.schema.adapted}untdid_2475_vat_payment_option(id,version,created,updated,creator,updater,code_2005,value_2005,code_2475,value_2475) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, '35', 'Delivery date/time, actual', '29', 'Date of delivery of goods to establishments/domicile/site');
			INSERT INTO ${db.schema.adapted}untdid_2475_vat_payment_option(id,version,created,updated,creator,updater,code_2005,value_2005,code_2475,value_2475) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, '432', 'Paid to date', '72', 'Payment date');
			
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, 'AAA', 'Goods item description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, 'AAB', 'Payment term');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, 'AAC', 'Dangerous goods additional information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, 'AAD', 'Dangerous goods technical name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, 'AAE', 'Acknowledgement description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, 'AAF', 'Rate additional information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, 'AAG', 'Party instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, 'AAI', 'General information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, 'AAJ', 'Additional conditions of sale/purchase');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, 'AAK', 'Price conditions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, 'AAL', 'Goods dimensions in characters');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, 'AAM', 'Equipment re-usage restrictions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, 'AAN', 'Handling restriction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, 'AAO', 'Error description (free text)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, 'AAP', 'Response (free text)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, 'AAQ', 'Package content''s description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, 'AAR', 'Terms of delivery');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, 'AAS', 'Bill of lading remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, 'AAT', 'Mode of settlement information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (20, 0, now(), NULL, 'opencell.admin', NULL, 'AAU', 'Consignment invoice information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (21, 0, now(), NULL, 'opencell.admin', NULL, 'AAV', 'Clearance invoice information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (22, 0, now(), NULL, 'opencell.admin', NULL, 'AAW', 'Letter of credit information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (23, 0, now(), NULL, 'opencell.admin', NULL, 'AAX', 'License information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (24, 0, now(), NULL, 'opencell.admin', NULL, 'AAY', 'Certification statements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (25, 0, now(), NULL, 'opencell.admin', NULL, 'AAZ', 'Additional export information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (26, 0, now(), NULL, 'opencell.admin', NULL, 'ABA', 'Tariff statements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (27, 0, now(), NULL, 'opencell.admin', NULL, 'ABB', 'Medical history');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (28, 0, now(), NULL, 'opencell.admin', NULL, 'ABC', 'Conditions of sale or purchase');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (29, 0, now(), NULL, 'opencell.admin', NULL, 'ABD', 'Contract document type');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (30, 0, now(), NULL, 'opencell.admin', NULL, 'ABE', 'Additional terms and/or conditions (documentary credit)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (31, 0, now(), NULL, 'opencell.admin', NULL, 'ABF', 'Instructions or information about standby documentary');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (32, 0, now(), NULL, 'opencell.admin', NULL, 'ABG', 'Instructions or information about partial shipment(s)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (33, 0, now(), NULL, 'opencell.admin', NULL, 'ABH', 'Instructions or information about transhipment(s)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (34, 0, now(), NULL, 'opencell.admin', NULL, 'ABI', 'Additional handling instructions documentary credit');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (35, 0, now(), NULL, 'opencell.admin', NULL, 'ABJ', 'Domestic routing information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (36, 0, now(), NULL, 'opencell.admin', NULL, 'ABK', 'Chargeable category of equipment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (37, 0, now(), NULL, 'opencell.admin', NULL, 'ABL', 'Government information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (38, 0, now(), NULL, 'opencell.admin', NULL, 'ABM', 'Onward routing information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (39, 0, now(), NULL, 'opencell.admin', NULL, 'ABN', 'Accounting information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (40, 0, now(), NULL, 'opencell.admin', NULL, 'ABO', 'Discrepancy information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (41, 0, now(), NULL, 'opencell.admin', NULL, 'ABP', 'Confirmation instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (42, 0, now(), NULL, 'opencell.admin', NULL, 'ABQ', 'Method of issuance');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (43, 0, now(), NULL, 'opencell.admin', NULL, 'ABR', 'Documents delivery instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (44, 0, now(), NULL, 'opencell.admin', NULL, 'ABS', 'Additional conditions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (45, 0, now(), NULL, 'opencell.admin', NULL, 'ABT', 'Information/instructions about additional amounts covered');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (46, 0, now(), NULL, 'opencell.admin', NULL, 'ABU', 'Deferred payment termed additional');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (47, 0, now(), NULL, 'opencell.admin', NULL, 'ABV', 'Acceptance terms additional');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (48, 0, now(), NULL, 'opencell.admin', NULL, 'ABW', 'Negotiation terms additional');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (49, 0, now(), NULL, 'opencell.admin', NULL, 'ABX', 'Document name and documentary requirements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (50, 0, now(), NULL, 'opencell.admin', NULL, 'ABZ', 'Instructions/information about revolving documentary credit');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (51, 0, now(), NULL, 'opencell.admin', NULL, 'ACA', 'Documentary requirements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (52, 0, now(), NULL, 'opencell.admin', NULL, 'ACB', 'Additional information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (53, 0, now(), NULL, 'opencell.admin', NULL, 'ACC', 'Factor assignment clause');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (54, 0, now(), NULL, 'opencell.admin', NULL, 'ACD', 'Reason');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (55, 0, now(), NULL, 'opencell.admin', NULL, 'ACE', 'Dispute');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (56, 0, now(), NULL, 'opencell.admin', NULL, 'ACF', 'Additional attribute information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (57, 0, now(), NULL, 'opencell.admin', NULL, 'ACG', 'Absence declaration');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (58, 0, now(), NULL, 'opencell.admin', NULL, 'ACH', 'Aggregation statement');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (59, 0, now(), NULL, 'opencell.admin', NULL, 'ACI', 'Compilation statement');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (60, 0, now(), NULL, 'opencell.admin', NULL, 'ACJ', 'Definitional exception');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (61, 0, now(), NULL, 'opencell.admin', NULL, 'ACK', 'Privacy statement');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (62, 0, now(), NULL, 'opencell.admin', NULL, 'ACL', 'Quality statement');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (63, 0, now(), NULL, 'opencell.admin', NULL, 'ACM', 'Statistical description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (64, 0, now(), NULL, 'opencell.admin', NULL, 'ACN', 'Statistical definition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (65, 0, now(), NULL, 'opencell.admin', NULL, 'ACO', 'Statistical name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (66, 0, now(), NULL, 'opencell.admin', NULL, 'ACP', 'Statistical title');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (67, 0, now(), NULL, 'opencell.admin', NULL, 'ACQ', 'Off-dimension information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (68, 0, now(), NULL, 'opencell.admin', NULL, 'ACR', 'Unexpected stops information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (69, 0, now(), NULL, 'opencell.admin', NULL, 'ACS', 'Principles');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (70, 0, now(), NULL, 'opencell.admin', NULL, 'ACT', 'Terms and definition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (71, 0, now(), NULL, 'opencell.admin', NULL, 'ACU', 'Segment name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (72, 0, now(), NULL, 'opencell.admin', NULL, 'ACV', 'Simple data element name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (73, 0, now(), NULL, 'opencell.admin', NULL, 'ACW', 'Scope');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (74, 0, now(), NULL, 'opencell.admin', NULL, 'ACX', 'Message type name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (75, 0, now(), NULL, 'opencell.admin', NULL, 'ACY', 'Introduction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (76, 0, now(), NULL, 'opencell.admin', NULL, 'ACZ', 'Glossary');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (77, 0, now(), NULL, 'opencell.admin', NULL, 'ADA', 'Functional definition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (78, 0, now(), NULL, 'opencell.admin', NULL, 'ADB', 'Examples');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (79, 0, now(), NULL, 'opencell.admin', NULL, 'ADC', 'Cover page');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (80, 0, now(), NULL, 'opencell.admin', NULL, 'ADD', 'Dependency (syntax) notes');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (81, 0, now(), NULL, 'opencell.admin', NULL, 'ADE', 'Code value name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (82, 0, now(), NULL, 'opencell.admin', NULL, 'ADF', 'Code list name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (83, 0, now(), NULL, 'opencell.admin', NULL, 'ADG', 'Clarification of usage');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (84, 0, now(), NULL, 'opencell.admin', NULL, 'ADH', 'Composite data element name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (85, 0, now(), NULL, 'opencell.admin', NULL, 'ADI', 'Field of application');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (86, 0, now(), NULL, 'opencell.admin', NULL, 'ADJ', 'Type of assets and liabilities');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (87, 0, now(), NULL, 'opencell.admin', NULL, 'ADK', 'Promotion information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (88, 0, now(), NULL, 'opencell.admin', NULL, 'ADL', 'Meter condition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (89, 0, now(), NULL, 'opencell.admin', NULL, 'ADM', 'Meter reading information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (90, 0, now(), NULL, 'opencell.admin', NULL, 'ADN', 'Type of transaction reason');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (91, 0, now(), NULL, 'opencell.admin', NULL, 'ADO', 'Type of survey question');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (92, 0, now(), NULL, 'opencell.admin', NULL, 'ADP', 'Carrier''s agent counter information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (93, 0, now(), NULL, 'opencell.admin', NULL, 'ADQ', 'Description of work item on equipment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (94, 0, now(), NULL, 'opencell.admin', NULL, 'ADR', 'Message definition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (95, 0, now(), NULL, 'opencell.admin', NULL, 'ADS', 'Booked item information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (96, 0, now(), NULL, 'opencell.admin', NULL, 'ADT', 'Source of document');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (97, 0, now(), NULL, 'opencell.admin', NULL, 'ADU', 'Note');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (98, 0, now(), NULL, 'opencell.admin', NULL, 'ADV', 'Fixed part of segment clarification text');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (99, 0, now(), NULL, 'opencell.admin', NULL, 'ADW', 'Characteristics of goods');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (100, 0, now(), NULL, 'opencell.admin', NULL, 'ADX', 'Additional discharge instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (101, 0, now(), NULL, 'opencell.admin', NULL, 'ADY', 'Container stripping instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (102, 0, now(), NULL, 'opencell.admin', NULL, 'ADZ', 'CSC (Container Safety Convention) plate information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (103, 0, now(), NULL, 'opencell.admin', NULL, 'AEA', 'Cargo remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (104, 0, now(), NULL, 'opencell.admin', NULL, 'AEB', 'Temperature control instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (105, 0, now(), NULL, 'opencell.admin', NULL, 'AEC', 'Text refers to expected data');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (106, 0, now(), NULL, 'opencell.admin', NULL, 'AED', 'Text refers to received data');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (107, 0, now(), NULL, 'opencell.admin', NULL, 'AEE', 'Section clarification text');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (108, 0, now(), NULL, 'opencell.admin', NULL, 'AEF', 'Information to the beneficiary');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (109, 0, now(), NULL, 'opencell.admin', NULL, 'AEG', 'Information to the applicant');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (110, 0, now(), NULL, 'opencell.admin', NULL, 'AEH', 'Instructions to the beneficiary');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (111, 0, now(), NULL, 'opencell.admin', NULL, 'AEI', 'Instructions to the applicant');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (112, 0, now(), NULL, 'opencell.admin', NULL, 'AEJ', 'Controlled atmosphere');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (113, 0, now(), NULL, 'opencell.admin', NULL, 'AEK', 'Take off annotation');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (114, 0, now(), NULL, 'opencell.admin', NULL, 'AEL', 'Price variation narrative');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (115, 0, now(), NULL, 'opencell.admin', NULL, 'AEM', 'Documentary credit amendment instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (116, 0, now(), NULL, 'opencell.admin', NULL, 'AEN', 'Standard method narrative');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (117, 0, now(), NULL, 'opencell.admin', NULL, 'AEO', 'Project narrative');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (118, 0, now(), NULL, 'opencell.admin', NULL, 'AEP', 'Radioactive goods, additional information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (119, 0, now(), NULL, 'opencell.admin', NULL, 'AEQ', 'Bank-to-bank information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (120, 0, now(), NULL, 'opencell.admin', NULL, 'AER', 'Reimbursement instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (121, 0, now(), NULL, 'opencell.admin', NULL, 'AES', 'Reason for amending a message');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (122, 0, now(), NULL, 'opencell.admin', NULL, 'AET', 'Instructions to the paying and/or accepting and/or');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (123, 0, now(), NULL, 'opencell.admin', NULL, 'AEU', 'Interest instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (124, 0, now(), NULL, 'opencell.admin', NULL, 'AEV', 'Agent commission');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (125, 0, now(), NULL, 'opencell.admin', NULL, 'AEW', 'Remitting bank instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (126, 0, now(), NULL, 'opencell.admin', NULL, 'AEX', 'Instructions to the collecting bank');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (127, 0, now(), NULL, 'opencell.admin', NULL, 'AEY', 'Collection amount instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (128, 0, now(), NULL, 'opencell.admin', NULL, 'AEZ', 'Internal auditing information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (129, 0, now(), NULL, 'opencell.admin', NULL, 'AFA', 'Constraint');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (130, 0, now(), NULL, 'opencell.admin', NULL, 'AFB', 'Comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (131, 0, now(), NULL, 'opencell.admin', NULL, 'AFC', 'Semantic note');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (132, 0, now(), NULL, 'opencell.admin', NULL, 'AFD', 'Help text');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (133, 0, now(), NULL, 'opencell.admin', NULL, 'AFE', 'Legend');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (134, 0, now(), NULL, 'opencell.admin', NULL, 'AFF', 'Batch code structure');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (135, 0, now(), NULL, 'opencell.admin', NULL, 'AFG', 'Product application');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (136, 0, now(), NULL, 'opencell.admin', NULL, 'AFH', 'Customer complaint');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (137, 0, now(), NULL, 'opencell.admin', NULL, 'AFI', 'Probable cause of fault');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (138, 0, now(), NULL, 'opencell.admin', NULL, 'AFJ', 'Defect description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (139, 0, now(), NULL, 'opencell.admin', NULL, 'AFK', 'Repair description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (140, 0, now(), NULL, 'opencell.admin', NULL, 'AFL', 'Review comments');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (141, 0, now(), NULL, 'opencell.admin', NULL, 'AFM', 'Title');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (142, 0, now(), NULL, 'opencell.admin', NULL, 'AFN', 'Description of amount');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (143, 0, now(), NULL, 'opencell.admin', NULL, 'AFO', 'Responsibilities');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (144, 0, now(), NULL, 'opencell.admin', NULL, 'AFP', 'Supplier');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (145, 0, now(), NULL, 'opencell.admin', NULL, 'AFQ', 'Purchase region');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (146, 0, now(), NULL, 'opencell.admin', NULL, 'AFR', 'Affiliation');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (147, 0, now(), NULL, 'opencell.admin', NULL, 'AFS', 'Borrower');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (148, 0, now(), NULL, 'opencell.admin', NULL, 'AFT', 'Line of business');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (149, 0, now(), NULL, 'opencell.admin', NULL, 'AFU', 'Financial institution');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (150, 0, now(), NULL, 'opencell.admin', NULL, 'AFV', 'Business founder');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (151, 0, now(), NULL, 'opencell.admin', NULL, 'AFW', 'Business history');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (152, 0, now(), NULL, 'opencell.admin', NULL, 'AFX', 'Banking arrangements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (153, 0, now(), NULL, 'opencell.admin', NULL, 'AFY', 'Business origin');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (154, 0, now(), NULL, 'opencell.admin', NULL, 'AFZ', 'Brand names'' description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (155, 0, now(), NULL, 'opencell.admin', NULL, 'AGA', 'Business financing details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (156, 0, now(), NULL, 'opencell.admin', NULL, 'AGB', 'Competition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (157, 0, now(), NULL, 'opencell.admin', NULL, 'AGC', 'Construction process details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (158, 0, now(), NULL, 'opencell.admin', NULL, 'AGD', 'Construction specialty');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (159, 0, now(), NULL, 'opencell.admin', NULL, 'AGE', 'Contract information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (160, 0, now(), NULL, 'opencell.admin', NULL, 'AGF', 'Corporate filing');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (161, 0, now(), NULL, 'opencell.admin', NULL, 'AGG', 'Customer information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (162, 0, now(), NULL, 'opencell.admin', NULL, 'AGH', 'Copyright notice');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (163, 0, now(), NULL, 'opencell.admin', NULL, 'AGI', 'Contingent debt');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (164, 0, now(), NULL, 'opencell.admin', NULL, 'AGJ', 'Conviction details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (165, 0, now(), NULL, 'opencell.admin', NULL, 'AGK', 'Equipment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (166, 0, now(), NULL, 'opencell.admin', NULL, 'AGL', 'Workforce description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (167, 0, now(), NULL, 'opencell.admin', NULL, 'AGM', 'Exemption');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (168, 0, now(), NULL, 'opencell.admin', NULL, 'AGN', 'Future plans');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (169, 0, now(), NULL, 'opencell.admin', NULL, 'AGO', 'Interviewee conversation information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (170, 0, now(), NULL, 'opencell.admin', NULL, 'AGP', 'Intangible asset');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (171, 0, now(), NULL, 'opencell.admin', NULL, 'AGQ', 'Inventory');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (172, 0, now(), NULL, 'opencell.admin', NULL, 'AGR', 'Investment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (173, 0, now(), NULL, 'opencell.admin', NULL, 'AGS', 'Intercompany relations information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (174, 0, now(), NULL, 'opencell.admin', NULL, 'AGT', 'Joint venture');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (175, 0, now(), NULL, 'opencell.admin', NULL, 'AGU', 'Loan');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (176, 0, now(), NULL, 'opencell.admin', NULL, 'AGV', 'Long term debt');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (177, 0, now(), NULL, 'opencell.admin', NULL, 'AGW', 'Location');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (178, 0, now(), NULL, 'opencell.admin', NULL, 'AGX', 'Current legal structure');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (179, 0, now(), NULL, 'opencell.admin', NULL, 'AGY', 'Marital contract');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (180, 0, now(), NULL, 'opencell.admin', NULL, 'AGZ', 'Marketing activities');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (181, 0, now(), NULL, 'opencell.admin', NULL, 'AHA', 'Merger');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (182, 0, now(), NULL, 'opencell.admin', NULL, 'AHB', 'Marketable securities');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (183, 0, now(), NULL, 'opencell.admin', NULL, 'AHC', 'Business debt');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (184, 0, now(), NULL, 'opencell.admin', NULL, 'AHD', 'Original legal structure');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (185, 0, now(), NULL, 'opencell.admin', NULL, 'AHE', 'Employee sharing arrangements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (186, 0, now(), NULL, 'opencell.admin', NULL, 'AHF', 'Organization details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (187, 0, now(), NULL, 'opencell.admin', NULL, 'AHG', 'Public record details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (188, 0, now(), NULL, 'opencell.admin', NULL, 'AHH', 'Price range');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (189, 0, now(), NULL, 'opencell.admin', NULL, 'AHI', 'Qualifications');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (190, 0, now(), NULL, 'opencell.admin', NULL, 'AHJ', 'Registered activity');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (191, 0, now(), NULL, 'opencell.admin', NULL, 'AHK', 'Criminal sentence');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (192, 0, now(), NULL, 'opencell.admin', NULL, 'AHL', 'Sales method');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (193, 0, now(), NULL, 'opencell.admin', NULL, 'AHM', 'Educational institution information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (194, 0, now(), NULL, 'opencell.admin', NULL, 'AHN', 'Status details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (195, 0, now(), NULL, 'opencell.admin', NULL, 'AHO', 'Sales');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (196, 0, now(), NULL, 'opencell.admin', NULL, 'AHP', 'Spouse information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (197, 0, now(), NULL, 'opencell.admin', NULL, 'AHQ', 'Educational degree information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (198, 0, now(), NULL, 'opencell.admin', NULL, 'AHR', 'Shareholding information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (199, 0, now(), NULL, 'opencell.admin', NULL, 'AHS', 'Sales territory');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (200, 0, now(), NULL, 'opencell.admin', NULL, 'AHT', 'Accountant''s comments');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (201, 0, now(), NULL, 'opencell.admin', NULL, 'AHU', 'Exemption law location');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (202, 0, now(), NULL, 'opencell.admin', NULL, 'AHV', 'Share classifications');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (203, 0, now(), NULL, 'opencell.admin', NULL, 'AHW', 'Forecast');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (204, 0, now(), NULL, 'opencell.admin', NULL, 'AHX', 'Event location');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (205, 0, now(), NULL, 'opencell.admin', NULL, 'AHY', 'Facility occupancy');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (206, 0, now(), NULL, 'opencell.admin', NULL, 'AHZ', 'Import and export details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (207, 0, now(), NULL, 'opencell.admin', NULL, 'AIA', 'Additional facility information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (208, 0, now(), NULL, 'opencell.admin', NULL, 'AIB', 'Inventory value');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (209, 0, now(), NULL, 'opencell.admin', NULL, 'AIC', 'Education');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (210, 0, now(), NULL, 'opencell.admin', NULL, 'AID', 'Event');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (211, 0, now(), NULL, 'opencell.admin', NULL, 'AIE', 'Agent');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (212, 0, now(), NULL, 'opencell.admin', NULL, 'AIF', 'Domestically agreed financial statement details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (213, 0, now(), NULL, 'opencell.admin', NULL, 'AIG', 'Other current asset description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (214, 0, now(), NULL, 'opencell.admin', NULL, 'AIH', 'Other current liability description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (215, 0, now(), NULL, 'opencell.admin', NULL, 'AII', 'Former business activity');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (216, 0, now(), NULL, 'opencell.admin', NULL, 'AIJ', 'Trade name use');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (217, 0, now(), NULL, 'opencell.admin', NULL, 'AIK', 'Signing authority');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (218, 0, now(), NULL, 'opencell.admin', NULL, 'AIL', 'Guarantee');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (219, 0, now(), NULL, 'opencell.admin', NULL, 'AIM', 'Holding company operation');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (220, 0, now(), NULL, 'opencell.admin', NULL, 'AIN', 'Consignment routing');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (221, 0, now(), NULL, 'opencell.admin', NULL, 'AIO', 'Letter of protest');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (222, 0, now(), NULL, 'opencell.admin', NULL, 'AIP', 'Question');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (223, 0, now(), NULL, 'opencell.admin', NULL, 'AIQ', 'Party information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (224, 0, now(), NULL, 'opencell.admin', NULL, 'AIR', 'Area boundaries description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (225, 0, now(), NULL, 'opencell.admin', NULL, 'AIS', 'Advertisement information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (226, 0, now(), NULL, 'opencell.admin', NULL, 'AIT', 'Financial statement details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (227, 0, now(), NULL, 'opencell.admin', NULL, 'AIU', 'Access instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (228, 0, now(), NULL, 'opencell.admin', NULL, 'AIV', 'Liquidity');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (229, 0, now(), NULL, 'opencell.admin', NULL, 'AIW', 'Credit line');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (230, 0, now(), NULL, 'opencell.admin', NULL, 'AIX', 'Warranty terms');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (231, 0, now(), NULL, 'opencell.admin', NULL, 'AIY', 'Division description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (232, 0, now(), NULL, 'opencell.admin', NULL, 'AIZ', 'Reporting instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (233, 0, now(), NULL, 'opencell.admin', NULL, 'AJA', 'Examination result');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (234, 0, now(), NULL, 'opencell.admin', NULL, 'AJB', 'Laboratory result');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (235, 0, now(), NULL, 'opencell.admin', NULL, 'ALC', 'Allowance/charge information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (236, 0, now(), NULL, 'opencell.admin', NULL, 'ALD', 'X-ray result');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (237, 0, now(), NULL, 'opencell.admin', NULL, 'ALE', 'Pathology result');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (238, 0, now(), NULL, 'opencell.admin', NULL, 'ALF', 'Intervention description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (239, 0, now(), NULL, 'opencell.admin', NULL, 'ALG', 'Summary of admittance');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (240, 0, now(), NULL, 'opencell.admin', NULL, 'ALH', 'Medical treatment course detail');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (241, 0, now(), NULL, 'opencell.admin', NULL, 'ALI', 'Prognosis');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (242, 0, now(), NULL, 'opencell.admin', NULL, 'ALJ', 'Instruction to patient');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (243, 0, now(), NULL, 'opencell.admin', NULL, 'ALK', 'Instruction to physician');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (244, 0, now(), NULL, 'opencell.admin', NULL, 'ALL', 'All documents');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (245, 0, now(), NULL, 'opencell.admin', NULL, 'ALM', 'Medicine treatment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (246, 0, now(), NULL, 'opencell.admin', NULL, 'ALN', 'Medicine dosage and administration');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (247, 0, now(), NULL, 'opencell.admin', NULL, 'ALO', 'Availability of patient');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (248, 0, now(), NULL, 'opencell.admin', NULL, 'ALP', 'Reason for service request');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (249, 0, now(), NULL, 'opencell.admin', NULL, 'ALQ', 'Purpose of service');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (250, 0, now(), NULL, 'opencell.admin', NULL, 'ARR', 'Arrival conditions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (251, 0, now(), NULL, 'opencell.admin', NULL, 'ARS', 'Service requester''s comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (252, 0, now(), NULL, 'opencell.admin', NULL, 'AUT', 'Authentication');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (253, 0, now(), NULL, 'opencell.admin', NULL, 'AUU', 'Requested location description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (254, 0, now(), NULL, 'opencell.admin', NULL, 'AUV', 'Medicine administration condition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (255, 0, now(), NULL, 'opencell.admin', NULL, 'AUW', 'Patient information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (256, 0, now(), NULL, 'opencell.admin', NULL, 'AUX', 'Precautionary measure');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (257, 0, now(), NULL, 'opencell.admin', NULL, 'AUY', 'Service characteristic');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (258, 0, now(), NULL, 'opencell.admin', NULL, 'AUZ', 'Planned event comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (259, 0, now(), NULL, 'opencell.admin', NULL, 'AVA', 'Expected delay comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (260, 0, now(), NULL, 'opencell.admin', NULL, 'AVB', 'Transport requirements comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (261, 0, now(), NULL, 'opencell.admin', NULL, 'AVC', 'Temporary approval condition');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (262, 0, now(), NULL, 'opencell.admin', NULL, 'AVD', 'Customs Valuation Information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (263, 0, now(), NULL, 'opencell.admin', NULL, 'AVE', 'Value Added Tax (VAT) margin scheme');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (264, 0, now(), NULL, 'opencell.admin', NULL, 'AVF', 'Maritime Declaration of Health');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (265, 0, now(), NULL, 'opencell.admin', NULL, 'BAG', 'Passenger baggage information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (266, 0, now(), NULL, 'opencell.admin', NULL, 'BAH', 'Maritime Declaration of Health');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (267, 0, now(), NULL, 'opencell.admin', NULL, 'BAI', 'Additional product information address');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (268, 0, now(), NULL, 'opencell.admin', NULL, 'BAJ', 'Information to be printed on despatch advice');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (269, 0, now(), NULL, 'opencell.admin', NULL, 'BAK', 'Missing goods remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (270, 0, now(), NULL, 'opencell.admin', NULL, 'BAL', 'Non-acceptance information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (271, 0, now(), NULL, 'opencell.admin', NULL, 'BAM', 'Returns information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (272, 0, now(), NULL, 'opencell.admin', NULL, 'BAN', 'Sub-line item information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (273, 0, now(), NULL, 'opencell.admin', NULL, 'BAO', 'Test information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (274, 0, now(), NULL, 'opencell.admin', NULL, 'BAP', 'External link');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (275, 0, now(), NULL, 'opencell.admin', NULL, 'BAQ', 'VAT exemption reason');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (276, 0, now(), NULL, 'opencell.admin', NULL, 'BAR', 'Processing Instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (277, 0, now(), NULL, 'opencell.admin', NULL, 'BAS', 'Relay Instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (278, 0, now(), NULL, 'opencell.admin', NULL, 'BLC', 'Transport contract document clause');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (279, 0, now(), NULL, 'opencell.admin', NULL, 'BLD', 'Instruction to prepare the patient');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (280, 0, now(), NULL, 'opencell.admin', NULL, 'BLE', 'Medicine treatment comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (281, 0, now(), NULL, 'opencell.admin', NULL, 'BLF', 'Examination result comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (282, 0, now(), NULL, 'opencell.admin', NULL, 'BLG', 'Service request comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (283, 0, now(), NULL, 'opencell.admin', NULL, 'BLH', 'Prescription reason');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (284, 0, now(), NULL, 'opencell.admin', NULL, 'BLI', 'Prescription comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (285, 0, now(), NULL, 'opencell.admin', NULL, 'BLJ', 'Clinical investigation comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (286, 0, now(), NULL, 'opencell.admin', NULL, 'BLK', 'Medicinal specification comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (287, 0, now(), NULL, 'opencell.admin', NULL, 'BLL', 'Economic contribution comment');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (288, 0, now(), NULL, 'opencell.admin', NULL, 'BLM', 'Status of a plan');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (289, 0, now(), NULL, 'opencell.admin', NULL, 'BLN', 'Random sample test information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (290, 0, now(), NULL, 'opencell.admin', NULL, 'BLO', 'Period of time');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (291, 0, now(), NULL, 'opencell.admin', NULL, 'BLP', 'Legislation');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (292, 0, now(), NULL, 'opencell.admin', NULL, 'BLQ', 'Security measures requested');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (293, 0, now(), NULL, 'opencell.admin', NULL, 'BLR', 'Transport contract document remark');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (294, 0, now(), NULL, 'opencell.admin', NULL, 'BLS', 'Previous port of call security information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (295, 0, now(), NULL, 'opencell.admin', NULL, 'BLT', 'Security information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (296, 0, now(), NULL, 'opencell.admin', NULL, 'BLU', 'Waste information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (297, 0, now(), NULL, 'opencell.admin', NULL, 'BLV', 'B2C marketing information, short description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (298, 0, now(), NULL, 'opencell.admin', NULL, 'BLW', 'B2B marketing information, long description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (299, 0, now(), NULL, 'opencell.admin', NULL, 'BLX', 'B2C marketing information, long description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (300, 0, now(), NULL, 'opencell.admin', NULL, 'BLY', 'Product ingredients');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (301, 0, now(), NULL, 'opencell.admin', NULL, 'BLZ', 'Location short name');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (302, 0, now(), NULL, 'opencell.admin', NULL, 'BMA', 'Packaging material information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (303, 0, now(), NULL, 'opencell.admin', NULL, 'BMB', 'Filler material information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (304, 0, now(), NULL, 'opencell.admin', NULL, 'BMC', 'Ship-to-ship activity information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (305, 0, now(), NULL, 'opencell.admin', NULL, 'BMD', 'Package material description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (306, 0, now(), NULL, 'opencell.admin', NULL, 'BME', 'Consumer level package marking');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (307, 0, now(), NULL, 'opencell.admin', NULL, 'CCI', 'Customs clearance instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (308, 0, now(), NULL, 'opencell.admin', NULL, 'CEX', 'Customs clearance instructions export');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (309, 0, now(), NULL, 'opencell.admin', NULL, 'CHG', 'Change information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (310, 0, now(), NULL, 'opencell.admin', NULL, 'CIP', 'Customs clearance instruction import');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (311, 0, now(), NULL, 'opencell.admin', NULL, 'CLP', 'Clearance place requested');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (312, 0, now(), NULL, 'opencell.admin', NULL, 'CLR', 'Loading remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (313, 0, now(), NULL, 'opencell.admin', NULL, 'COI', 'Order information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (314, 0, now(), NULL, 'opencell.admin', NULL, 'CUR', 'Customer remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (315, 0, now(), NULL, 'opencell.admin', NULL, 'CUS', 'Customs declaration information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (316, 0, now(), NULL, 'opencell.admin', NULL, 'DAR', 'Damage remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (317, 0, now(), NULL, 'opencell.admin', NULL, 'DCL', 'Document issuer declaration');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (318, 0, now(), NULL, 'opencell.admin', NULL, 'DEL', 'Delivery information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (319, 0, now(), NULL, 'opencell.admin', NULL, 'DIN', 'Delivery instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (320, 0, now(), NULL, 'opencell.admin', NULL, 'DOC', 'Documentation instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (321, 0, now(), NULL, 'opencell.admin', NULL, 'DUT', 'Duty declaration');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (322, 0, now(), NULL, 'opencell.admin', NULL, 'EUR', 'Effective used routing');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (323, 0, now(), NULL, 'opencell.admin', NULL, 'FBC', 'First block to be printed on the transport contract');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (324, 0, now(), NULL, 'opencell.admin', NULL, 'GBL', 'Government bill of lading information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (325, 0, now(), NULL, 'opencell.admin', NULL, 'GEN', 'Entire transaction set');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (326, 0, now(), NULL, 'opencell.admin', NULL, 'GS7', 'Further information concerning GGVS par. 7');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (327, 0, now(), NULL, 'opencell.admin', NULL, 'HAN', 'Consignment handling instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (328, 0, now(), NULL, 'opencell.admin', NULL, 'HAZ', 'Hazard information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (329, 0, now(), NULL, 'opencell.admin', NULL, 'ICN', 'Consignment information for consignee');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (330, 0, now(), NULL, 'opencell.admin', NULL, 'IIN', 'Insurance instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (331, 0, now(), NULL, 'opencell.admin', NULL, 'IMI', 'Invoice mailing instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (332, 0, now(), NULL, 'opencell.admin', NULL, 'IND', 'Commercial invoice item description');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (333, 0, now(), NULL, 'opencell.admin', NULL, 'INS', 'Insurance information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (334, 0, now(), NULL, 'opencell.admin', NULL, 'INV', 'Invoice instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (335, 0, now(), NULL, 'opencell.admin', NULL, 'IRP', 'Information for railway purpose');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (336, 0, now(), NULL, 'opencell.admin', NULL, 'ITR', 'Inland transport details');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (337, 0, now(), NULL, 'opencell.admin', NULL, 'ITS', 'Testing instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (338, 0, now(), NULL, 'opencell.admin', NULL, 'LAN', 'Location Alias');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (339, 0, now(), NULL, 'opencell.admin', NULL, 'LIN', 'Line item');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (340, 0, now(), NULL, 'opencell.admin', NULL, 'LOI', 'Loading instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (341, 0, now(), NULL, 'opencell.admin', NULL, 'MCO', 'Miscellaneous charge order');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (342, 0, now(), NULL, 'opencell.admin', NULL, 'MDH', 'Maritime Declaration of Health');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (343, 0, now(), NULL, 'opencell.admin', NULL, 'MKS', 'Additional marks/numbers information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (344, 0, now(), NULL, 'opencell.admin', NULL, 'ORI', 'Order instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (345, 0, now(), NULL, 'opencell.admin', NULL, 'OSI', 'Other service information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (346, 0, now(), NULL, 'opencell.admin', NULL, 'PAC', 'Packing/marking information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (347, 0, now(), NULL, 'opencell.admin', NULL, 'PAI', 'Payment instructions information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (348, 0, now(), NULL, 'opencell.admin', NULL, 'PAY', 'Payables information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (349, 0, now(), NULL, 'opencell.admin', NULL, 'PKG', 'Packaging information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (350, 0, now(), NULL, 'opencell.admin', NULL, 'PKT', 'Packaging terms information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (351, 0, now(), NULL, 'opencell.admin', NULL, 'PMD', 'Payment detail/remittance information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (352, 0, now(), NULL, 'opencell.admin', NULL, 'PMT', 'Payment information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (353, 0, now(), NULL, 'opencell.admin', NULL, 'PRD', 'Product information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (354, 0, now(), NULL, 'opencell.admin', NULL, 'PRF', 'Price calculation formula');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (355, 0, now(), NULL, 'opencell.admin', NULL, 'PRI', 'Priority information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (356, 0, now(), NULL, 'opencell.admin', NULL, 'PUR', 'Purchasing information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (357, 0, now(), NULL, 'opencell.admin', NULL, 'QIN', 'Quarantine instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (358, 0, now(), NULL, 'opencell.admin', NULL, 'QQD', 'Quality demands/requirements');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (359, 0, now(), NULL, 'opencell.admin', NULL, 'QUT', 'Quotation instruction/information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (360, 0, now(), NULL, 'opencell.admin', NULL, 'RAH', 'Risk and handling information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (361, 0, now(), NULL, 'opencell.admin', NULL, 'REG', 'Regulatory information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (362, 0, now(), NULL, 'opencell.admin', NULL, 'RET', 'Return to origin information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (363, 0, now(), NULL, 'opencell.admin', NULL, 'REV', 'Receivables');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (364, 0, now(), NULL, 'opencell.admin', NULL, 'RQR', 'Consignment route');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (365, 0, now(), NULL, 'opencell.admin', NULL, 'SAF', 'Safety information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (366, 0, now(), NULL, 'opencell.admin', NULL, 'SIC', 'Consignment documentary instruction');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (367, 0, now(), NULL, 'opencell.admin', NULL, 'SIN', 'Special instructions');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (368, 0, now(), NULL, 'opencell.admin', NULL, 'SLR', 'Ship line requested');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (369, 0, now(), NULL, 'opencell.admin', NULL, 'SPA', 'Special permission for transport, generally');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (370, 0, now(), NULL, 'opencell.admin', NULL, 'SPG', 'Special permission concerning the goods to be transported');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (371, 0, now(), NULL, 'opencell.admin', NULL, 'SPH', 'Special handling');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (372, 0, now(), NULL, 'opencell.admin', NULL, 'SPP', 'Special permission concerning package');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (373, 0, now(), NULL, 'opencell.admin', NULL, 'SPT', 'Special permission concerning transport means');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (374, 0, now(), NULL, 'opencell.admin', NULL, 'SRN', 'Subsidiary risk number (IATA/DGR)');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (375, 0, now(), NULL, 'opencell.admin', NULL, 'SSR', 'Special service request');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (376, 0, now(), NULL, 'opencell.admin', NULL, 'SUR', 'Supplier remarks');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (377, 0, now(), NULL, 'opencell.admin', NULL, 'TCA', 'Consignment tariff');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (378, 0, now(), NULL, 'opencell.admin', NULL, 'TDT', 'Consignment transport');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (379, 0, now(), NULL, 'opencell.admin', NULL, 'TRA', 'Transportation information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (380, 0, now(), NULL, 'opencell.admin', NULL, 'TRR', 'Requested tariff');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (381, 0, now(), NULL, 'opencell.admin', NULL, 'TXD', 'Tax declaration');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (382, 0, now(), NULL, 'opencell.admin', NULL, 'WHI', 'Warehouse instruction/information');
			INSERT INTO ${db.schema.adapted}untdid_4451_invoice_subject_code(id,version,created,updated,creator,updater,code,code_name) VALUES (383, 0, now(), NULL, 'opencell.admin', NULL, 'ZZZ', 'Mutually defined');
			
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, 'Z', 'Zero rated goods', 'Zero rated goods');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, 'E', 'Exempt from tax', 'Exempt from tax');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, 'AE', 'VAT reverse charge', 'VAT Reverse charge');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, 'K', 'VAT exempt for intra community supply of goods', 'VAT exempt for EEA intra-community supply of goods and services');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, 'G', 'Free export item, tax not charged', 'Free export item, tax not charged');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, 'O', 'Services outside scope of tax', 'Service outside scope of tax');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, 'L', 'Canary Islands General Indirect Tax', 'Canary Islands general indirect tax');
			INSERT INTO ${db.schema.adapted}untdid_5305_taxation_category(id,version,created,updated,creator,updater,code,semantic_model,name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, 'M', 'Liable for IPSI', 'Tax for production, services and importation in Ceuta and Melilla');
			
			
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-79-C', 'Repayment of expenditure is not an exemption in the sense of the VAT Directive but may be handled as such in the context of the EN16931.', 'Exempt based on article 79, point c of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132', NULL, 'Exempt based on article 132 of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1A', NULL, 'Exempt based on article 132, section 1 (a) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1B', NULL, 'Exempt based on article 132, section 1 (b) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1C', NULL, 'Exempt based on article 132, section 1 (c) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1D', NULL, 'Exempt based on article 132, section 1 (d) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1E', NULL, 'Exempt based on article 132, section 1 (e) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1F', NULL, 'Exempt based on article 132, section 1 (f) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1G', NULL, 'Exempt based on article 132, section 1 (g) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1H', NULL, 'Exempt based on article 132, section 1 (h) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1I', NULL, 'Exempt based on article 132, section 1 (i) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1J', NULL, 'Exempt based on article 132, section 1 (j) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1K', NULL, 'Exempt based on article 132, section 1 (k) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1L', NULL, 'Exempt based on article 132, section 1 (l) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1M', NULL, 'Exempt based on article 132, section 1 (m) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1N', NULL, 'Exempt based on article 132, section 1 (n) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1O', NULL, 'Exempt based on article 132, section 1 (o) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1P', NULL, 'Exempt based on article 132, section 1 (p) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-132-1Q', NULL, 'Exempt based on article 132, section 1 (q) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (20, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143', NULL, 'Exempt based on article 143 of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (21, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1A', NULL, 'Exempt based on article 143, section 1 (a) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (22, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1B', NULL, 'Exempt based on article 143, section 1 (b) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (23, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1C', NULL, 'Exempt based on article 143, section 1 (c) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (24, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1D', NULL, 'Exempt based on article 143, section 1 (d) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (25, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1E', NULL, 'Exempt based on article 143, section 1 (e) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (26, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1F', NULL, 'Exempt based on article 143, section 1 (f) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (27, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1FA', NULL, 'Exempt based on article 143, section 1 (fa) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (28, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1G', NULL, 'Exempt based on article 143, section 1 (g) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (29, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1H', NULL, 'Exempt based on article 143, section 1 (h) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (30, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1I', NULL, 'Exempt based on article 143, section 1 (i) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (31, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1J', NULL, 'Exempt based on article 143, section 1 (j) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (32, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1K', NULL, 'Exempt based on article 143, section 1 (k) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (33, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-143-1L', NULL, 'Exempt based on article 143, section 1 (l) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (34, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148', NULL, 'Exempt based on article 148 of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (35, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-A', NULL, 'Exempt based on article 148, section (a) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (36, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-B', NULL, 'Exempt based on article 148, section (b) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (37, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-C', NULL, 'Exempt based on article 148, section (c) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (38, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-D', NULL, 'Exempt based on article 148, section (d) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (39, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-E', NULL, 'Exempt based on article 148, section (e) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (40, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-F', NULL, 'Exempt based on article 148, section (f) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (41, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-148-G', NULL, 'Exempt based on article 148, section (g) of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (42, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151', NULL, 'Exempt based on article 151 of Council Directive 2006/112/EC');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (43, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1A', NULL, 'Exempt based on article 151, section 1 (a) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (44, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1AA', NULL, 'Exempt based on article 151, section 1 (aa) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (45, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1B', NULL, 'Exempt based on article 151, section 1 (b) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (46, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1C', NULL, 'Exempt based on article 151, section 1 (c) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (47, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1D', NULL, 'Exempt based on article 151, section 1 (d) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (48, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-151-1E', NULL, 'Exempt based on article 151, section 1 (e) of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (49, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-309', NULL, 'Exempt based on article 309 of Council Directive 2006/112/EC ');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (50, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-AE', 'Only use with VAT category code AE', 'Reverse charge');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (51, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-D', 'Only use with VAT category code E', 'Travel agents VAT scheme.');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (52, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-F', 'Only use with VAT category code E', 'Second hand goods VAT scheme.');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (53, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-G', 'Only use with VAT category code G', 'Export outside the EU');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (54, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-I', 'Only use with VAT category code E', 'Works of art VAT scheme.');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (55, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-IC', 'Only use with VAT category code K', 'Intra-community supply');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (56, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-J', 'Only use with VAT category code E', 'Collectors items and antiques VAT scheme.');
			INSERT INTO ${db.schema.adapted}untdid_vatex(id,version,created,updated,creator,updater,code,remark,code_name) VALUES (57, 0, now(), NULL, 'opencell.admin', NULL, 'VATEX-EU-O', 'Only use with VAT category code O', 'Not subject to VAT');
			
						INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, '1', NULL, 'Instrument not defined');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, '2', NULL, 'Automated clearing house credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, '3', NULL, 'Automated clearing house debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, '4', NULL, 'ACH demand debit reversal');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, '5', NULL, 'ACH demand credit reversal');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, '6', NULL, 'ACH demand credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, '7', NULL, 'ACH demand debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, '8', NULL, 'Hold');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, '9', NULL, 'National or regional clearing');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, '10', NULL, 'In cash');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, '11', NULL, 'ACH savings credit reversal');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, '12', NULL, 'ACH savings debit reversal');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, '13', NULL, 'ACH savings credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, '14', NULL, 'ACH savings debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, '15', NULL, 'Bookentry credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, '16', NULL, 'Bookentry debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, '17', NULL, 'ACH demand cash concentration/disbursement (CCD) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, '18', NULL, 'ACH demand cash concentration/disbursement (CCD) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, '19', NULL, 'ACH demand corporate trade payment (CTP) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (20, 0, now(), NULL, 'opencell.admin', NULL, '20', NULL, 'Cheque');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (21, 0, now(), NULL, 'opencell.admin', NULL, '21', NULL, 'Banker''s draft');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (22, 0, now(), NULL, 'opencell.admin', NULL, '22', NULL, 'Certified banker''s draft');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (23, 0, now(), NULL, 'opencell.admin', NULL, '23', NULL, 'Bank cheque (issued by a banking or similar establishment)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (24, 0, now(), NULL, 'opencell.admin', NULL, '24', NULL, 'Bill of exchange awaiting acceptance');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (25, 0, now(), NULL, 'opencell.admin', NULL, '25', NULL, 'Certified cheque');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (26, 0, now(), NULL, 'opencell.admin', NULL, '26', NULL, 'Local cheque');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (27, 0, now(), NULL, 'opencell.admin', NULL, '27', NULL, 'ACH demand corporate trade payment (CTP) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (28, 0, now(), NULL, 'opencell.admin', NULL, '28', NULL, 'ACH demand corporate trade exchange (CTX) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (29, 0, now(), NULL, 'opencell.admin', NULL, '29', NULL, 'ACH demand corporate trade exchange (CTX) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (30, 0, now(), NULL, 'opencell.admin', NULL, '30', 'non-SEPA', 'Credit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (31, 0, now(), NULL, 'opencell.admin', NULL, '31', 'non-SEPA', 'Debit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (32, 0, now(), NULL, 'opencell.admin', NULL, '32', NULL, 'ACH demand cash concentration/disbursement plus (CCD+)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (33, 0, now(), NULL, 'opencell.admin', NULL, '33', NULL, 'ACH demand cash concentration/disbursement plus (CCD+)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (34, 0, now(), NULL, 'opencell.admin', NULL, '34', NULL, 'ACH prearranged payment and deposit (PPD)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (35, 0, now(), NULL, 'opencell.admin', NULL, '35', NULL, 'ACH savings cash concentration/disbursement (CCD) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (36, 0, now(), NULL, 'opencell.admin', NULL, '36', NULL, 'ACH savings cash concentration/disbursement (CCD) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (37, 0, now(), NULL, 'opencell.admin', NULL, '37', NULL, 'ACH savings corporate trade payment (CTP) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (38, 0, now(), NULL, 'opencell.admin', NULL, '38', NULL, 'ACH savings corporate trade payment (CTP) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (39, 0, now(), NULL, 'opencell.admin', NULL, '39', NULL, 'ACH savings corporate trade exchange (CTX) credit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (40, 0, now(), NULL, 'opencell.admin', NULL, '40', NULL, 'ACH savings corporate trade exchange (CTX) debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (41, 0, now(), NULL, 'opencell.admin', NULL, '41', NULL, 'ACH savings cash concentration/disbursement plus (CCD+)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (42, 0, now(), NULL, 'opencell.admin', NULL, '42', NULL, 'Payment to bank account');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (43, 0, now(), NULL, 'opencell.admin', NULL, '43', NULL, 'ACH savings cash concentration/disbursement plus (CCD+)');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (44, 0, now(), NULL, 'opencell.admin', NULL, '44', NULL, 'Accepted bill of exchange');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (45, 0, now(), NULL, 'opencell.admin', NULL, '45', NULL, 'Referenced home-banking credit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (46, 0, now(), NULL, 'opencell.admin', NULL, '46', NULL, 'Interbank debit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (47, 0, now(), NULL, 'opencell.admin', NULL, '47', NULL, 'Home-banking debit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (48, 0, now(), NULL, 'opencell.admin', NULL, '48', 'Use for all payment cards', 'Bank card');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (49, 0, now(), NULL, 'opencell.admin', NULL, '49', NULL, 'Direct debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (50, 0, now(), NULL, 'opencell.admin', NULL, '50', NULL, 'Payment by postgiro');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (51, 0, now(), NULL, 'opencell.admin', NULL, '51', NULL, 'FR, norme 6 97-Telereglement CFONB (French Organisation for');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (52, 0, now(), NULL, 'opencell.admin', NULL, '52', NULL, 'Urgent commercial payment');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (53, 0, now(), NULL, 'opencell.admin', NULL, '53', NULL, 'Urgent Treasury Payment');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (54, 0, now(), NULL, 'opencell.admin', NULL, '54', NULL, 'Credit card');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (55, 0, now(), NULL, 'opencell.admin', NULL, '55', NULL, 'Debit card');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (56, 0, now(), NULL, 'opencell.admin', NULL, '56', NULL, 'Bankgiro');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (57, 0, now(), NULL, 'opencell.admin', NULL, '57', 'Contractual payment means', 'Standing agreement');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (58, 0, now(), NULL, 'opencell.admin', NULL, '58', 'SEPA', 'SEPA credit transfer');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (59, 0, now(), NULL, 'opencell.admin', NULL, '59', 'SEPA', 'SEPA direct debit');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (60, 0, now(), NULL, 'opencell.admin', NULL, '60', NULL, 'Promissory note');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (61, 0, now(), NULL, 'opencell.admin', NULL, '61', NULL, 'Promissory note signed by the debtor');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (62, 0, now(), NULL, 'opencell.admin', NULL, '62', NULL, 'Promissory note signed by the debtor and endorsed by a bank');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (63, 0, now(), NULL, 'opencell.admin', NULL, '63', NULL, 'Promissory note signed by the debtor and endorsed by a');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (64, 0, now(), NULL, 'opencell.admin', NULL, '64', NULL, 'Promissory note signed by a bank');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (65, 0, now(), NULL, 'opencell.admin', NULL, '65', NULL, 'Promissory note signed by a bank and endorsed by another');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (66, 0, now(), NULL, 'opencell.admin', NULL, '66', NULL, 'Promissory note signed by a third party');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (67, 0, now(), NULL, 'opencell.admin', NULL, '67', NULL, 'Promissory note signed by a third party and endorsed by a');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (68, 0, now(), NULL, 'opencell.admin', NULL, '68', NULL, 'Online payment service');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (69, 0, now(), NULL, 'opencell.admin', NULL, '69', NULL, 'Transfer Advice');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (70, 0, now(), NULL, 'opencell.admin', NULL, '70', NULL, 'Bill drawn by the creditor on the debtor');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (71, 0, now(), NULL, 'opencell.admin', NULL, '74', NULL, 'Bill drawn by the creditor on a bank');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (72, 0, now(), NULL, 'opencell.admin', NULL, '75', NULL, 'Bill drawn by the creditor, endorsed by another bank');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (73, 0, now(), NULL, 'opencell.admin', NULL, '76', NULL, 'Bill drawn by the creditor on a bank and endorsed by a');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (74, 0, now(), NULL, 'opencell.admin', NULL, '77', NULL, 'Bill drawn by the creditor on a third party');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (75, 0, now(), NULL, 'opencell.admin', NULL, '78', NULL, 'Bill drawn by creditor on third party, accepted and');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (76, 0, now(), NULL, 'opencell.admin', NULL, '91', NULL, 'Not transferable banker''s draft');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (77, 0, now(), NULL, 'opencell.admin', NULL, '92', NULL, 'Not transferable local cheque');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (78, 0, now(), NULL, 'opencell.admin', NULL, '93', NULL, 'Reference giro');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (79, 0, now(), NULL, 'opencell.admin', NULL, '94', NULL, 'Urgent giro');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (80, 0, now(), NULL, 'opencell.admin', NULL, '95', NULL, 'Free format giro');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (81, 0, now(), NULL, 'opencell.admin', NULL, '96', NULL, 'Requested method for payment was not used');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (82, 0, now(), NULL, 'opencell.admin', NULL, '97', NULL, 'Clearing between partners');
			INSERT INTO ${db.schema.adapted}untdid_4461_payment_means(id,version,created,updated,creator,updater,code,usage_in_en16931,code_name) VALUES (83, 0, now(), NULL, 'opencell.admin', NULL, 'ZZZ', NULL, 'Mutually defined');	
			
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (1, 0, now(), NULL, 'opencell.admin', NULL, '41', 'Bonus for works ahead of schedule');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (2, 0, now(), NULL, 'opencell.admin', NULL, '42', 'Other bonus');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (3, 0, now(), NULL, 'opencell.admin', NULL, '60', 'Manufacturer’s consumer discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (4, 0, now(), NULL, 'opencell.admin', NULL, '62', 'Due to military status');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (5, 0, now(), NULL, 'opencell.admin', NULL, '63', 'Due to work accident');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (6, 0, now(), NULL, 'opencell.admin', NULL, '64', 'Special agreement');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (7, 0, now(), NULL, 'opencell.admin', NULL, '65', 'Production error discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (8, 0, now(), NULL, 'opencell.admin', NULL, '66', 'New outlet discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (9, 0, now(), NULL, 'opencell.admin', NULL, '67', 'Sample discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (10, 0, now(), NULL, 'opencell.admin', NULL, '68', 'End-of-range discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (11, 0, now(), NULL, 'opencell.admin', NULL, '70', 'Incoterm discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (12, 0, now(), NULL, 'opencell.admin', NULL, '71', 'Point of sales threshold allowance');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (13, 0, now(), NULL, 'opencell.admin', NULL, '88', 'Material surcharge/deduction');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (14, 0, now(), NULL, 'opencell.admin', NULL, '95', 'Discount');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (15, 0, now(), NULL, 'opencell.admin', NULL, '100', 'Special rebate');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (16, 0, now(), NULL, 'opencell.admin', NULL, '102', 'Fixed long term');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (17, 0, now(), NULL, 'opencell.admin', NULL, '103', 'Temporary');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (18, 0, now(), NULL, 'opencell.admin', NULL, '104', 'Standard');
			INSERT INTO ${db.schema.adapted}untdid_5189_allowance_code(id,version,created,updated,creator,updater,code,description) VALUES (19, 0, now(), NULL, 'opencell.admin', NULL, '105', 'Yearly turnover');	
			

				
		]]>
		</sql>
		</changeSet>
		
		<changeSet id="#INTRD-12085_20221221" author="HatimOUDAD">
	
				<update tableName="billing_tax">
					<column name="vatex_id" value="57" />
					<where> tax_percentage = 0</where>
				</update>					
				
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="30" />
					<where>  id = -6</where>
				</update>
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="19" />
					<where>  id = -7</where>
				</update>
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="19" />
					<where>  id = -8</where>			
				</update>
				
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="18" />
					<where>  id = -1</where>
				</update>
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="19" />
					<where>  id = -2</where>
				</update>
				<update tableName="billing_invoice_type">
					<column name="invoice_code_type_id" value="23" />
					<where>  id = -5</where>
				</update>
			
		</changeSet>

	<changeSet id="#INTRD-12546_20221230" author="aeljaouhari">
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueNumeric="-5" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="INVOICE_SPLIT" />
			<column name="description" value="Invoice split" />
			<column name="description_i18n" value='{"FR":"Découpage facture","EN":"Invoice split"}' />
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-12825_20230104" author="aeljaouhari">
        <update tableName="billing_tax_mapping" >
            <column name="version" value="0"/>
            <where>version is null</where>
        </update>
	</changeSet>
	
	<changeSet id="#INTRD-12891_20230105" author="aeljaouhari">
		<update tableName="meveo_script_instance_cat">
			<column name="description_i18n" value='{"FR":"Règle de validation de facture","EN":"Invoice validation rule"}'/>
			<column name="description" value="Invoice validation rule"/>
			<where>code = 'INVOICE_VALIDATION'</where>
		</update>
		<insert tableName="meveo_script_instance_cat">
			<column name="id" valueNumeric="-6" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="GLOBAL_INVOICE_VALIDATION" />
			<column name="description" value="Global invoice validation" />
			<column name="description_i18n" value='{"FR":"Validation de facture globale","EN":"Global invoice validation"}' />
		</insert>
	</changeSet>

    <changeSet id="#INTRD-12727_20230105" author="zelmeliani">
        <update tableName="meveo_job_instance" >
    		<column name="code" value="TriggerCollectionPlanLevelsJob"/>
    		<column name="uuid" value="TriggerCollectionPlanLevelsJob"/>
    	    <where>code='TriggerCollectionPlanLevelsJob_Job'</where>
        </update>
    </changeSet>
    
    <changeSet id="#INTRD-12903_20230105" author="TarikFA.">
		<delete tableName="meveo_job_instance">
			<where>code = 'APIv2PermissionsSyncJob'</where>
		</delete>
	</changeSet>
    
    <changeSet id="#INTRD-12925_20230106" author="aeljaouhari">
    
    	<update tableName="billing_invoice_type">
     		<column name="invoice_validation_script_id">null</column>
			<where>
				invoice_validation_script_id IN (SELECT id FROM meveo_script_instance WHERE 
					code='org.meveo.service.script.CompareInvoiceAmount' or 
					code='org.meveo.service.script.CompareOfferAmountScript' or
					code='org.meveo.service.script.validation.ValidateCreditCategoryScript' or 
					code='org.meveo.service.script.CompareOfferLinesAmountScript' or 
					code='org.meveo.service.script.validation.ValidateCustomerAge' or 
					code='org.meveo.service.script.validation.ValidateSubscriptionAge'
				)
			</where>
		</update>                    
		
     	<!-- Script :  CompareInvoiceAmount -->     
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.CompareInvoiceAmount'</where>
		</delete>
	         
        <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareInvoiceAmount" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareInvoiceAmount extends CompareInvoiceAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Invoice amount will be compared to provided amount using the selected operator. Invoice must match this criteria to be valid."/>
			<column name="description_i18n" value='{"FRA":"Le montant de la facture sera comparé au montant indiqué en utilisant l’opérateur sélectionné. La facture doit répondre à ce critère pour être valide.","ENG":"Invoice amount will be compared to provided amount using the selected operator. Invoice must match this criteria to be valid."}'/>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FRA":"Montant à tester","ENG":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="without tax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="without tax|with tax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FRA":"Operateur de comparaison","ENG":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareInvoiceAmount')" />
			<column name="description_i18n" value='{"FRA":"Valeur","ENG":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
		</insert>
		
	   	<!-- Script :  CompareOfferAmount -->
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmountScript')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.CompareOfferAmountScript'</where>
		</delete>
		
		 <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareOfferAmount" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareOfferAmount extends CompareOfferAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Amount invoiced for each offer in the list will be compared to the provided value using the selected operator. For the invoice to be valid, tested amount must pass the test. If offer list is empty, then rule will always pass. Only offer actually present on invoice will be tested."/>
			<column name="description_i18n">
				<![CDATA[{"FRA":"<p>Le montant facturé pour chacune des offres dans la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Pour que la facture soit valide, le montant testé doit passer le test.</p><p>Si la liste des offres est vide, alors la règle passera toujours.</p><p>Seule les offres effectivement présentes sur la facture seront testées.</p>","ENG":"<p>Amount invoiced for each offer in the list will be compared to the provided value using the selected operator</p><p>For the invoice to be valid, tested amount must pass the test.</p><p>If offer list is empty, then rule will always pass.</p><p>Only offer actually present on invoice will be tested.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="offers" />
			<column name="description_i18n" value='{"FRA":"Offres à vérifier","ENG":"Offers to check"}'/>
			<column name="class_name" value="org.meveo.model.catalog.OfferTemplate" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmount')" />
		</insert>
		
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="description_i18n" value='{"FRA":"Montant à tester","ENG":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="without tax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="without tax|with tax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmount')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FRA":"Operateur de comparaison","ENG":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmount')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="description_i18n" value='{"FRA":"Valeur","ENG":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferAmount')" />
		</insert>
		
		<!-- Script :  ValidateCreditCategory -->
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCreditCategoryScript')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.validation.ValidateCreditCategoryScript'</where>
		</delete>
		
		 <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateCreditCategory" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateCreditCategory extends ValidateCreditCategoryScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The customer (customer account actually) credit category must not be in the provided list for the rule to pass.If customer credit category is in the list, the rule will fail.If credit category list is empty, then rule will always pass."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The customer's (customer account actually) credit category must not be in the provided list for the rule to pass.</p><p>If customer's credit category is in the list, the rule will fail.</p><p>If credit category list is empty, then rule will always pass.</p>","FRA":"<p>Le catégorie de crédit du client (customer account) ne doit pas être dans la liste fournie pour que la règle passe.</p><p>Si la catégorie de crédit du client est dans la liste, la règle va échouer.</p><p>Si la liste de catégories de crédit est vide, la règle passera toujours.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="CheckCreditCategory" />
			<column name="description_i18n" value='{"FRA":"Catégories de crédit interdites","ENG":"Forbidden credit categories"}'/>
			<column name="class_name" value="org.meveo.model.payments.CreditCategory" />
			<column name="mandatory" valueNumeric="0" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCreditCategory')" />
		</insert>
		
		<!-- Script :  CompareOfferLinesAmount -->
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmountScript')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.CompareOfferLinesAmountScript'</where>
		</delete>
		
		<insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.CompareOfferLinesAmount" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script;
            		public class CompareOfferLinesAmount extends CompareOfferLinesAmountScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
			<column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator. For the invoice to be valid, all tested invoice lines must pass the test. If offer list is empty, then rule will always pass. Only offer actually present on invoice will be tested."/>
			<column name="description_i18n">
				<![CDATA[{"ENG":"<p>Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.</p><p>For the invoice to be valid, all tested invoice lines must pass the test.</p><p>If offer list is empty, then rule will always pass.</p><p>Only offer actually present on invoice will be tested.</p>",
				"FRA":"<p>Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Pour que la facture soit valide, toutes les lignes de facture testées doivent passer le test.</p><p>Si la liste des offres est vide, alors la règle passera toujours.</p><p>Seule les offres effectivement présentes sur la facture seront testées.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="offers" />
			<column name="description_i18n" value='{"FRA":"Offres à vérifier","ENG":"Offers to check"}'/>
			<column name="class_name" value="org.meveo.model.catalog.OfferTemplate" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="1" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmount')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="withOrWithoutTax" />
			<column name="description_i18n" value='{"FRA":"Montant à tester","ENG":"Amount to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value="without tax" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="without tax|with tax" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmount')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FRA":"Operateur de comparaison","ENG":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmount')" />
		</insert>
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="value" />
			<column name="description_i18n" value='{"FRA":"Valeur","ENG":"Value"}'/>
			<column name="class_name" value="java.math.BigDecimal" />
			<column name="default_value" value="0" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmount')" />
		</insert>
		
		<!-- Script :  ValidateCustomerAge -->
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.validation.ValidateCustomerAge'</where>
		</delete>
		
		  <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateCustomerAge" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateCustomerAge extends ValidateCustomerAgeScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days. Age is computed at invoice date. For the invoice to be valid, age must pass the test."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days.</p><p>Age is computed at invoice date.</p><p>For the invoice to be valid, age must pass the test.</p>","FRA":"<p>L’âge du client (Customer/Groupe, Customer Account/Compte payeur, Billing account/Compte de facturation) est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p><p>Pour que la facture soit valide, l'âge doit passer le test.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="referenceDate" />
			<column name="description_i18n" value='{"FRA":"Date à tester","ENG":"Date to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="mandatory" valueNumeric="1" />
			<column name="default_value" value="Billling Account subscription" />
			<column name="allowed_values" value="Customer creation|Customer Account creation|Billing Account creation|Billing Account subscription" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FRA":"Operateur de comparaison","ENG":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="age" />
			<column name="description_i18n" value='{"FRA":"Âge en jour","ENG":"Age in days"}'/>
			<column name="class_name" value="java.lang.Integer" />
			<column name="default_value" value="30" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateCustomerAge')" />
		</insert>
		
		<!-- Script :  ValidateSubscriptionAge -->	
		<delete tableName="meveo_script_parameter">
			<where>script_instance_id = (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')</where>
		</delete>
		<delete tableName="meveo_script_instance">
			<where>code = 'org.meveo.service.script.validation.ValidateSubscriptionAge'</where>
		</delete>
		
		 <insert tableName="meveo_script_instance">
        	<column name="id" valueSequenceNext="meveo_script_instance_seq" />
        	<column name="code" value="org.meveo.service.script.validation.ValidateSubscriptionAge" />
        	<column name="script">
        		<![CDATA[   package org.meveo.service.script.validation;
            		public class ValidateSubscriptionAge extends ValidateSubscriptionAgeScript {}]]>
        	</column>
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="version" valueNumeric="1" />
            <column name="src_type" value="JAVA" />
            <column name="description" value="The invoice’s subscriptions age in Opencell is compared to a provided number of days. Age is computed at invoice date. For the invoice to be valid, age must pass the test."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The invoice’s subscriptions age in Opencell is compared to a provided number of days.</p><p>Age is computed at invoice date.</p><p>For the invoice to be valid, age must pass the test.</p>","FRA":"<p><L’âge des souscriptions de la facture est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p><p>Pour que la facture soit valide, l'âge doit passer le test.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='INVOICE_VALIDATION')" />
        </insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="referenceDate" />
			<column name="description_i18n" value='{"FRA":"Date à tester","ENG":"Date to test"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="mandatory" valueNumeric="1" />
			<column name="default_value" value="Subscription date" />
			<column name="allowed_values" value="Subscription creation|Subscription date" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>
	
		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="operator" />
			<column name="description_i18n" value='{"FRA":"Operateur de comparaison","ENG":"Comparison operator"}'/>
			<column name="class_name" value="java.lang.String" />
			<column name="default_value" value=">" />
			<column name="mandatory" valueNumeric="1" />
			<column name="allowed_values" value="&lt;|≤|=|≠|&gt;|≥" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>

		<insert tableName="meveo_script_parameter">
			<column name="id" valueSequenceNext="meveo_script_parameter_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="age" />
			<column name="description_i18n" value='{"FRA":"Âge en jour","ENG":"Age in days"}'/>
			<column name="class_name" value="java.lang.Integer" />
			<column name="default_value" value="30" />
			<column name="mandatory" valueNumeric="1" />
			<column name="values_separator" value="\|" />
			<column name="collection" valueNumeric="0" />
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.validation.ValidateSubscriptionAge')" />
		</insert>
    </changeSet>

    <changeSet id="#INTRD-12906_20230215" author="hichamELHALOUI">
        <update tableName="meveo_job_instance">
            <column name="following_job_id" value="null" ></column>
            <where>following_job_id in (select id from meveo_job_instance where code in ('ValidateBR_Job', 'Inv_Job' ))</where>
        </update>
    </changeSet>
    <changeSet id="#INTRD-12906_20230112" author="hichamELHALOUI">
        <delete tableName="adm_script_exec_role">
            <where>script_instance_id  in (select id from meveo_script_instance where code='org.meveo.service.script.ValidateBRScript')</where>
        </delete>
        <delete tableName="adm_script_sourc_role">
            <where>script_instance_id  in (select id from meveo_script_instance where code='org.meveo.service.script.ValidateBRScript')</where>
        </delete>
        <delete tableName="meveo_script_parameter">
            <where>script_instance_id  in (select id from meveo_script_instance where code='org.meveo.service.script.ValidateBRScript')</where>
        </delete>
        <delete tableName="meveo_script_instance">
	        <where>code='org.meveo.service.script.ValidateBRScript'</where>
	    </delete>

        <delete tableName="job_execution">
	        <where>job_instance_id  in (select id from meveo_job_instance where code in ('ValidateBR_Job' , 'Inv_Job' ))</where>
	    </delete>
        <delete tableName="meveo_job_instance">
	        <where>code='ValidateBR_Job'</where>
	    </delete>
        <delete tableName="meveo_job_instance">
	        <where>code='Inv_Job'</where>
	    </delete>
    </changeSet>
	
	<changeSet id="#INTRD-13122_20220111" author="HichamHANINE">	
		<update tableName="billing_invoice_type">
			<column name="invoice_subject_code" valueComputed="(SELECT id FROM untdid_4451_invoice_subject_code where code = 'IND')"></column>
			<where>code in ('COM','ADJ_INV', 'ADJ_REF', 'ADJ', 'SECURITY_DEPOSIT', 'ADV')</where>
		</update>

		<update tableName="billing_accounting_article">
			<column name="allowance_code" valueComputed="(SELECT id FROM untdid_5189_allowance_code Where code = '95')"></column>
		</update>		
	
		<update tableName="ar_payment_token">
			<column name="payment_means" valueComputed="(SELECT id from untdid_4461_payment_means where code = '10')"></column>
			<where>token_type = 'CASH'</where>
		</update>		
		<update tableName="ar_payment_token">
			<column name="payment_means" valueComputed="(SELECT id from untdid_4461_payment_means where code = '20')"></column>
			<where>token_type = 'CHECK'</where>
		</update>
		<update tableName="ar_payment_token">
			<column name="payment_means" valueComputed="(SELECT id from untdid_4461_payment_means where code = '49')"></column>
			<where>token_type = 'DIRECTDEBIT'</where>
		</update>
		<update tableName="ar_payment_token">
			<column name="payment_means" valueComputed="(SELECT id from untdid_4461_payment_means where code = '54')"></column>
			<where>token_type = 'CARD'</where>
		</update>
		<update tableName="ar_payment_token">
			<column name="payment_means" valueComputed="(SELECT id from untdid_4461_payment_means where code = '68')"></column>
			<where>token_type = 'PAYPAL'</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-12801_INTRD-12806__20230110" author="AbdellatifBARI">
        <update tableName="meveo_job_instance">
            <column name="cf_values"><![CDATA[{"nbRuns":[{"long":1}],
                "waitingMillis":[{"long":0}],
                "oneFilePerJob":[{"boolean":false}],
                "FlatFileProcessingJob_inputDir":[{"string":"/imports/massImport/subscription/input"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/massImport/subscription/archive"}],
                "FlatFileProcessingJob_rejectDir":[{"string":"/imports/massImport/subscription/reject"}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/massImport/subscription/output"}],
	            "FlatFileProcessingJob_fileNameExtension":[{"string":"csv"}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_USERACCOUNT_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_STATUS\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DESCRIPTION\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_OFFER_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SELLER_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ENDAGREEMENTDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_TERMINATIONDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_BC*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMTYPE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_DURATIONTYPE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMLENGTH\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_INITTERMUNIT\"  ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_ENDTERMACTION\"  ignore=\"true\" />\r\n\t\t\t<field name=\"OC_SUB_TERMINATIONREASON\"  ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILL\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAIL\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAILS\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_USERACCOUNT_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\"/>\r\n\t\t\t<field name=\"OC_STATUS\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DESCRIPTION\" />\r\n\t\t\t<field name=\"OC_OFFER_CODE\" />\r\n\t\t\t<field name=\"OC_SELLER_CODE\" />\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_DATE\" />\r\n\t\t\t<field name=\"OC_ENDAGREEMENTDATE\" />\r\n\t\t\t<field name=\"OC_TERMINATIONDATE\" />\r\n\t\t\t<field name=\"OC_SUB_BC\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMTYPE\" />\r\n\t\t\t<field name=\"OC_SUB_DURATIONTYPE\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMLENGTH\" />\r\n\t\t\t<field name=\"OC_SUB_INITTERMUNIT\" />\r\n\t\t\t<field name=\"OC_SUB_ENDTERMACTION\" />\r\n\t\t\t<field name=\"OC_SUB_TERMINATIONREASON\" />\r\n\t\t\t<field name=\"OC_SUB_EBILL\" />\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAIL\" />\r\n\t\t\t<field name=\"OC_SUB_EBILLEMAILS\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
                "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.SubscriptionMassImportScript"}],
                "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
                "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
                "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
                "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}]}]]></column>
            <where>code='massImportSubscriptionJob'</where>
        </update>
        <update tableName="meveo_job_instance">
            <column name="cf_values"><![CDATA[{"nbRuns":[{"long":1}],
                "waitingMillis":[{"long":0}],
                "oneFilePerJob":[{"boolean":false}],
                "FlatFileProcessingJob_inputDir":[{"string":"/imports/massImport/serviceInstance/input"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/massImport/serviceInstance/archive"}],
                "FlatFileProcessingJob_rejectDir":[{"string":"/imports/massImport/serviceInstance/reject"}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/massImport/serviceInstance/output"}],
	            "FlatFileProcessingJob_fileNameExtension":[{"string":"csv"}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_DESC\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_QTY\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_DELIV_DT\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_DESC\"/>\r\n\t\t\t<field name=\"OC_PRODUCT_CODE\" />\r\n\t\t\t<field name=\"OC_PRODUCT_QTY\" />\r\n\t\t\t<field name=\"OC_PRODUCT_DELIV_DT\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
                "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.ServiceInstanceImportScript"}],
                "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
                "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
                "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
                "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}]}]]></column>
            <where>code='massImportServiceInstanceJob'</where>
        </update>
        <update tableName="meveo_job_instance">
            <column name="cf_values"><![CDATA[{"nbRuns":[{"long":1}],
                "waitingMillis":[{"long":0}],
                "oneFilePerJob":[{"boolean":false}],
                "FlatFileProcessingJob_inputDir":[{"string":"/imports/massImport/attributeInstance/input"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/massImport/attributeInstance/archive"}],
                "FlatFileProcessingJob_rejectDir":[{"string":"/imports/massImport/attributeInstance/reject"}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/massImport/attributeInstance/output"}],
	            "FlatFileProcessingJob_fileNameExtension":[{"string":"csv"}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SERVICE_INSTANCE_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_VALUE\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SERVICE_INSTANCE_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_CODE\"/>\r\n\t\t\t<field name=\"OC_SI_ATTRIB_VALUE\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
                "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.AttributeInstanceImportScript"}],
                "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
                "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
                "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
                "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}]}]]></column>
            <where>code='massImportAttributeInstance'</where>
        </update>
        <update tableName="meveo_job_instance">
            <column name="cf_values"><![CDATA[{"nbRuns":[{"long":1}],
                "waitingMillis":[{"long":0}],
                "oneFilePerJob":[{"boolean":false}],
                "FlatFileProcessingJob_inputDir":[{"string":"/imports/massImport/accessPoint/input"}],
	            "FlatFileProcessingJob_archiveDir":[{"string":"/imports/massImport/accessPoint/archive"}],
                "FlatFileProcessingJob_rejectDir":[{"string":"/imports/massImport/accessPoint/reject"}],
	            "FlatFileProcessingJob_outputDir":[{"string":"/imports/massImport/accessPoint/output"}],
	            "FlatFileProcessingJob_fileNameExtension":[{"string":"csv"}],
	            "FlatFileProcessingJob_nbLinesToProcess":[{"long":1}],
	            "FlatFileProcessingJob_mappingConf":[{"string":"<beanio\r\n\txmlns=\"http://www.beanio.org/2012/03\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.beanio.org/2012/03 http://www.beanio.org/2012/03/mapping.xsd\">\r\n\t<stream name=\"record\" format=\"csv\">\r\n\t\t<parser>\r\n\t\t\t<property name=\"delimiter\" value=\";\" />\r\n\t\t\t<property name=\"comments\" value=\"END\" />\r\n\t\t\t<property name=\"multilineEnabled\" value=\"true\" />\r\n\t\t</parser>\r\n\t\t<record name=\"header\" minOccurs=\"1\" maxOccurs=\"1\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_CODE*\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_STARTDATE\" ignore=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_ENDDATE\" ignore=\"true\"/>\r\n\t\t</record>\r\n\t\t<record name=\"details\" minOccurs=\"1\" maxOccurs=\"unbounded\" class=\"map\">\r\n\t\t\t<field name=\"OC_ENTITY\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACTION\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_SUBSCRIPTION_CODE\" required=\"true\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_CODE\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_STARTDATE\"/>\r\n\t\t\t<field name=\"OC_ACCESSPOINT_ENDDATE\" />\r\n          \t<field name=\"OC_CFS\" type=\"String\" collection=\"list\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\r\n\t\t</record>\r\n\t</stream>\r\n</beanio>"}],
                "FlatFileProcessingJob_scriptsFlow":[{"string":"org.meveo.service.script.AccessPointImportScript"}],
                "FlatFileProcessingJob_recordVariableName":[{"string":"record"}],
                "FlatFileProcessingJob_originFilename":[{"string":"origin_filename"}],
                "FlatFileProcessingJob_formatTransfo":[{"string":"None"}],
                "FlatFileProcessingJob_errorAction":[{"string":"CONTINUE"}]}]]></column>
            <where>code='massImportAccessPoint'</where>
        </update>
    </changeSet>

    <changeSet id="#INTRD-13192_20230116" author="AbdellatifBARI">
        <update tableName="meveo_script_instance">
            <column name="script">
                <![CDATA[
package org.meveo.service.script;

import org.apache.commons.lang3.StringUtils;
import org.meveo.admin.exception.BusinessException;
import org.meveo.admin.exception.ValidationException;
import org.meveo.api.billing.SubscriptionApi;
import org.meveo.api.dto.billing.AttributeInstanceDto;
import org.meveo.api.dto.billing.ServiceToUpdateDto;
import org.meveo.api.dto.billing.UpdateServicesRequestDto;
import org.meveo.api.dto.cpq.ProductToInstantiateDto;
import org.meveo.model.billing.AttributeInstance;
import org.meveo.model.billing.ServiceInstance;
import org.meveo.model.billing.Subscription;
import org.meveo.service.billing.impl.ServiceInstanceService;
import org.meveo.service.billing.impl.SubscriptionService;
import org.meveo.service.script.GenericMassImportScript;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ServiceInstanceImportScript extends GenericMassImportScript {

    private static final String DATE_FORMAT_PATTERN = "dd/MM/yyyy";
    private static final String RECORD_VARIABLE_NAME = "record";
    private static final String ENTITY = "SERVICE_INSTANCE";
    private static final String ENTITY_NAME = "ServiceInstance";

    public enum ServiceInstanceActionEnum {
        CREATE, UPDATE, DELETE
    }

    private final ServiceInstanceService serviceInstanceService = (ServiceInstanceService) getServiceInterface("ServiceInstanceService");
    private final SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface("SubscriptionService");
    private final SubscriptionApi subscriptionApi = (SubscriptionApi) getServiceInterface(SubscriptionApi.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> context) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            Map<String, Object> recordMap = (Map<String, Object>) context.get(RECORD_VARIABLE_NAME);
            if (recordMap != null && !recordMap.isEmpty()) {
                // VALIDATE ENTITY
                String OC_ENTITY = (String) recordMap.get("OC_ENTITY");
                if (!ENTITY.equals(OC_ENTITY)) {
                    throw new ValidationException("value of OC_ENTITY is not correct: " + OC_ENTITY);
                }
                // VALIDATE ACTION
                String OC_ACTION = (String) recordMap.get("OC_ACTION");
                if (Stream.of(ServiceInstanceActionEnum.values()).noneMatch(e -> e.toString().equals(OC_ACTION))) {
                    throw new ValidationException("value of OC_ACTION is not correct: " + OC_ACTION);
                }

                ServiceInstanceActionEnum action = ServiceInstanceActionEnum.valueOf(OC_ACTION);

                ProductToInstantiateDto productToInstantiateDto = validateAndGetServiceInstance(action, recordMap);

                if (ServiceInstanceActionEnum.CREATE.equals(action)) {
                    setServiceInstanceValues(recordMap, productToInstantiateDto);

                    Subscription subscription = subscriptionService.findByCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
                    ServiceInstance si = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);
                    this.setCFValues(recordMap, si, ENTITY_NAME);
                }
            }
        } catch (Exception exception) {
            throw new BusinessException(exception);
        }
    }

    private ProductToInstantiateDto validateAndGetServiceInstance(ServiceInstanceActionEnum action, Map<String, Object> recordMap) {
        ProductToInstantiateDto productToInstantiateDto = null;

        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        if (OC_subscription_code.isEmpty()) {
            throw new ValidationException("subscription_code is required");
        }

        String OC_si_code = (String) recordMap.get("OC_SI_CODE");
        if (OC_si_code.isEmpty()) {
            throw new ValidationException("serviceinstance_code is required");
        }

        productToInstantiateDto = new ProductToInstantiateDto();
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);
        if (subscription == null) {
            throw new ValidationException("no subscription found for code: '" + OC_subscription_code + "'");
        }

        return productToInstantiateDto;
    }

    private void setServiceInstanceValues(Map<String, Object> recordMap, ProductToInstantiateDto productToInstantiateDto) throws ParseException {
        String OC_subscription_code = (String) recordMap.get("OC_SUBSCRIPTION_CODE");
        Subscription subscription = subscriptionService.findByCode(OC_subscription_code);

        // Instantiate products
        DateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN);
        dateFormat.setLenient(false);

        String OC_product_deliv_dt = (String) recordMap.get("OC_PRODUCT_DELIV_DT");
        productToInstantiateDto.setProductCode((String) recordMap.get("OC_PRODUCT_CODE"));
        productToInstantiateDto.setQuantity(new BigDecimal((String) recordMap.get("OC_PRODUCT_QTY")));
        try {
            Date deliveryDate = StringUtils.isEmpty(OC_product_deliv_dt) ? null : dateFormat.parse(OC_product_deliv_dt);
            productToInstantiateDto.setDeliveryDate(deliveryDate);
        } catch(ParseException e) {
            throw new ValidationException("Incorrect date format for delivery date. Please use 'dd/MM/yyyy'");
        }

        List<ProductToInstantiateDto> products = new ArrayList<>();
        products.add(productToInstantiateDto);

        subscriptionApi.instanciateProduct(OC_subscription_code, products);
        serviceInstanceService.getEntityManager().flush();

        // Save SI description
        UpdateServicesRequestDto requestDto = new UpdateServicesRequestDto();
        ServiceInstance serviceInstance = serviceInstanceService.findByCodeAndCodeSubscriptionId((String) recordMap.get("OC_PRODUCT_CODE"), subscription);

        List<AttributeInstance> attributeInstances = serviceInstance.getAttributeInstances();
        List<AttributeInstanceDto> aiDto = attributeInstances.stream().map(attribute ->
                new AttributeInstanceDto(attribute, null)).collect(Collectors.toList());

        requestDto.setSubscriptionCode((String) recordMap.get("OC_SUBSCRIPTION_CODE"));
        ServiceToUpdateDto serviceDto = new ServiceToUpdateDto();
        serviceDto.setId(serviceInstance.getId());
        serviceDto.setCode(serviceInstance.getCode());
        serviceDto.setDescription((String) recordMap.get("OC_SI_DESC"));

        requestDto.addService(serviceDto);
        requestDto.setAttributeInstances(aiDto);

        subscriptionApi.updateServiceInstance(requestDto);
    }
}
				]]>
            </column>
            <where>code='org.meveo.service.script.ServiceInstanceImportScript'</where>
        </update>
    </changeSet>

    <changeSet id="#INTRD-13260_20230116" author="hichamELHALOUI">
        <update tableName="meveo_script_instance">
            <column name="script">
				<![CDATA[
package org.meveo.service.script;

import org.joda.time.DateTime;
import org.meveo.admin.exception.BusinessException;
import org.meveo.api.UserApi;
import org.meveo.api.dto.CustomFieldDto;
import org.meveo.api.dto.CustomFieldsDto;
import org.meveo.api.dto.job.JobInstanceInfoDto;
import org.meveo.api.job.JobApi;
import org.meveo.model.communication.email.EmailTemplate;
import org.meveo.model.jobs.JobExecutionResultImpl;
import org.meveo.service.communication.impl.EmailSender;
import org.meveo.service.communication.impl.EmailTemplateService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.meveo.commons.utils.ParamBean;

import static org.meveo.service.base.ValueExpressionWrapper.evaluateExpression;

public class ImportJobNotification extends Script {
    private static final String USER_CODE = "user";
    private static final String FROM_EMAIL = ParamBean.getInstance().getProperty("email.sender", "no_reply@opencellsoft.com");

    private static final String MASS_IMPORT_SUCCESS_EMAIL = "MASS_IMPORT_SUCCESS_EMAIL";
    private static final String MASS_IMPORT_FAILURE_EMAIL = "MASS_IMPORT_FAILURE_EMAIL";
    private static final String MASS_IMPORT_ISSUES_EMAIL = "MASS_IMPORT_ISSUES_EMAIL";

    private static final String CUSTOMER_JOB_CODE = "massImportCustomerJob";
    private static final String CUSTOMER_ACCOUNT_JOB_CODE = "massImportCustomerAccountJob";
    private static final String PAYMENT_METHOD_JOB_CODE = "massImportPaymentMethodJob";
    private static final String BILLING_ACCOUNT_JOB_CODE = "massImportBillingAccountJob";
    private static final String USER_ACCOUNT_JOB_CODE = "massImportUserAccountJob";

    private static final String SUBSCRIPTION_JOB_CODE = "massImportSubscriptionJob";
    private static final String SERVICE_INSTANCE_JOB_CODE = "massImportServiceInstanceJob";
    private static final String ATTRIBUTE_INTSNACE_JOB_CODE = "massImportAttributeInstance";
    private static final String ACCESS_POINT_JOB_CODE = "massImportAccessPoint";

    private final transient JobApi jobApi = (JobApi) getServiceInterface(JobApi.class.getSimpleName());
    private final transient UserApi userApi = (UserApi) getServiceInterface(UserApi.class.getSimpleName());

    private final transient EmailSender emailSender = (EmailSender) getServiceInterface(EmailSender.class.getSimpleName());
    private final transient EmailTemplateService emailTemplateService = (EmailTemplateService) getServiceInterface(EmailTemplateService.class.getSimpleName());

    @Override
    public void execute(Map<String, Object> methodContext) throws BusinessException {
        try {
            @SuppressWarnings("unchecked")
            String category = (String) methodContext.get("category");
            JobExecutionResultImpl jobExecutionResult = (JobExecutionResultImpl) methodContext.get("entityOrEvent");
            JobResultStatusEnum jobStatus = getJobResultStatus(jobExecutionResult);
            String userName = (String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE);

            if (category == null || !category.equals("customer") || userName == null) return;
            executeNextJob(jobExecutionResult);

            // if there are no rows to process, we don't send a notification
            if(jobExecutionResult.getNbItemsToProcess() == 0) return;

            String subject;
            String contentHtml;
            Map<Object, Object> params = new HashMap<>();
            EmailTemplate emailTemplate;


            String jobCode = jobExecutionResult.getJobInstance().getCode();
            params.put("entityName", EntityNameEnum.valueOf(jobCode).entity);
            switch (jobStatus) {
                case SUCCESS:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_SUCCESS_EMAIL);
                    DateTime startDateTime = new DateTime(jobExecutionResult.getStartDate());
                    params.put("date", startDateTime.toLocalDate());
                    params.put("time", startDateTime.toLocalTime());
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                case FAILURE:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_FAILURE_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
                default:
                    emailTemplate = emailTemplateService.findByCode(MASS_IMPORT_ISSUES_EMAIL);
                    contentHtml = evaluateExpression(emailTemplate.getHtmlContent(), params, String.class);
                    subject = evaluateExpression(emailTemplate.getSubject(), params, String.class);
                    break;
            }

            List<String> toEmails = List.of(userApi.find(userName).getEmail());
            emailSender.send(FROM_EMAIL, null, toEmails, subject, null, contentHtml);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void executeNextJob(JobExecutionResultImpl jobExecutionResult) {
        String nextJobCode;
        switch (jobExecutionResult.getJobInstance().getCode()) {
            case CUSTOMER_JOB_CODE:
                nextJobCode = CUSTOMER_ACCOUNT_JOB_CODE;
                break;
            case CUSTOMER_ACCOUNT_JOB_CODE:
                nextJobCode = PAYMENT_METHOD_JOB_CODE;
                break;
            case PAYMENT_METHOD_JOB_CODE:
                nextJobCode = BILLING_ACCOUNT_JOB_CODE;
                break;
            case BILLING_ACCOUNT_JOB_CODE:
                nextJobCode = USER_ACCOUNT_JOB_CODE;
                break;
            case SUBSCRIPTION_JOB_CODE:
                nextJobCode = SERVICE_INSTANCE_JOB_CODE;
                break;
            case SERVICE_INSTANCE_JOB_CODE:
                nextJobCode = ATTRIBUTE_INTSNACE_JOB_CODE;
                break;
            case ATTRIBUTE_INTSNACE_JOB_CODE:
                nextJobCode = ACCESS_POINT_JOB_CODE;
                break;
            default:
                return;
        }
        JobInstanceInfoDto jobInstanceInfoDto = new JobInstanceInfoDto();
        jobInstanceInfoDto.setCode(nextJobCode);
        CustomFieldsDto customFields = new CustomFieldsDto();
        CustomFieldDto customFieldDto = new CustomFieldDto();
        customFieldDto.setCode(USER_CODE);
        customFieldDto.setStringValue((String) jobExecutionResult.getJobInstance().getCfValues().getValues().get(USER_CODE));
        customFields.setCustomField(List.of(customFieldDto));
        jobInstanceInfoDto.setCustomFields(customFields);

        jobApi.executeJob(jobInstanceInfoDto);
    }

    private JobResultStatusEnum getJobResultStatus(JobExecutionResultImpl jobExecutionResult) {
        if(jobExecutionResult.getNbItemsToProcess() == 0)
            return JobResultStatusEnum.NULL;
        else if (jobExecutionResult.getNbItemsProcessedWithError() + 1 == jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.FAILURE;
        else if(jobExecutionResult.getNbItemsCorrectlyProcessed() < jobExecutionResult.getNbItemsToProcess())
            return JobResultStatusEnum.PARTIAL_SUCCESS;
        else return JobResultStatusEnum.SUCCESS;
    }

    private enum JobResultStatusEnum {
        SUCCESS,
        FAILURE,
        PARTIAL_SUCCESS,
        NULL
    }

    private enum EntityNameEnum {
        massImportCustomerJob("Customer"),
        massImportCustomerAccountJob("CustomerAccount"),
        massImportPaymentMethodJob("PaymentMethod"),
        massImportBillingAccountJob("BillingAccount"),
        massImportUserAccountJob("UserAccount"),
        massImportSubscriptionJob("Subscription"),
        massImportServiceInstanceJob("ServiceInstance"),
        massImportAttributeInstance("AttributeInstance"),
        massImportAccessPoint("AccessPoint");

        String entity;

        EntityNameEnum(String entity) {
            this.entity = entity;
        }

    }
}
				]]>
			</column>
            <where>code='org.meveo.service.script.ImportJobNotification'</where>
        </update>
    </changeSet>

    <changeSet id="#INTRD-12327_20230117" author="AbdellatifBARI">
        <update tableName="ADM_COUNTRY">
            <column name="description" value="Réunion"/>
            <column name="description_i18n" value='{"FRA":"Réunion","ENG":"Réunion"}' />
            <where>id=177</where>
        </update>
        <update tableName="ADM_COUNTRY">
            <column name="description" value="Santo Tomas and Principe"/>
            <column name="description_i18n" value='{"FRA":"Sao Tomé et Principe","ENG":"Santo Tomas and Principe"}' />
            <where>id=196</where>
        </update>
    </changeSet>

    <changeSet id="INTRD-13237_20230119" author="HichamELHALOUI" >
        <update tableName="billing_cycle">
			<column name="filters" value='{"billingAccount.billingCycle.code":"{{billingCycle.code}}"}'></column>
			<where>filters = null and  billing_cycle_type='BILLINGACCOUNT'</where>
		</update>

        <update tableName="billing_cycle">
			<column name="filters" value='{"subscription.billingCycle.code":"{{billingCycle.code}}"}'></column>
			<where>filters = null and  billing_cycle_type='SUBSCRIPTION'</where>
		</update>

        <update tableName="billing_cycle">
			<column name="filters" value='{"infoOrder.order.billingCycle.code":"{{billingCycle.code}}"}'></column>
			<where>filters = null and  billing_cycle_type='ORDER'</where>
		</update>

    </changeSet>

    <changeSet id="#INTRD-12463_20230119" author="AbdellatifBARI">
        <update tableName="billing_invoice_configuration">
            <column name="default_invoice_subcategory_id" valueNumeric="-3"></column>
            <column name="default_generic_article_id" valueNumeric="-3"></column>
            <column name="default_discount_article_id" valueNumeric="-2"></column>
            <column name="default_advanced_payment_article_id" valueNumeric="-5"></column>
            <column name="default_invoice_minimum_article_id" valueNumeric="-4"></column>
            <where>id=-1</where>
        </update>
    </changeSet>
    
    <changeSet id="#INTRD-13386_20230223" author="TarikFA.">
        <update tableName="meveo_script_instance">
            <column name="script">
					<![CDATA[
					package org.meveo.service.script;


					public class ImportJobNotification extends ImportJobNotificationScript {
					}
					]]>
			</column>
            <where>code='org.meveo.service.script.ImportJobNotification'</where>
    	</update>
    </changeSet>
    
    <changeSet id="#INTRD-13421_20230123" author="TarikFA.">
        <update tableName="meveo_script_instance">
            <column name="script">
					<![CDATA[
					 package org.meveo.service.script;

/**
 * @author phung
 *
 */
public class ValidateBRScript extends ValidateBR {

}
					]]>
			</column>
            <where>code='org.meveo.service.script.ValidateBRScript'</where>
    	</update>
    </changeSet>

    <changeSet id="#INTRD-13314_20230123" author="zelmeliani">
        <update tableName="billing_tax_mapping">
            <column name="tax_category_id" value="-3"/>
            <where>tax_category_id=-1</where>
        </update>
        <update tableName="crm_customer_category">
            <column name="tax_category_id" value="-3"/>
            <where>tax_category_id=-1</where>
        </update>
        <update tableName="billing_billing_account">
            <column name="tax_category_id" value="-3"/>
            <where>tax_category_id=-1</where>
        </update>
        <delete tableName="billing_tax_category">
            <where>id=-1 and code = 'Tax category'</where>
        </delete>

        <update tableName="billing_tax_mapping">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <update tableName="cat_charge_template">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <update tableName="billing_wallet_operation">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <update tableName="billing_rated_transaction">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <update tableName="ar_payment_schedule_tmpl">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <update tableName="billing_accounting_article">
            <column name="tax_class_id" value="-5"/>
            <where>tax_class_id in (-1, -2)</where>
        </update>
        <delete tableName="billing_tax_class">
            <where>id=-1 and code = 'CMP_DATA'</where>
        </delete>
        <delete tableName="billing_tax_class">
            <where>id=-2 and code = 'SUB_DATA'</where>
        </delete>

    </changeSet>

    <changeSet id="#INTRD-13383_20230123" author="bourras">
        <insert tableName="meveo_script_instance">
            <column name="id" valueSequenceNext="meveo_script_instance_seq"/>
            <column name="version" valueNumeric="0"/>
            <column name="code" value="org.meveo.service.script.product.OneShotOtherTypeMigrationScript"/>
            <column name="src_type" value="JAVA"/>
            <column name="description" value="Migrate OneShot Charge of Type OTHER to INVOICING_PLAN"/>
            <column name="created" valueDate="${db.current.time}"/>
            <column name="script">
                <![CDATA[package org.meveo.service.script.product;
						public class OneShotOtherTypeMigration extends OneShotOtherTypeMigrationScript {}
				]]>
            </column>
        </insert>
    </changeSet>
    <changeSet id="#INTRD-13468_20230126" author="hichamELHALOUI">
        <update tableName="meveo_script_instance">
            <column name="description" value="Invoice amount will be compared to provided amount using the selected operator."/>
			<column name="description_i18n" value='{"FRA":"Le montant de la facture sera comparé au montant indiqué en utilisant l’opérateur sélectionné.","ENG":"Invoice amount will be compared to provided amount using the selected operator."}'/>
			<where>code = 'org.meveo.service.script.CompareInvoiceAmount'</where>
        </update>
        <update tableName="meveo_script_instance">
            <column name="description" value="Amount invoiced for each offer in the list will be compared to the provided value using the selected operator If offer list is empty, then rule will be ignored. Only offer actually present on invoice will be tested."/>
            <column name="description_i18n">
				<![CDATA[{"FRA":"<p>Le montant facturé pour chacune des offres dans la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Si la liste des offres est vide, alors la règle sera ignorée.</p><p>Seules les offres effectivement présentes sur la facture seront testées.</p>","ENG":"<p>Amount invoiced for each offer in the list will be compared to the provided value using the selected operator</p><p>If offer list is empty, then rule will be ignored.</p><p>Only offer actually present on invoice will be tested.</p>"}]]>
			</column>
            <where>code = 'org.meveo.service.script.CompareOfferAmount'</where>
        </update>
        <update tableName="meveo_script_instance">
            <column name="description" value="The customer's (customer account actually) credit category must not be in the provided list for the rule to pass. If customer's credit category is in the list, the rule will fail. If credit category list is empty, then rule will be ignored."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The customer's (customer account actually) credit category must not be in the provided list for the rule to pass.</p><p>If customer's credit category is in the list, the rule will fail.</p><p>If credit category list is empty, then rule will be ignored.</p>","FRA":"<p>Le catégorie de crédit du client (customer account) ne doit pas être dans la liste fournie pour que la règle passe.</p><p>Si la catégorie de crédit du client est dans la liste, la règle va échouer.</p><p>Si la liste de catégories de crédit est vide, la règle sera ignorée.</p>"}]]>
			</column>
            <where>code = 'org.meveo.service.script.validation.ValidateCreditCategory'</where>
        </update>
        <update tableName="meveo_script_instance">
            <column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator. Only offer from the list actually present on invoice will be tested. If offer list is empty, then all invoice lines will be tested regardless of their offer. For the test to pass, all tested invoice lines must pass the test."/>
			<column name="description_i18n">
				<![CDATA[{"ENG":"<p>Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.</p><p>Only offer from the list actually present on invoice will be tested</p><p>If offer list is empty, then all invoice lines will be tested regardless of their offer.</p><p>For the test to pass, all tested invoice lines must pass the test.</p>",
				"FRA":"<p>Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Seule les offres de la liste effectivement présentes sur la facture seront testées.</p><p>Si la liste des offres est vide, alors toutes les lignes de facture seront testées, quelle que soit leur offre.</p><p>Pour que le teste passe, toutes les lignes de facture testées doivent passer le test.</p>"}]]>
			</column>
            <where>code = 'org.meveo.service.script.CompareOfferLinesAmount'</where>
        </update>
        <update tableName="meveo_script_instance">
            <column name="description" value="The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days. Age is computed at invoice date."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The invoice’s customer (Customer/Group, Customer Account/Payer, Billing account) age is compared to a provided number of days.</p><p>Age is computed at invoice date.</p>","FRA":"<p>L’âge du client (Customer/Groupe, Customer Account/Compte payeur, Billing account/Compte de facturation) est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p>"}]]>
			</column>
            <where>code = 'org.meveo.service.script.validation.ValidateCustomerAge'</where>
        </update>
        <update tableName="meveo_script_instance">
            <column name="description" value="The invoice’s subscriptions age is compared to a provided number of days. Age is computed at invoice date."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>The invoice’s subscriptions age is compared to a provided number of days.</p><p>Age is computed at invoice date.</p>","FRA":"<p>L’âge de la souscription est comparé au nombre de jours indiqué.</p><p>L'âge est calculé à la date de facture.</p>"}]]>
			</column>
            <where>code = 'org.meveo.service.script.validation.ValidateSubscriptionAge'</where>
        </update>
    </changeSet>

    <changeSet id="#INTRD-13379_20230127" author="aeljaouhari">
		<update tableName="meveo_script_instance">
			<column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator. If offer list is empty, then all invoice lines will be tested regardless of their offer. For invoice to be valid, all invoice lines must pass the test. Only offer actually present on invoice will be tested."/>
			<column name="description_i18n">
				<![CDATA[{"ENG":"<p>Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.</p><p>If offer list is empty, then all invoice lines will be tested regardless of their offer.</p><p>For invoice to be valid, all invoice lines must pass the test.</p><p>Only offer actually present on invoice will be tested.</p>",
				"FRA":"<p>Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Si la liste des offres est vide, alors toutes les lignes de facture seront testées, quelle que soit leur offre.</p><p>Pour que la facture soit valide, toutes les lignes de facture testées doivent passer le test.</p><p>Seule les offres effectivement présentes sur la facture seront testées.</p>"}]]>
			</column>
			<where>code='org.meveo.service.script.CompareOfferLinesAmount'</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-13447_20230127" author="ZBariki">
        <insert tableName="generic_sequence">
            <column name="id" valueSequenceNext="bill_seq_invoice_seq"/>
            <column name="created" valueDate="${db.current.time}"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="version" valueNumeric="1"/>
            <column name="code" value="billing_cycle_sequence"/>
            <column name="description" value="Billing cycle sequence"/>
            <column name="sequence_type" value="SEQUENCE"/>
            <column name="sequence_size" valueNumeric="4"/>
            <column name="current_number" valueNumeric="1"/>
        </insert>
        <insert tableName="adm_custom_generic_entity_code">
            <column name="id" valueSequenceNext="adm_custom_generic_entity_code_seq"/>
            <column name="entity_class" value="org.meveo.model.billing.BillingCycle"/>
            <column name="format_el" value="BC-"/>
            <column name="created" valueDate="${db.current.time}"/>
            <column name="creator" value="applicationInitializer"/>
            <column name="sequence_id"
                    valueComputed="(SELECT id from generic_sequence where code = 'billing_cycle_sequence')"/>
        </insert>
    </changeSet>

    <changeSet id="#INTRD-13375_20230131" author="aeljaouhari">
    	<insert tableName="com_message_template">
			<column name="media" value="EMAIL" />
			<column name="id" valueSequenceNext="com_msg_tmpl_seq" />
			<column name="version" value="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="FR-Invoice" />
			<column name="tag_start" value="#{" />
			<column name="tag_end" value="}" />
			<column name="subject" value="Votre facture #{invoice.invoiceNumber}" />
			<column name="type" value="INVOICE" />
			<column name="htmlcontent">
				<![CDATA[
				#{billingAccount.isCompany?billingAccount.description:billingAccount.name.firstName+billingAccount.name.lastName}
#{billingAccount.address.address1}
#{billingAccount.address.zipCode} #{billingAccount.address.city}
#{billingAccount.contactInformation.phone}

#{billingAccount.customerAccount.isCompany?billingAccount.customerAccount.description:billingAccount.customerAccount.name.firstName+billingAccount.customerAccount.name.lastName}
#{billingAccount.customerAccount.address.address1}
#{billingAccount.customerAccount.address.zipCode} #{billingAccount.customerAccount.address.city}

#{billingAccount.customerAccount.seller.address.city}, le #{dayDate}

#{billingAccount.legalEntityType.code},

Nous vous prions de trouver attaché à cet email la facture #{invoice.invoiceNumber} d’un montant de #{invoice.netToPay}.

Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.

Company Signature
                ]]>
			</column>
		</insert>

		<insert tableName="com_message_template">
			<column name="media" value="EMAIL" />
			<column name="id" valueSequenceNext="com_msg_tmpl_seq" />
			<column name="version" value="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="EN-Invoice" />
			<column name="tag_start" value="#{" />
			<column name="tag_end" value="}" />
			<column name="subject" value="Your Invoice #{invoice.invoiceNumber}" />
			<column name="type" value="INVOICE" />
			<column name="htmlcontent">
				<![CDATA[
				#{billingAccount.isCompany?billingAccount.description:billingAccount.name.firstName+billingAccount.name.lastName}
#{billingAccount.address.address1}
#{billingAccount.address.zipCode} #{billingAccount.address.city}
#{billingAccount.contactInformation.phone}

#{billingAccount.customerAccount.isCompany?billingAccount.customerAccount.description:billingAccount.customerAccount.name.firstName+billingAccount.customerAccount.name.lastName}
#{billingAccount.customerAccount.address.address1}
#{billingAccount.customerAccount.address.zipCode} #{billingAccount.customerAccount.address.city}


#{billingAccount.customerAccount.seller.address.city}, on #{dayDate}

#{billingAccount.legalEntityType.code},

Please find attached the invoice #{invoice.invoiceNumber} for an amount of #{invoice.netToPay}

We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards.

Signature

Your name and surname
                ]]>
			</column>
		</insert>
	</changeSet>

    <changeSet id="INTRD-13608_20230130" author="HichamELHALOUI" >
         <update tableName="meveo_job_instance">
             <column name="following_job_id" value="null" />
            <where>following_job_id  in (select id from meveo_job_instance where code='DWH_Job_CHURN')</where>
        </update>
        <delete tableName="job_execution">
	        <where>job_instance_id  in (select id from meveo_job_instance where code='DWH_Job_CHURN')</where>
	    </delete>
        <delete tableName="meveo_job_instance">
            <where>code='DWH_Job_CHURN'</where>
        </delete>
    </changeSet>

    <changeSet id="INTRD-12782_20230131" author="zelmeliani">
        <update tableName="ar_dunning_action">
            <column name="type" value="INVOICE_LEVEL" />
        </update>
        <update tableName="dunning_level">
            <column name="type" value="INVOICE_LEVEL" />
        </update>
        <update tableName="dunning_policy">
            <column name="type" value="INVOICE_LEVEL" />
        </update>
        <update tableName="com_message_template">
            <column name="type_dunning_mode" value="INVOICE_LEVEL" />
            <where>media = 'DUNNING_MEDIA'</where>
        </update>
    </changeSet>

    <changeSet id="#INTRD-13717_20230202" author="aeljaouhari">
    	<update tableName="meveo_script_parameter">
			<column name="mandatory" valueNumeric="0" />
			<where>script_instance_id in (SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.CompareOfferLinesAmount') and code = 'offers'</where>
		</update>
	</changeSet>
	
	<changeSet id="#INTRD-13762_20230206" author="aelmalki">
		<update tableName="meveo_script_instance">
			<column name="script">
				<![CDATA[package org.meveo.service.script.demo;

import java.io.StringReader;
import java.util.Map;
import javax.xml.xpath.*;
import org.meveo.admin.exception.BusinessException;
import org.meveo.model.payments.*;
import org.meveo.service.script.payment.PaymentScript;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xml.sax.InputSource;

/**
 * @author anasseh
 */
public class CustomGatewayPaymentScript extends PaymentScript{
    private static final Logger log = LoggerFactory.getLogger(CustomGatewayPaymentScript.class);

    public void createCardToken(Map<String, Object> methodContext) throws BusinessException {
        methodContext.put(PaymentScript.RESULT_TOKEN, "7ced0000-3ab2-000d-6a50-08d4b8a6"+(int )(Math.random() * 1000 + 1));
    }
    public void doPaymentToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL");
    }
      public void doPaymentCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "PAL_CARD");
    }

    public void doRefundToken(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD");
    }
   public void doRefundCard(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD_CARD");
    }
   public void doRefundSepa(Map<String, Object> methodContext) throws BusinessException {
        doIt(methodContext, "RFD_SEPA");
    }

    private void doIt(Map<String, Object> methodContext,String operationType) throws BusinessException {
        try{
            log.debug("EXECUTE  methodContext {} ", methodContext);
            Long amountCts = (Long)methodContext.get(PaymentScript.CONTEXT_AMOUNT_CTS);
            if(amountCts == null){
                throw new BusinessException("amountCts is null");
            }
			
			if(!"RFD_SEPA".equals(operationType)) {
				CardPaymentMethod paymentToken = (CardPaymentMethod)methodContext.get(PaymentScript.CONTEXT_TOKEN);
				if(paymentToken == null && (operationType.equals("PAL") || operationType.equals("RFD"))){
					throw new BusinessException("paymentMethod is null");
				}
			}

            //DEMO : get tokenId or card infos from context
            String body  = "{";
            body  += " \"PSPID\" : \"PSPID\" ,";
            body  += " \"USERID\" : \"USERID\" ,";
            body  += " \"PSWD\" : \"PSWD\" ,";
            body  += " \"REFKIND\" :  \"PSPID\" ,";
            body  += " \"REFID\" : \"PSPID\" ,";
            body  += " \"OPERATION\" : \""+operationType +"\" ,";
            body  += " \"AMOUNT\" : \""+amountCts.longValue()+"\" ,";
            body  += " \"SHASIGN\" : \"SHASIGN\" ,";
            body  += " }";


            String paymentResponse = "<root>";
            paymentResponse += "<STATUS>92</STATUS>";
            paymentResponse += "<PAYID>"+((int )(Math.random() * 100000 + 1))+"</PAYID>";
            paymentResponse += "<TRANSACTIONID>92</TRANSACTIONID>";
            paymentResponse += "<CRMTOKEN>clientSide</CRMTOKEN>";
            paymentResponse += "<BRAND>VISA</BRAND>";
            paymentResponse += "<ACCEPTENCE>bankRef</ACCEPTENCE>";
            paymentResponse += "</root>";
            methodContext.put(PaymentScript.RESULT_PAYMENT_STATUS, PaymentStatusEnum.PENDING);
            methodContext.put(PaymentScript.RESULT_PAYMENT_ID, getValue(paymentResponse,"/root/PAYID"));
            methodContext.put(PaymentScript.RESULT_TRANSACTION_ID, getValue(paymentResponse,"/root/TRANSACTIONID"));
            methodContext.put(PaymentScript.RESULT_CODE_CLIENT_SIDE, getValue(paymentResponse,"/root/CRMTOKEN"));
            methodContext.put(PaymentScript.RESULT_PAYMENT_BRAND, getValue(paymentResponse,"/root/BRAND"));
            methodContext.put(PaymentScript.RESULT_BANK_REFERENCE, getValue(paymentResponse,"/root/ACCEPTENCE"));
        } catch (Exception e) {
            throw new BusinessException(e.getMessage());
        }
    }
    private String getValue(String sourceXML,String expression) throws XPathExpressionException{
        InputSource iSource = new InputSource(new StringReader(sourceXML));
        XPathFactory xpathFactory = XPathFactory.newInstance();
        XPath xpath = xpathFactory.newXPath();
        return xpath.evaluate(expression, iSource);
    }
}
                ]]>
			</column>
			<where>code='org.meveo.service.script.demo.CustomGatewayPaymentScript'</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-11208_20230131" author="zelmeliani">
        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-11" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B+5" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello, </p>
                    <p>We are reaching out to you in regards of your current balance that you have with our company. It seems you have debit of #{customerAccount balance} #{currencySymbol}.</p>
                    <p>
                        Please take necessary steps to insure payments of your last(s) invoice(s). <br>
                        You
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-12" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +10" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello, </p>
                    <p>We are following up on our previous email regarding your negative balance (that is currently of#{customerAccount balance} #{currencySymbol}).</p>
                    <p>
                        Please take contact with us to clear the situation.<br>
                        If you have already done a payment, you can discard this email.
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-13" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +20" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello, </p>
                    <p>It has now been 10 days since our first email regarding your current negative balance. Your current balance is #{customerAccount balance} #{currencySymbol}).</p>
                    <p>
                        Please take contact with us to clear the situation.<br>
                        If you have already done a payment, you can discard this email.
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-14" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +30" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello, </p>
                    <p>It seems our previous emails did not allow the expected outcome. Today, your current balance is of#{customerAccount balance} #{currencySymbol}).</p>
                    <p>As it seems we were not able to clear the situation, the services you have with us have been suspended.</p>
                    <p>If you have already done a payment, please contact us so that we can re-activate your services.</p>
                    <p>If you have any additional question, please contact our services.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-15" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +1" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>We are reaching out to you in regards of your current balance that you have with our company. It seems you have debit of #{customerAccount balance} #{currencySymbol}.</p>
                    <p>
                        Please take necessary steps to insure payments of your last(s) invoice(s). <br>
                        You
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-16" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +5" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>We are following up on our previous email regarding your negative balance (that is currently of#{customerAccount balance} #{currencySymbol}).</p>
                    <p>
                        Please take contact with us to clear the situation.<br>
                        If you have already done a payment, you can discard this email.
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-17" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +10" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>It has now been 10 days since our first email regarding your current negative balance. Your current balance is #{customerAccount balance} #{currencySymbol}).</p>
                    <p>
                        Please take contact with us to clear the situation.<br>
                        If you have already done a payment, you can discard this email.
                    </p>
                    <p>If you have any additional question, do not hesitate to contact our services or your regular point of contact.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-18" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +15" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-1" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Hello #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>It seems our previous emails did not allow the expected outcome. Today, your current balance is of#{customerAccount balance} #{currencySymbol}).</p>
                    <p>As it seems we were not able to clear the situation, the services you have with us have been suspended.</p>
                    <p>If you have already done a payment, please contact us so that we can re-activate your services.</p>
                    <p>If you have any additional question, please contact our services.</p>
                    <p>Best regards,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-19" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +5fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour,</p>
                    <p>Nous vous contactons au sujet de votre solde actuel auprèss de notre société. Il semble que vous ayez une position débitrice d’un montant de #{customerAccount balance} #{currencySymbol}.</p>
                    <p>Nous vous invitons a faire le nécessaires pour assurer le paiement de votre (vos) dernière(s) facture(s).</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-20" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +10fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour,</p>
                    <p>Nous donnons suite à notre précédent e-mail concernant votre solde négatif (actuellement de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>Merci de prendre contact avec nous pour échanger sur la situation.</p>
                    <p>Si vous avez déjà effectué un paiement, veuillez ne pas prendre cet e-mail en considération.</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-21" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +20fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour,</p>
                    <p>Cela fait maintenant 10 jours depuis notre premier e-mail concernant votre solde négatif. Votre solde actuel est de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>Merci de prendre contact avec nous pour éclaircir la situation.</p>
                    <p>Si vous avez déjà effectué un paiement, vous pouvez ne pas prendre compte de cet e-mail.</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-22" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B +30fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour,</p>
                    <p>Il semble que nos e-mails précédents n'aient pas permis d’arriver au résultat escompté. Aujourd'hui, votre solde est de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>La situation ne s’étant pas régler à l’amiable, l’ensemble des services que vous avez avec nous ont été suspendus.</p>
                    <p>Si vous avez déjà effectué un paiement, veuillez nous contacter afin que nous puissions réactiver vos services.</p>
                    <p>Si vous avez des questions supplémentaires, veuillez contacter nos services.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-23" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +1fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour#{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>Nous vous contactons au sujet de votre solde actuel auprèss de notre société. Il semble que vous ayez une position débitrice d’un montant de #{customerAccount balance} #{currencySymbol}.</p>
                    <p>Nous vous invitons a faire le nécessaires pour assurer le paiement de votre (vos) dernière(s) facture(s).</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-24" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +5fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour#{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>Nous donnons suite à notre précédent e-mail concernant votre solde négatif (actuellement de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>Merci de prendre contact avec nous pour échanger sur la situation.</p>
                    <p>Si vous avez déjà effectué un paiement, veuillez ne pas prendre cet e-mail en considération.</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-25" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +10fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour#{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>Cela fait maintenant 10 jours depuis notre premier e-mail concernant votre solde négatif. Votre solde actuel est de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>Merci de prendre contact avec nous pour éclaircir la situation.</p>
                    <p>Si vous avez déjà effectué un paiement, vous pouvez ne pas prendre compte de cet e-mail.</p>
                    <p>Si vous avez des questions supplémentaires, n'hésitez pas à contacter nos services ou votre point de contact habituel.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>

        <insert tableName="com_message_template">
            <column name="media" value="DUNNING_MEDIA" />
            <column name="id" value="-26" />
            <column name="version" value="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2C +15fr" />
            <column name="type" value="DUNNING" />
            <column name="tag_start" value="#{" />
            <column name="tag_end" value="}" />
            <column name="subject" value="" />
            <column name="is_active" value="1" />
            <column name="channel" value="EMAIL" />
            <column name="trading_language_id" value="-2" />
            <column name="type_dunning_mode" value="CUSTOMER_LEVEL" />
            <column name="htmlcontent">
                <![CDATA[
                    <p>Bonjour #{customerAccountLegalEntityTypeCode} #{customerAccountLastName},</p>
                    <p>Il semble que nos e-mails précédents n'aient pas permis d’arriver au résultat escompté. Aujourd'hui, votre solde est de #{customerAccount balance} #{currencySymbol}).</p>
                    <p>La situation ne s’étant pas régler à l’amiable, l’ensemble des services que vous avez avec nous ont été suspendus.</p>
                    <p>Si vous avez déjà effectué un paiement, veuillez nous contacter afin que nous puissions réactiver vos services.</p>
                    <p>Si vous avez des questions supplémentaires, veuillez contacter nos services.</p>
                    <p>Meilleures salutations,</p>
                ]]>
            </column>
        </insert>
    </changeSet>
    
    <changeSet id="#INTRD-13074_20230214" author="zelmeliani">
    	<insert tableName="ar_customer_balance">
    		<column name="id" value="-1"/>
		    <column name="version" value="0" />
		    <column name="created" valueDate="${db.current.time}" />
		    <column name="creator" value="applicationInitializer" />
		    <column name="code" value="default_customer_balance" />
		    <column name="description" value="Default Customer Balance" />
		    <column name="default_balance" value="1" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_ADV')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REF_CASH')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PPL_INSTALLMENT')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PPL_CREATION')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_WIRE')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_CASH')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_BATCH')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_STP')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_PAL')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'CRD_TRS')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'DBT_TRS')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_CRD')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'EXP_WRT')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REF_TIP')" /> 
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_CRN')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_DIS')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_REB')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_RDD')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_RCR')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_CRD')" /> 
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'TAX_VAT_10')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'TAX_VAT_20')" /> 
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'TAX_VAT_05')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'TAX_VAT_00')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REF_CRD')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'ADJ_INV')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'ADJ_REF')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_STD')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'INV_FEE')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_DEP')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'RND_INC')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'RND_EXP')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REF_DDT')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REF_CHK')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_REC')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_NID')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_TIP')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_DDT')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'REJ_CHK')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_DDT')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_TIP')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_CHK')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
		<insert tableName="ar_customer_balance_templates">
		    <column name="template_id"          valueComputed="(SELECT id FROM ar_occ_template WHERE code = 'PAY_SD')" />
		    <column name="customer_balance_id"  valueComputed="(SELECT id FROM ar_customer_balance WHERE code = 'default_customer_balance')" />
		</insert>
    </changeSet>

    <changeSet id="#INTRD-13957_20230213" author="houdad">
        <sql>
        DELETE FROM ${db.schema.adapted}CAT_UNIT_OF_MEASURE;
        INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1, 0, 'opencell.admin', NULL, '10', now(), NULL, 'group', 'group', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2, 0, 'opencell.admin', NULL, '11', now(), NULL, 'outfit', 'outfit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-3, 0, 'opencell.admin', NULL, '13', now(), NULL, 'ration', 'ration', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-4, 0, 'opencell.admin', NULL, '14', now(), NULL, 'shot', 'shot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-5, 0, 'opencell.admin', NULL, '15', now(), NULL, 'stick, military', 'stick, military', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-6, 0, 'opencell.admin', NULL, '20', now(), NULL, 'twenty foot container', 'twenty foot container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-7, 0, 'opencell.admin', NULL, '21', now(), NULL, 'forty foot container', 'forty foot container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-8, 0, 'opencell.admin', NULL, '22', now(), NULL, 'decilitre per gram', 'decilitre per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-9, 0, 'opencell.admin', NULL, '23', now(), NULL, 'gram per cubic centimetre', 'gram per cubic centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-10, 0, 'opencell.admin', NULL, '24', now(), NULL, 'theoretical pound', 'theoretical pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-11, 0, 'opencell.admin', NULL, '25', now(), NULL, 'gram per square centimetre', 'gram per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-12, 0, 'opencell.admin', NULL, '27', now(), NULL, 'theoretical ton', 'theoretical ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-13, 0, 'opencell.admin', NULL, '28', now(), NULL, 'kilogram per square metre', 'kilogram per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-14, 0, 'opencell.admin', NULL, '33', now(), NULL, 'kilopascal square metre per gram', 'kilopascal square metre per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-15, 0, 'opencell.admin', NULL, '34', now(), NULL, 'kilopascal per millimetre', 'kilopascal per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-16, 0, 'opencell.admin', NULL, '35', now(), NULL, 'millilitre per square centimetre second', 'millilitre per square centimetre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-17, 0, 'opencell.admin', NULL, '37', now(), NULL, 'ounce per square foot', 'ounce per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-18, 0, 'opencell.admin', NULL, '38', now(), NULL, 'ounce per square foot per 0,01inch', 'ounce per square foot per 0,01inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-19, 0, 'opencell.admin', NULL, '40', now(), NULL, 'millilitre per second', 'millilitre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-20, 0, 'opencell.admin', NULL, '41', now(), NULL, 'millilitre per minute', 'millilitre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-21, 0, 'opencell.admin', NULL, '56', now(), NULL, 'sitas', 'sitas', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-22, 0, 'opencell.admin', NULL, '57', now(), NULL, 'mesh', 'mesh', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-23, 0, 'opencell.admin', NULL, '58', now(), NULL, 'net kilogram', 'net kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-24, 0, 'opencell.admin', NULL, '59', now(), NULL, 'part per million', 'part per million', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-25, 0, 'opencell.admin', NULL, '60', now(), NULL, 'percent weight', 'percent weight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-26, 0, 'opencell.admin', NULL, '61', now(), NULL, 'part per billion (US)', 'part per billion (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-27, 0, 'opencell.admin', NULL, '74', now(), NULL, 'millipascal', 'millipascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-28, 0, 'opencell.admin', NULL, '77', now(), NULL, 'milli-inch', 'milli-inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-29, 0, 'opencell.admin', NULL, '80', now(), NULL, 'pound per square inch absolute', 'pound per square inch absolute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-30, 0, 'opencell.admin', NULL, '81', now(), NULL, 'henry', 'henry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-31, 0, 'opencell.admin', NULL, '85', now(), NULL, 'foot pound-force', 'foot pound-force', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-32, 0, 'opencell.admin', NULL, '87', now(), NULL, 'pound per cubic foot', 'pound per cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-33, 0, 'opencell.admin', NULL, '89', now(), NULL, 'poise', 'poise', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-34, 0, 'opencell.admin', NULL, '91', now(), NULL, 'stokes', 'stokes', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-35, 0, 'opencell.admin', NULL, '1I', now(), NULL, 'fixed rate', 'fixed rate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-36, 0, 'opencell.admin', NULL, '2A', now(), NULL, 'radian per second', 'radian per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-37, 0, 'opencell.admin', NULL, '2B', now(), NULL, 'radian per second squared', 'radian per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-38, 0, 'opencell.admin', NULL, '2C', now(), NULL, 'roentgen', 'roentgen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-39, 0, 'opencell.admin', NULL, '2G', now(), NULL, 'volt AC', 'volt AC', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-40, 0, 'opencell.admin', NULL, '2H', now(), NULL, 'volt DC', 'volt DC', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-41, 0, 'opencell.admin', NULL, '2I', now(), NULL, 'British thermal unit (international table) per hour', 'British thermal unit (international table) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-42, 0, 'opencell.admin', NULL, '2J', now(), NULL, 'cubic centimetre per second', 'cubic centimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-43, 0, 'opencell.admin', NULL, '2K', now(), NULL, 'cubic foot per hour', 'cubic foot per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-44, 0, 'opencell.admin', NULL, '2L', now(), NULL, 'cubic foot per minute', 'cubic foot per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-45, 0, 'opencell.admin', NULL, '2M', now(), NULL, 'centimetre per second', 'centimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-46, 0, 'opencell.admin', NULL, '2N', now(), NULL, 'decibel', 'decibel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-47, 0, 'opencell.admin', NULL, '2P', now(), NULL, 'kilobyte', 'kilobyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-48, 0, 'opencell.admin', NULL, '2Q', now(), NULL, 'kilobecquerel', 'kilobecquerel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-49, 0, 'opencell.admin', NULL, '2R', now(), NULL, 'kilocurie', 'kilocurie', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-50, 0, 'opencell.admin', NULL, '2U', now(), NULL, 'megagram', 'megagram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-51, 0, 'opencell.admin', NULL, '2X', now(), NULL, 'metre per minute', 'metre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-52, 0, 'opencell.admin', NULL, '2Y', now(), NULL, 'milliroentgen', 'milliroentgen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-53, 0, 'opencell.admin', NULL, '2Z', now(), NULL, 'millivolt', 'millivolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-54, 0, 'opencell.admin', NULL, '3B', now(), NULL, 'megajoule', 'megajoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-55, 0, 'opencell.admin', NULL, '3C', now(), NULL, 'manmonth', 'manmonth', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-56, 0, 'opencell.admin', NULL, '4C', now(), NULL, 'centistokes', 'centistokes', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-57, 0, 'opencell.admin', NULL, '4G', now(), NULL, 'microlitre', 'microlitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-58, 0, 'opencell.admin', NULL, '4H', now(), NULL, 'micrometre (micron)', 'micrometre (micron)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-59, 0, 'opencell.admin', NULL, '4K', now(), NULL, 'milliampere', 'milliampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-60, 0, 'opencell.admin', NULL, '4L', now(), NULL, 'megabyte', 'megabyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-61, 0, 'opencell.admin', NULL, '4M', now(), NULL, 'milligram per hour', 'milligram per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-62, 0, 'opencell.admin', NULL, '4N', now(), NULL, 'megabecquerel', 'megabecquerel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-63, 0, 'opencell.admin', NULL, '4O', now(), NULL, 'microfarad', 'microfarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-64, 0, 'opencell.admin', NULL, '4P', now(), NULL, 'newton per metre', 'newton per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-65, 0, 'opencell.admin', NULL, '4Q', now(), NULL, 'ounce inch', 'ounce inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-66, 0, 'opencell.admin', NULL, '4R', now(), NULL, 'ounce foot', 'ounce foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-67, 0, 'opencell.admin', NULL, '4T', now(), NULL, 'picofarad', 'picofarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-68, 0, 'opencell.admin', NULL, '4U', now(), NULL, 'pound per hour', 'pound per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-69, 0, 'opencell.admin', NULL, '4W', now(), NULL, 'ton (US) per hour', 'ton (US) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-70, 0, 'opencell.admin', NULL, '4X', now(), NULL, 'kilolitre per hour', 'kilolitre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-71, 0, 'opencell.admin', NULL, '5A', now(), NULL, 'barrel (US) per minute', 'barrel (US) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-72, 0, 'opencell.admin', NULL, '5B', now(), NULL, 'batch', 'batch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-73, 0, 'opencell.admin', NULL, '5E', now(), NULL, 'MMSCF/day', 'MMSCF/day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-74, 0, 'opencell.admin', NULL, '5J', now(), NULL, 'hydraulic horse power', 'hydraulic horse power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-75, 0, 'opencell.admin', NULL, 'A10', now(), NULL, 'ampere square metre per joule second', 'ampere square metre per joule second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-76, 0, 'opencell.admin', NULL, 'A11', now(), NULL, 'angstrom', 'angstrom', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-77, 0, 'opencell.admin', NULL, 'A12', now(), NULL, 'astronomical unit', 'astronomical unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-78, 0, 'opencell.admin', NULL, 'A13', now(), NULL, 'attojoule', 'attojoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-79, 0, 'opencell.admin', NULL, 'A14', now(), NULL, 'barn', 'barn', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-80, 0, 'opencell.admin', NULL, 'A15', now(), NULL, 'barn per electronvolt', 'barn per electronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-81, 0, 'opencell.admin', NULL, 'A16', now(), NULL, 'barn per steradian electronvolt', 'barn per steradian electronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-82, 0, 'opencell.admin', NULL, 'A17', now(), NULL, 'barn per steradian', 'barn per steradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-83, 0, 'opencell.admin', NULL, 'A18', now(), NULL, 'becquerel per kilogram', 'becquerel per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-84, 0, 'opencell.admin', NULL, 'A19', now(), NULL, 'becquerel per cubic metre', 'becquerel per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-85, 0, 'opencell.admin', NULL, 'A2', now(), NULL, 'ampere per centimetre', 'ampere per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-86, 0, 'opencell.admin', NULL, 'A20', now(), NULL, 'British thermal unit (international table) per second square foot degree Rankine', 'British thermal unit (international table) per second square foot degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-87, 0, 'opencell.admin', NULL, 'A21', now(), NULL, 'British thermal unit (international table) per pound degree Rankine', 'British thermal unit (international table) per pound degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-88, 0, 'opencell.admin', NULL, 'A22', now(), NULL, 'British thermal unit (international table) per second foot degree Rankine', 'British thermal unit (international table) per second foot degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-89, 0, 'opencell.admin', NULL, 'A23', now(), NULL, 'British thermal unit (international table) per hour square foot degree Rankine', 'British thermal unit (international table) per hour square foot degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-90, 0, 'opencell.admin', NULL, 'A24', now(), NULL, 'candela per square metre', 'candela per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-91, 0, 'opencell.admin', NULL, 'A26', now(), NULL, 'coulomb metre', 'coulomb metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-92, 0, 'opencell.admin', NULL, 'A27', now(), NULL, 'coulomb metre squared per volt', 'coulomb metre squared per volt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-93, 0, 'opencell.admin', NULL, 'A28', now(), NULL, 'coulomb per cubic centimetre', 'coulomb per cubic centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-94, 0, 'opencell.admin', NULL, 'A29', now(), NULL, 'coulomb per cubic metre', 'coulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-95, 0, 'opencell.admin', NULL, 'A3', now(), NULL, 'ampere per millimetre', 'ampere per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-96, 0, 'opencell.admin', NULL, 'A30', now(), NULL, 'coulomb per cubic millimetre', 'coulomb per cubic millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-97, 0, 'opencell.admin', NULL, 'A31', now(), NULL, 'coulomb per kilogram second', 'coulomb per kilogram second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-98, 0, 'opencell.admin', NULL, 'A32', now(), NULL, 'coulomb per mole', 'coulomb per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-99, 0, 'opencell.admin', NULL, 'A33', now(), NULL, 'coulomb per square centimetre', 'coulomb per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-100, 0, 'opencell.admin', NULL, 'A34', now(), NULL, 'coulomb per square metre', 'coulomb per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-101, 0, 'opencell.admin', NULL, 'A35', now(), NULL, 'coulomb per square millimetre', 'coulomb per square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-102, 0, 'opencell.admin', NULL, 'A36', now(), NULL, 'cubic centimetre per mole', 'cubic centimetre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-103, 0, 'opencell.admin', NULL, 'A37', now(), NULL, 'cubic decimetre per mole', 'cubic decimetre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-104, 0, 'opencell.admin', NULL, 'A38', now(), NULL, 'cubic metre per coulomb', 'cubic metre per coulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-105, 0, 'opencell.admin', NULL, 'A39', now(), NULL, 'cubic metre per kilogram', 'cubic metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-106, 0, 'opencell.admin', NULL, 'A4', now(), NULL, 'ampere per square centimetre', 'ampere per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-107, 0, 'opencell.admin', NULL, 'A40', now(), NULL, 'cubic metre per mole', 'cubic metre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-108, 0, 'opencell.admin', NULL, 'A41', now(), NULL, 'ampere per square metre', 'ampere per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-109, 0, 'opencell.admin', NULL, 'A42', now(), NULL, 'curie per kilogram', 'curie per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-110, 0, 'opencell.admin', NULL, 'A43', now(), NULL, 'deadweight tonnage', 'deadweight tonnage', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-111, 0, 'opencell.admin', NULL, 'A44', now(), NULL, 'decalitre', 'decalitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-112, 0, 'opencell.admin', NULL, 'A45', now(), NULL, 'decametre', 'decametre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-113, 0, 'opencell.admin', NULL, 'A47', now(), NULL, 'decitex', 'decitex', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-114, 0, 'opencell.admin', NULL, 'A48', now(), NULL, 'degree Rankine', 'degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-115, 0, 'opencell.admin', NULL, 'A49', now(), NULL, 'denier', 'denier', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-116, 0, 'opencell.admin', NULL, 'A5', now(), NULL, 'ampere square metre', 'ampere square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-117, 0, 'opencell.admin', NULL, 'A53', now(), NULL, 'electronvolt', 'electronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-118, 0, 'opencell.admin', NULL, 'A54', now(), NULL, 'electronvolt per metre', 'electronvolt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-119, 0, 'opencell.admin', NULL, 'A55', now(), NULL, 'electronvolt square metre', 'electronvolt square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-120, 0, 'opencell.admin', NULL, 'A56', now(), NULL, 'electronvolt square metre per kilogram', 'electronvolt square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-121, 0, 'opencell.admin', NULL, 'A59', now(), NULL, '8-part cloud cover', '8-part cloud cover', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-122, 0, 'opencell.admin', NULL, 'A6', now(), NULL, 'ampere per square metre kelvin squared', 'ampere per square metre kelvin squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-123, 0, 'opencell.admin', NULL, 'A68', now(), NULL, 'exajoule', 'exajoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-124, 0, 'opencell.admin', NULL, 'A69', now(), NULL, 'farad per metre', 'farad per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-125, 0, 'opencell.admin', NULL, 'A7', now(), NULL, 'ampere per square millimetre', 'ampere per square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-126, 0, 'opencell.admin', NULL, 'A70', now(), NULL, 'femtojoule', 'femtojoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-127, 0, 'opencell.admin', NULL, 'A71', now(), NULL, 'femtometre', 'femtometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-128, 0, 'opencell.admin', NULL, 'A73', now(), NULL, 'foot per second squared', 'foot per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-129, 0, 'opencell.admin', NULL, 'A74', now(), NULL, 'foot pound-force per second', 'foot pound-force per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-130, 0, 'opencell.admin', NULL, 'A75', now(), NULL, 'freight ton', 'freight ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-131, 0, 'opencell.admin', NULL, 'A76', now(), NULL, 'gal', 'gal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-132, 0, 'opencell.admin', NULL, 'A8', now(), NULL, 'ampere second', 'ampere second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-133, 0, 'opencell.admin', NULL, 'A84', now(), NULL, 'gigacoulomb per cubic metre', 'gigacoulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-134, 0, 'opencell.admin', NULL, 'A85', now(), NULL, 'gigaelectronvolt', 'gigaelectronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-135, 0, 'opencell.admin', NULL, 'A86', now(), NULL, 'gigahertz', 'gigahertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-136, 0, 'opencell.admin', NULL, 'A87', now(), NULL, 'gigaohm', 'gigaohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-137, 0, 'opencell.admin', NULL, 'A88', now(), NULL, 'gigaohm metre', 'gigaohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-138, 0, 'opencell.admin', NULL, 'A89', now(), NULL, 'gigapascal', 'gigapascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-139, 0, 'opencell.admin', NULL, 'A9', now(), NULL, 'rate', 'rate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-140, 0, 'opencell.admin', NULL, 'A90', now(), NULL, 'gigawatt', 'gigawatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-141, 0, 'opencell.admin', NULL, 'A91', now(), NULL, 'gon', 'gon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-142, 0, 'opencell.admin', NULL, 'A93', now(), NULL, 'gram per cubic metre', 'gram per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-143, 0, 'opencell.admin', NULL, 'A94', now(), NULL, 'gram per mole', 'gram per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-144, 0, 'opencell.admin', NULL, 'A95', now(), NULL, 'gray', 'gray', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-145, 0, 'opencell.admin', NULL, 'A96', now(), NULL, 'gray per second', 'gray per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-146, 0, 'opencell.admin', NULL, 'A97', now(), NULL, 'hectopascal', 'hectopascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-147, 0, 'opencell.admin', NULL, 'A98', now(), NULL, 'henry per metre', 'henry per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-148, 0, 'opencell.admin', NULL, 'A99', now(), NULL, 'bit', 'bit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-149, 0, 'opencell.admin', NULL, 'AA', now(), NULL, 'ball', 'ball', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-150, 0, 'opencell.admin', NULL, 'AB', now(), NULL, 'bulk pack', 'bulk pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-151, 0, 'opencell.admin', NULL, 'ACR', now(), NULL, 'acre', 'acre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-152, 0, 'opencell.admin', NULL, 'ACT', now(), NULL, 'activity', 'activity', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-153, 0, 'opencell.admin', NULL, 'AD', now(), NULL, 'byte', 'byte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-154, 0, 'opencell.admin', NULL, 'AE', now(), NULL, 'ampere per metre', 'ampere per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-155, 0, 'opencell.admin', NULL, 'AH', now(), NULL, 'additional minute', 'additional minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-156, 0, 'opencell.admin', NULL, 'AI', now(), NULL, 'average minute per call', 'average minute per call', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-157, 0, 'opencell.admin', NULL, 'AK', now(), NULL, 'fathom', 'fathom', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-158, 0, 'opencell.admin', NULL, 'AL', now(), NULL, 'access line', 'access line', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-159, 0, 'opencell.admin', NULL, 'AMH', now(), NULL, 'ampere hour', 'ampere hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-160, 0, 'opencell.admin', NULL, 'AMP', now(), NULL, 'ampere', 'ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-161, 0, 'opencell.admin', NULL, 'ANN', now(), NULL, 'year', 'year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-162, 0, 'opencell.admin', NULL, 'APZ', now(), NULL, 'troy ounce or apothecary ounce', 'troy ounce or apothecary ounce', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-163, 0, 'opencell.admin', NULL, 'AQ', now(), NULL, 'anti-hemophilic factor (AHF) unit', 'anti-hemophilic factor (AHF) unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-164, 0, 'opencell.admin', NULL, 'AS', now(), NULL, 'assortment', 'assortment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-165, 0, 'opencell.admin', NULL, 'ASM', now(), NULL, 'alcoholic strength by mass', 'alcoholic strength by mass', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-166, 0, 'opencell.admin', NULL, 'ASU', now(), NULL, 'alcoholic strength by volume', 'alcoholic strength by volume', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-167, 0, 'opencell.admin', NULL, 'ATM', now(), NULL, 'standard atmosphere', 'standard atmosphere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-168, 0, 'opencell.admin', NULL, 'AWG', now(), NULL, 'american wire gauge', 'american wire gauge', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-169, 0, 'opencell.admin', NULL, 'AY', now(), NULL, 'assembly', 'assembly', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-170, 0, 'opencell.admin', NULL, 'AZ', now(), NULL, 'British thermal unit (international table) per pound', 'British thermal unit (international table) per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-171, 0, 'opencell.admin', NULL, 'B1', now(), NULL, 'barrel (US) per day', 'barrel (US) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-172, 0, 'opencell.admin', NULL, 'B10', now(), NULL, 'bit per second', 'bit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-173, 0, 'opencell.admin', NULL, 'B11', now(), NULL, 'joule per kilogram kelvin', 'joule per kilogram kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-174, 0, 'opencell.admin', NULL, 'B12', now(), NULL, 'joule per metre', 'joule per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-175, 0, 'opencell.admin', NULL, 'B13', now(), NULL, 'joule per square metre', 'joule per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-176, 0, 'opencell.admin', NULL, 'B14', now(), NULL, 'joule per metre to the fourth power', 'joule per metre to the fourth power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-177, 0, 'opencell.admin', NULL, 'B15', now(), NULL, 'joule per mole', 'joule per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-178, 0, 'opencell.admin', NULL, 'B16', now(), NULL, 'joule per mole kelvin', 'joule per mole kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-179, 0, 'opencell.admin', NULL, 'B17', now(), NULL, 'credit', 'credit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-180, 0, 'opencell.admin', NULL, 'B18', now(), NULL, 'joule second', 'joule second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-181, 0, 'opencell.admin', NULL, 'B19', now(), NULL, 'digit', 'digit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-182, 0, 'opencell.admin', NULL, 'B20', now(), NULL, 'joule square metre per kilogram', 'joule square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-183, 0, 'opencell.admin', NULL, 'B21', now(), NULL, 'kelvin per watt', 'kelvin per watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-184, 0, 'opencell.admin', NULL, 'B22', now(), NULL, 'kiloampere', 'kiloampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-185, 0, 'opencell.admin', NULL, 'B23', now(), NULL, 'kiloampere per square metre', 'kiloampere per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-186, 0, 'opencell.admin', NULL, 'B24', now(), NULL, 'kiloampere per metre', 'kiloampere per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-187, 0, 'opencell.admin', NULL, 'B25', now(), NULL, 'kilobecquerel per kilogram', 'kilobecquerel per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-188, 0, 'opencell.admin', NULL, 'B26', now(), NULL, 'kilocoulomb', 'kilocoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-189, 0, 'opencell.admin', NULL, 'B27', now(), NULL, 'kilocoulomb per cubic metre', 'kilocoulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-190, 0, 'opencell.admin', NULL, 'B28', now(), NULL, 'kilocoulomb per square metre', 'kilocoulomb per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-191, 0, 'opencell.admin', NULL, 'B29', now(), NULL, 'kiloelectronvolt', 'kiloelectronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-192, 0, 'opencell.admin', NULL, 'B3', now(), NULL, 'batting pound', 'batting pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-193, 0, 'opencell.admin', NULL, 'B30', now(), NULL, 'gibibit', 'gibibit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-194, 0, 'opencell.admin', NULL, 'B31', now(), NULL, 'kilogram metre per second', 'kilogram metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-195, 0, 'opencell.admin', NULL, 'B32', now(), NULL, 'kilogram metre squared', 'kilogram metre squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-196, 0, 'opencell.admin', NULL, 'B33', now(), NULL, 'kilogram metre squared per second', 'kilogram metre squared per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-197, 0, 'opencell.admin', NULL, 'B34', now(), NULL, 'kilogram per cubic decimetre', 'kilogram per cubic decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-198, 0, 'opencell.admin', NULL, 'B35', now(), NULL, 'kilogram per litre', 'kilogram per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-199, 0, 'opencell.admin', NULL, 'B4', now(), NULL, 'barrel, imperial', 'barrel, imperial', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-200, 0, 'opencell.admin', NULL, 'B41', now(), NULL, 'kilojoule per kelvin', 'kilojoule per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-201, 0, 'opencell.admin', NULL, 'B42', now(), NULL, 'kilojoule per kilogram', 'kilojoule per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-202, 0, 'opencell.admin', NULL, 'B43', now(), NULL, 'kilojoule per kilogram kelvin', 'kilojoule per kilogram kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-203, 0, 'opencell.admin', NULL, 'B44', now(), NULL, 'kilojoule per mole', 'kilojoule per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-204, 0, 'opencell.admin', NULL, 'B45', now(), NULL, 'kilomole', 'kilomole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-205, 0, 'opencell.admin', NULL, 'B46', now(), NULL, 'kilomole per cubic metre', 'kilomole per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-206, 0, 'opencell.admin', NULL, 'B47', now(), NULL, 'kilonewton', 'kilonewton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-207, 0, 'opencell.admin', NULL, 'B48', now(), NULL, 'kilonewton metre', 'kilonewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-208, 0, 'opencell.admin', NULL, 'B49', now(), NULL, 'kiloohm', 'kiloohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-209, 0, 'opencell.admin', NULL, 'B50', now(), NULL, 'kiloohm metre', 'kiloohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-210, 0, 'opencell.admin', NULL, 'B52', now(), NULL, 'kilosecond', 'kilosecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-211, 0, 'opencell.admin', NULL, 'B53', now(), NULL, 'kilosiemens', 'kilosiemens', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-212, 0, 'opencell.admin', NULL, 'B54', now(), NULL, 'kilosiemens per metre', 'kilosiemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-213, 0, 'opencell.admin', NULL, 'B55', now(), NULL, 'kilovolt per metre', 'kilovolt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-214, 0, 'opencell.admin', NULL, 'B56', now(), NULL, 'kiloweber per metre', 'kiloweber per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-215, 0, 'opencell.admin', NULL, 'B57', now(), NULL, 'light year', 'light year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-216, 0, 'opencell.admin', NULL, 'B58', now(), NULL, 'litre per mole', 'litre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-217, 0, 'opencell.admin', NULL, 'B59', now(), NULL, 'lumen hour', 'lumen hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-218, 0, 'opencell.admin', NULL, 'B60', now(), NULL, 'lumen per square metre', 'lumen per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-219, 0, 'opencell.admin', NULL, 'B61', now(), NULL, 'lumen per watt', 'lumen per watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-220, 0, 'opencell.admin', NULL, 'B62', now(), NULL, 'lumen second', 'lumen second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-221, 0, 'opencell.admin', NULL, 'B63', now(), NULL, 'lux hour', 'lux hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-222, 0, 'opencell.admin', NULL, 'B64', now(), NULL, 'lux second', 'lux second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-223, 0, 'opencell.admin', NULL, 'B66', now(), NULL, 'megaampere per square metre', 'megaampere per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-224, 0, 'opencell.admin', NULL, 'B67', now(), NULL, 'megabecquerel per kilogram', 'megabecquerel per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-225, 0, 'opencell.admin', NULL, 'B68', now(), NULL, 'gigabit', 'gigabit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-226, 0, 'opencell.admin', NULL, 'B69', now(), NULL, 'megacoulomb per cubic metre', 'megacoulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-227, 0, 'opencell.admin', NULL, 'B7', now(), NULL, 'cycle', 'cycle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-228, 0, 'opencell.admin', NULL, 'B70', now(), NULL, 'megacoulomb per square metre', 'megacoulomb per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-229, 0, 'opencell.admin', NULL, 'B71', now(), NULL, 'megaelectronvolt', 'megaelectronvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-230, 0, 'opencell.admin', NULL, 'B72', now(), NULL, 'megagram per cubic metre', 'megagram per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-231, 0, 'opencell.admin', NULL, 'B73', now(), NULL, 'meganewton', 'meganewton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-232, 0, 'opencell.admin', NULL, 'B74', now(), NULL, 'meganewton metre', 'meganewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-233, 0, 'opencell.admin', NULL, 'B75', now(), NULL, 'megaohm', 'megaohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-234, 0, 'opencell.admin', NULL, 'B76', now(), NULL, 'megaohm metre', 'megaohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-235, 0, 'opencell.admin', NULL, 'B77', now(), NULL, 'megasiemens per metre', 'megasiemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-236, 0, 'opencell.admin', NULL, 'B78', now(), NULL, 'megavolt', 'megavolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-237, 0, 'opencell.admin', NULL, 'B79', now(), NULL, 'megavolt per metre', 'megavolt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-238, 0, 'opencell.admin', NULL, 'B8', now(), NULL, 'joule per cubic metre', 'joule per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-239, 0, 'opencell.admin', NULL, 'B80', now(), NULL, 'gigabit per second', 'gigabit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-240, 0, 'opencell.admin', NULL, 'B81', now(), NULL, 'reciprocal metre squared reciprocal second', 'reciprocal metre squared reciprocal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-241, 0, 'opencell.admin', NULL, 'B82', now(), NULL, 'inch per linear foot', 'inch per linear foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-242, 0, 'opencell.admin', NULL, 'B83', now(), NULL, 'metre to the fourth power', 'metre to the fourth power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-243, 0, 'opencell.admin', NULL, 'B84', now(), NULL, 'microampere', 'microampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-244, 0, 'opencell.admin', NULL, 'B85', now(), NULL, 'microbar', 'microbar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-245, 0, 'opencell.admin', NULL, 'B86', now(), NULL, 'microcoulomb', 'microcoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-246, 0, 'opencell.admin', NULL, 'B87', now(), NULL, 'microcoulomb per cubic metre', 'microcoulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-247, 0, 'opencell.admin', NULL, 'B88', now(), NULL, 'microcoulomb per square metre', 'microcoulomb per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-248, 0, 'opencell.admin', NULL, 'B89', now(), NULL, 'microfarad per metre', 'microfarad per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-249, 0, 'opencell.admin', NULL, 'B90', now(), NULL, 'microhenry', 'microhenry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-250, 0, 'opencell.admin', NULL, 'B91', now(), NULL, 'microhenry per metre', 'microhenry per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-251, 0, 'opencell.admin', NULL, 'B92', now(), NULL, 'micronewton', 'micronewton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-252, 0, 'opencell.admin', NULL, 'B93', now(), NULL, 'micronewton metre', 'micronewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-253, 0, 'opencell.admin', NULL, 'B94', now(), NULL, 'microohm', 'microohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-254, 0, 'opencell.admin', NULL, 'B95', now(), NULL, 'microohm metre', 'microohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-255, 0, 'opencell.admin', NULL, 'B96', now(), NULL, 'micropascal', 'micropascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-256, 0, 'opencell.admin', NULL, 'B97', now(), NULL, 'microradian', 'microradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-257, 0, 'opencell.admin', NULL, 'B98', now(), NULL, 'microsecond', 'microsecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-258, 0, 'opencell.admin', NULL, 'B99', now(), NULL, 'microsiemens', 'microsiemens', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-259, 0, 'opencell.admin', NULL, 'BAR', now(), NULL, 'bar [unit of pressure]', 'bar [unit of pressure]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-260, 0, 'opencell.admin', NULL, 'BB', now(), NULL, 'base box', 'base box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-261, 0, 'opencell.admin', NULL, 'BFT', now(), NULL, 'board foot', 'board foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-262, 0, 'opencell.admin', NULL, 'BHP', now(), NULL, 'brake horse power', 'brake horse power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-263, 0, 'opencell.admin', NULL, 'BIL', now(), NULL, 'billion (EUR)', 'billion (EUR)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-264, 0, 'opencell.admin', NULL, 'BLD', now(), NULL, 'dry barrel (US)', 'dry barrel (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-265, 0, 'opencell.admin', NULL, 'BLL', now(), NULL, 'barrel (US)', 'barrel (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-266, 0, 'opencell.admin', NULL, 'BP', now(), NULL, 'hundred board foot', 'hundred board foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-267, 0, 'opencell.admin', NULL, 'BPM', now(), NULL, 'beats per minute', 'beats per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-268, 0, 'opencell.admin', NULL, 'BQL', now(), NULL, 'becquerel', 'becquerel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-269, 0, 'opencell.admin', NULL, 'BTU', now(), NULL, 'British thermal unit (international table)', 'British thermal unit (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-270, 0, 'opencell.admin', NULL, 'BUA', now(), NULL, 'bushel (US)', 'bushel (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-271, 0, 'opencell.admin', NULL, 'BUI', now(), NULL, 'bushel (UK)', 'bushel (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-272, 0, 'opencell.admin', NULL, 'C0', now(), NULL, 'call', 'call', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-273, 0, 'opencell.admin', NULL, 'C10', now(), NULL, 'millifarad', 'millifarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-274, 0, 'opencell.admin', NULL, 'C11', now(), NULL, 'milligal', 'milligal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-275, 0, 'opencell.admin', NULL, 'C12', now(), NULL, 'milligram per metre', 'milligram per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-276, 0, 'opencell.admin', NULL, 'C13', now(), NULL, 'milligray', 'milligray', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-277, 0, 'opencell.admin', NULL, 'C14', now(), NULL, 'millihenry', 'millihenry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-278, 0, 'opencell.admin', NULL, 'C15', now(), NULL, 'millijoule', 'millijoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-279, 0, 'opencell.admin', NULL, 'C16', now(), NULL, 'millimetre per second', 'millimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-280, 0, 'opencell.admin', NULL, 'C17', now(), NULL, 'millimetre squared per second', 'millimetre squared per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-281, 0, 'opencell.admin', NULL, 'C18', now(), NULL, 'millimole', 'millimole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-282, 0, 'opencell.admin', NULL, 'C19', now(), NULL, 'mole per kilogram', 'mole per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-283, 0, 'opencell.admin', NULL, 'C20', now(), NULL, 'millinewton', 'millinewton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-284, 0, 'opencell.admin', NULL, 'C21', now(), NULL, 'kibibit', 'kibibit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-285, 0, 'opencell.admin', NULL, 'C22', now(), NULL, 'millinewton per metre', 'millinewton per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-286, 0, 'opencell.admin', NULL, 'C23', now(), NULL, 'milliohm metre', 'milliohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-287, 0, 'opencell.admin', NULL, 'C24', now(), NULL, 'millipascal second', 'millipascal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-288, 0, 'opencell.admin', NULL, 'C25', now(), NULL, 'milliradian', 'milliradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-289, 0, 'opencell.admin', NULL, 'C26', now(), NULL, 'millisecond', 'millisecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-290, 0, 'opencell.admin', NULL, 'C27', now(), NULL, 'millisiemens', 'millisiemens', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-291, 0, 'opencell.admin', NULL, 'C28', now(), NULL, 'millisievert', 'millisievert', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-292, 0, 'opencell.admin', NULL, 'C29', now(), NULL, 'millitesla', 'millitesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-293, 0, 'opencell.admin', NULL, 'C3', now(), NULL, 'microvolt per metre', 'microvolt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-294, 0, 'opencell.admin', NULL, 'C30', now(), NULL, 'millivolt per metre', 'millivolt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-295, 0, 'opencell.admin', NULL, 'C31', now(), NULL, 'milliwatt', 'milliwatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-296, 0, 'opencell.admin', NULL, 'C32', now(), NULL, 'milliwatt per square metre', 'milliwatt per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-297, 0, 'opencell.admin', NULL, 'C33', now(), NULL, 'milliweber', 'milliweber', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-298, 0, 'opencell.admin', NULL, 'C34', now(), NULL, 'mole', 'mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-299, 0, 'opencell.admin', NULL, 'C35', now(), NULL, 'mole per cubic decimetre', 'mole per cubic decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-300, 0, 'opencell.admin', NULL, 'C36', now(), NULL, 'mole per cubic metre', 'mole per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-301, 0, 'opencell.admin', NULL, 'C37', now(), NULL, 'kilobit', 'kilobit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-302, 0, 'opencell.admin', NULL, 'C38', now(), NULL, 'mole per litre', 'mole per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-303, 0, 'opencell.admin', NULL, 'C39', now(), NULL, 'nanoampere', 'nanoampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-304, 0, 'opencell.admin', NULL, 'C40', now(), NULL, 'nanocoulomb', 'nanocoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-305, 0, 'opencell.admin', NULL, 'C41', now(), NULL, 'nanofarad', 'nanofarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-306, 0, 'opencell.admin', NULL, 'C42', now(), NULL, 'nanofarad per metre', 'nanofarad per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-307, 0, 'opencell.admin', NULL, 'C43', now(), NULL, 'nanohenry', 'nanohenry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-308, 0, 'opencell.admin', NULL, 'C44', now(), NULL, 'nanohenry per metre', 'nanohenry per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-309, 0, 'opencell.admin', NULL, 'C45', now(), NULL, 'nanometre', 'nanometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-310, 0, 'opencell.admin', NULL, 'C46', now(), NULL, 'nanoohm metre', 'nanoohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-311, 0, 'opencell.admin', NULL, 'C47', now(), NULL, 'nanosecond', 'nanosecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-312, 0, 'opencell.admin', NULL, 'C48', now(), NULL, 'nanotesla', 'nanotesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-313, 0, 'opencell.admin', NULL, 'C49', now(), NULL, 'nanowatt', 'nanowatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-314, 0, 'opencell.admin', NULL, 'C50', now(), NULL, 'neper', 'neper', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-315, 0, 'opencell.admin', NULL, 'C51', now(), NULL, 'neper per second', 'neper per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-316, 0, 'opencell.admin', NULL, 'C52', now(), NULL, 'picometre', 'picometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-317, 0, 'opencell.admin', NULL, 'C53', now(), NULL, 'newton metre second', 'newton metre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-318, 0, 'opencell.admin', NULL, 'C54', now(), NULL, 'newton metre squared per kilogram squared', 'newton metre squared per kilogram squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-319, 0, 'opencell.admin', NULL, 'C55', now(), NULL, 'newton per square metre', 'newton per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-320, 0, 'opencell.admin', NULL, 'C56', now(), NULL, 'newton per square millimetre', 'newton per square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-321, 0, 'opencell.admin', NULL, 'C57', now(), NULL, 'newton second', 'newton second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-322, 0, 'opencell.admin', NULL, 'C58', now(), NULL, 'newton second per metre', 'newton second per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-323, 0, 'opencell.admin', NULL, 'C59', now(), NULL, 'octave', 'octave', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-324, 0, 'opencell.admin', NULL, 'C60', now(), NULL, 'ohm centimetre', 'ohm centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-325, 0, 'opencell.admin', NULL, 'C61', now(), NULL, 'ohm metre', 'ohm metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-326, 0, 'opencell.admin', NULL, 'C62', now(), NULL, 'one', 'one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-327, 0, 'opencell.admin', NULL, 'C63', now(), NULL, 'parsec', 'parsec', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-328, 0, 'opencell.admin', NULL, 'C64', now(), NULL, 'pascal per kelvin', 'pascal per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-329, 0, 'opencell.admin', NULL, 'C65', now(), NULL, 'pascal second', 'pascal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-330, 0, 'opencell.admin', NULL, 'C66', now(), NULL, 'pascal second per cubic metre', 'pascal second per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-331, 0, 'opencell.admin', NULL, 'C67', now(), NULL, 'pascal second per metre', 'pascal second per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-332, 0, 'opencell.admin', NULL, 'C68', now(), NULL, 'petajoule', 'petajoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-333, 0, 'opencell.admin', NULL, 'C69', now(), NULL, 'phon', 'phon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-334, 0, 'opencell.admin', NULL, 'C7', now(), NULL, 'centipoise', 'centipoise', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-335, 0, 'opencell.admin', NULL, 'C70', now(), NULL, 'picoampere', 'picoampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-336, 0, 'opencell.admin', NULL, 'C71', now(), NULL, 'picocoulomb', 'picocoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-337, 0, 'opencell.admin', NULL, 'C72', now(), NULL, 'picofarad per metre', 'picofarad per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-338, 0, 'opencell.admin', NULL, 'C73', now(), NULL, 'picohenry', 'picohenry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-339, 0, 'opencell.admin', NULL, 'C74', now(), NULL, 'kilobit per second', 'kilobit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-340, 0, 'opencell.admin', NULL, 'C75', now(), NULL, 'picowatt', 'picowatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-341, 0, 'opencell.admin', NULL, 'C76', now(), NULL, 'picowatt per square metre', 'picowatt per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-342, 0, 'opencell.admin', NULL, 'C78', now(), NULL, 'pound-force', 'pound-force', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-343, 0, 'opencell.admin', NULL, 'C79', now(), NULL, 'kilovolt ampere hour', 'kilovolt ampere hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-344, 0, 'opencell.admin', NULL, 'C8', now(), NULL, 'millicoulomb per kilogram', 'millicoulomb per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-345, 0, 'opencell.admin', NULL, 'C80', now(), NULL, 'rad', 'rad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-346, 0, 'opencell.admin', NULL, 'C81', now(), NULL, 'radian', 'radian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-347, 0, 'opencell.admin', NULL, 'C82', now(), NULL, 'radian square metre per mole', 'radian square metre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-348, 0, 'opencell.admin', NULL, 'C83', now(), NULL, 'radian square metre per kilogram', 'radian square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-349, 0, 'opencell.admin', NULL, 'C84', now(), NULL, 'radian per metre', 'radian per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-350, 0, 'opencell.admin', NULL, 'C85', now(), NULL, 'reciprocal angstrom', 'reciprocal angstrom', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-351, 0, 'opencell.admin', NULL, 'C86', now(), NULL, 'reciprocal cubic metre', 'reciprocal cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-352, 0, 'opencell.admin', NULL, 'C87', now(), NULL, 'reciprocal cubic metre per second', 'reciprocal cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-353, 0, 'opencell.admin', NULL, 'C88', now(), NULL, 'reciprocal electron volt per cubic metre', 'reciprocal electron volt per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-354, 0, 'opencell.admin', NULL, 'C89', now(), NULL, 'reciprocal henry', 'reciprocal henry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-355, 0, 'opencell.admin', NULL, 'C9', now(), NULL, 'coil group', 'coil group', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-356, 0, 'opencell.admin', NULL, 'C90', now(), NULL, 'reciprocal joule per cubic metre', 'reciprocal joule per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-357, 0, 'opencell.admin', NULL, 'C91', now(), NULL, 'reciprocal kelvin or kelvin to the power minus one', 'reciprocal kelvin or kelvin to the power minus one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-358, 0, 'opencell.admin', NULL, 'C92', now(), NULL, 'reciprocal metre', 'reciprocal metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-359, 0, 'opencell.admin', NULL, 'C93', now(), NULL, 'reciprocal square metre', 'reciprocal square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-360, 0, 'opencell.admin', NULL, 'C94', now(), NULL, 'reciprocal minute', 'reciprocal minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-361, 0, 'opencell.admin', NULL, 'C95', now(), NULL, 'reciprocal mole', 'reciprocal mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-362, 0, 'opencell.admin', NULL, 'C96', now(), NULL, 'reciprocal pascal or pascal to the power minus one', 'reciprocal pascal or pascal to the power minus one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-363, 0, 'opencell.admin', NULL, 'C97', now(), NULL, 'reciprocal second', 'reciprocal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-364, 0, 'opencell.admin', NULL, 'C99', now(), NULL, 'reciprocal second per metre squared', 'reciprocal second per metre squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-365, 0, 'opencell.admin', NULL, 'CCT', now(), NULL, 'carrying capacity in metric ton', 'carrying capacity in metric ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-366, 0, 'opencell.admin', NULL, 'CDL', now(), NULL, 'candela', 'candela', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-367, 0, 'opencell.admin', NULL, 'CEL', now(), NULL, 'degree Celsius', 'degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-368, 0, 'opencell.admin', NULL, 'CEN', now(), NULL, 'hundred', 'hundred', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-369, 0, 'opencell.admin', NULL, 'CG', now(), NULL, 'card', 'card', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-370, 0, 'opencell.admin', NULL, 'CGM', now(), NULL, 'centigram', 'centigram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-371, 0, 'opencell.admin', NULL, 'CKG', now(), NULL, 'coulomb per kilogram', 'coulomb per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-372, 0, 'opencell.admin', NULL, 'CLF', now(), NULL, 'hundred leave', 'hundred leave', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-373, 0, 'opencell.admin', NULL, 'CLT', now(), NULL, 'centilitre', 'centilitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-374, 0, 'opencell.admin', NULL, 'CMK', now(), NULL, 'square centimetre', 'square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-375, 0, 'opencell.admin', NULL, 'CMQ', now(), NULL, 'cubic centimetre', 'cubic centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-376, 0, 'opencell.admin', NULL, 'CMT', now(), NULL, 'centimetre', 'centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-377, 0, 'opencell.admin', NULL, 'CNP', now(), NULL, 'hundred pack', 'hundred pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-378, 0, 'opencell.admin', NULL, 'CNT', now(), NULL, 'cental (UK)', 'cental (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-379, 0, 'opencell.admin', NULL, 'COU', now(), NULL, 'coulomb', 'coulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-380, 0, 'opencell.admin', NULL, 'CTG', now(), NULL, 'content gram', 'content gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-381, 0, 'opencell.admin', NULL, 'CTM', now(), NULL, 'metric carat', 'metric carat', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-382, 0, 'opencell.admin', NULL, 'CTN', now(), NULL, 'content ton (metric)', 'content ton (metric)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-383, 0, 'opencell.admin', NULL, 'CUR', now(), NULL, 'curie', 'curie', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-384, 0, 'opencell.admin', NULL, 'CWA', now(), NULL, 'hundred pound (cwt) / hundred weight (US)', 'hundred pound (cwt) / hundred weight (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-385, 0, 'opencell.admin', NULL, 'CWI', now(), NULL, 'hundred weight (UK)', 'hundred weight (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-386, 0, 'opencell.admin', NULL, 'D03', now(), NULL, 'kilowatt hour per hour', 'kilowatt hour per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-387, 0, 'opencell.admin', NULL, 'D04', now(), NULL, 'lot  [unit of weight]', 'lot  [unit of weight]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-388, 0, 'opencell.admin', NULL, 'D1', now(), NULL, 'reciprocal second per steradian', 'reciprocal second per steradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-389, 0, 'opencell.admin', NULL, 'D10', now(), NULL, 'siemens per metre', 'siemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-390, 0, 'opencell.admin', NULL, 'D11', now(), NULL, 'mebibit', 'mebibit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-391, 0, 'opencell.admin', NULL, 'D12', now(), NULL, 'siemens square metre per mole', 'siemens square metre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-392, 0, 'opencell.admin', NULL, 'D13', now(), NULL, 'sievert', 'sievert', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-393, 0, 'opencell.admin', NULL, 'D15', now(), NULL, 'sone', 'sone', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-394, 0, 'opencell.admin', NULL, 'D16', now(), NULL, 'square centimetre per erg', 'square centimetre per erg', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-395, 0, 'opencell.admin', NULL, 'D17', now(), NULL, 'square centimetre per steradian erg', 'square centimetre per steradian erg', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-396, 0, 'opencell.admin', NULL, 'D18', now(), NULL, 'metre kelvin', 'metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-397, 0, 'opencell.admin', NULL, 'D19', now(), NULL, 'square metre kelvin per watt', 'square metre kelvin per watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-398, 0, 'opencell.admin', NULL, 'D2', now(), NULL, 'reciprocal second per steradian metre squared', 'reciprocal second per steradian metre squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-399, 0, 'opencell.admin', NULL, 'D20', now(), NULL, 'square metre per joule', 'square metre per joule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-400, 0, 'opencell.admin', NULL, 'D21', now(), NULL, 'square metre per kilogram', 'square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-401, 0, 'opencell.admin', NULL, 'D22', now(), NULL, 'square metre per mole', 'square metre per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-402, 0, 'opencell.admin', NULL, 'D23', now(), NULL, 'pen gram (protein)', 'pen gram (protein)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-403, 0, 'opencell.admin', NULL, 'D24', now(), NULL, 'square metre per steradian', 'square metre per steradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-404, 0, 'opencell.admin', NULL, 'D25', now(), NULL, 'square metre per steradian joule', 'square metre per steradian joule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-405, 0, 'opencell.admin', NULL, 'D26', now(), NULL, 'square metre per volt second', 'square metre per volt second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-406, 0, 'opencell.admin', NULL, 'D27', now(), NULL, 'steradian', 'steradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-407, 0, 'opencell.admin', NULL, 'D29', now(), NULL, 'terahertz', 'terahertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-408, 0, 'opencell.admin', NULL, 'D30', now(), NULL, 'terajoule', 'terajoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-409, 0, 'opencell.admin', NULL, 'D31', now(), NULL, 'terawatt', 'terawatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-410, 0, 'opencell.admin', NULL, 'D32', now(), NULL, 'terawatt hour', 'terawatt hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-411, 0, 'opencell.admin', NULL, 'D33', now(), NULL, 'tesla', 'tesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-412, 0, 'opencell.admin', NULL, 'D34', now(), NULL, 'tex', 'tex', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-413, 0, 'opencell.admin', NULL, 'D36', now(), NULL, 'megabit', 'megabit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-414, 0, 'opencell.admin', NULL, 'D41', now(), NULL, 'tonne per cubic metre', 'tonne per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-415, 0, 'opencell.admin', NULL, 'D42', now(), NULL, 'tropical year', 'tropical year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-416, 0, 'opencell.admin', NULL, 'D43', now(), NULL, 'unified atomic mass unit', 'unified atomic mass unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-417, 0, 'opencell.admin', NULL, 'D44', now(), NULL, 'var', 'var', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-418, 0, 'opencell.admin', NULL, 'D45', now(), NULL, 'volt squared per kelvin squared', 'volt squared per kelvin squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-419, 0, 'opencell.admin', NULL, 'D46', now(), NULL, 'volt - ampere', 'volt - ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-420, 0, 'opencell.admin', NULL, 'D47', now(), NULL, 'volt per centimetre', 'volt per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-421, 0, 'opencell.admin', NULL, 'D48', now(), NULL, 'volt per kelvin', 'volt per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-422, 0, 'opencell.admin', NULL, 'D49', now(), NULL, 'millivolt per kelvin', 'millivolt per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-423, 0, 'opencell.admin', NULL, 'D5', now(), NULL, 'kilogram per square centimetre', 'kilogram per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-424, 0, 'opencell.admin', NULL, 'D50', now(), NULL, 'volt per metre', 'volt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-425, 0, 'opencell.admin', NULL, 'D51', now(), NULL, 'volt per millimetre', 'volt per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-426, 0, 'opencell.admin', NULL, 'D52', now(), NULL, 'watt per kelvin', 'watt per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-427, 0, 'opencell.admin', NULL, 'D53', now(), NULL, 'watt per metre kelvin', 'watt per metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-428, 0, 'opencell.admin', NULL, 'D54', now(), NULL, 'watt per square metre', 'watt per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-429, 0, 'opencell.admin', NULL, 'D55', now(), NULL, 'watt per square metre kelvin', 'watt per square metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-430, 0, 'opencell.admin', NULL, 'D56', now(), NULL, 'watt per square metre kelvin to the fourth power', 'watt per square metre kelvin to the fourth power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-431, 0, 'opencell.admin', NULL, 'D57', now(), NULL, 'watt per steradian', 'watt per steradian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-432, 0, 'opencell.admin', NULL, 'D58', now(), NULL, 'watt per steradian square metre', 'watt per steradian square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-433, 0, 'opencell.admin', NULL, 'D59', now(), NULL, 'weber per metre', 'weber per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-434, 0, 'opencell.admin', NULL, 'D6', now(), NULL, 'roentgen per second', 'roentgen per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-435, 0, 'opencell.admin', NULL, 'D60', now(), NULL, 'weber per millimetre', 'weber per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-436, 0, 'opencell.admin', NULL, 'D61', now(), NULL, 'minute [unit of angle]', 'minute [unit of angle]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-437, 0, 'opencell.admin', NULL, 'D62', now(), NULL, 'second [unit of angle]', 'second [unit of angle]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-438, 0, 'opencell.admin', NULL, 'D63', now(), NULL, 'book', 'book', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-439, 0, 'opencell.admin', NULL, 'D65', now(), NULL, 'round', 'round', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-440, 0, 'opencell.admin', NULL, 'D68', now(), NULL, 'number of words', 'number of words', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-441, 0, 'opencell.admin', NULL, 'D69', now(), NULL, 'inch to the fourth power', 'inch to the fourth power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-442, 0, 'opencell.admin', NULL, 'D73', now(), NULL, 'joule square metre', 'joule square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-443, 0, 'opencell.admin', NULL, 'D74', now(), NULL, 'kilogram per mole', 'kilogram per mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-444, 0, 'opencell.admin', NULL, 'D77', now(), NULL, 'megacoulomb', 'megacoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-445, 0, 'opencell.admin', NULL, 'D78', now(), NULL, 'megajoule per second', 'megajoule per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-446, 0, 'opencell.admin', NULL, 'D80', now(), NULL, 'microwatt', 'microwatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-447, 0, 'opencell.admin', NULL, 'D81', now(), NULL, 'microtesla', 'microtesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-448, 0, 'opencell.admin', NULL, 'D82', now(), NULL, 'microvolt', 'microvolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-449, 0, 'opencell.admin', NULL, 'D83', now(), NULL, 'millinewton metre', 'millinewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-450, 0, 'opencell.admin', NULL, 'D85', now(), NULL, 'microwatt per square metre', 'microwatt per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-451, 0, 'opencell.admin', NULL, 'D86', now(), NULL, 'millicoulomb', 'millicoulomb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-452, 0, 'opencell.admin', NULL, 'D87', now(), NULL, 'millimole per kilogram', 'millimole per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-453, 0, 'opencell.admin', NULL, 'D88', now(), NULL, 'millicoulomb per cubic metre', 'millicoulomb per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-454, 0, 'opencell.admin', NULL, 'D89', now(), NULL, 'millicoulomb per square metre', 'millicoulomb per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-455, 0, 'opencell.admin', NULL, 'D91', now(), NULL, 'rem', 'rem', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-456, 0, 'opencell.admin', NULL, 'D93', now(), NULL, 'second per cubic metre', 'second per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-457, 0, 'opencell.admin', NULL, 'D94', now(), NULL, 'second per cubic metre radian', 'second per cubic metre radian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-458, 0, 'opencell.admin', NULL, 'D95', now(), NULL, 'joule per gram', 'joule per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-459, 0, 'opencell.admin', NULL, 'DAA', now(), NULL, 'decare', 'decare', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-460, 0, 'opencell.admin', NULL, 'DAD', now(), NULL, 'ten day', 'ten day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-461, 0, 'opencell.admin', NULL, 'DAY', now(), NULL, 'day', 'day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-462, 0, 'opencell.admin', NULL, 'DB', now(), NULL, 'dry pound', 'dry pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-463, 0, 'opencell.admin', NULL, 'DBM', now(), NULL, 'Decibel-milliwatts', 'Decibel-milliwatts', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-464, 0, 'opencell.admin', NULL, 'DBW', now(), NULL, 'Decibel watt', 'Decibel watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-465, 0, 'opencell.admin', NULL, 'DD', now(), NULL, 'degree [unit of angle]', 'degree [unit of angle]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-466, 0, 'opencell.admin', NULL, 'DEC', now(), NULL, 'decade', 'decade', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-467, 0, 'opencell.admin', NULL, 'DG', now(), NULL, 'decigram', 'decigram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-468, 0, 'opencell.admin', NULL, 'DJ', now(), NULL, 'decagram', 'decagram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-469, 0, 'opencell.admin', NULL, 'DLT', now(), NULL, 'decilitre', 'decilitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-470, 0, 'opencell.admin', NULL, 'DMA', now(), NULL, 'cubic decametre', 'cubic decametre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-471, 0, 'opencell.admin', NULL, 'DMK', now(), NULL, 'square decimetre', 'square decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-472, 0, 'opencell.admin', NULL, 'DMO', now(), NULL, 'standard kilolitre', 'standard kilolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-473, 0, 'opencell.admin', NULL, 'DMQ', now(), NULL, 'cubic decimetre', 'cubic decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-474, 0, 'opencell.admin', NULL, 'DMT', now(), NULL, 'decimetre', 'decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-475, 0, 'opencell.admin', NULL, 'DN', now(), NULL, 'decinewton metre', 'decinewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-476, 0, 'opencell.admin', NULL, 'DPC', now(), NULL, 'dozen piece', 'dozen piece', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-477, 0, 'opencell.admin', NULL, 'DPR', now(), NULL, 'dozen pair', 'dozen pair', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-478, 0, 'opencell.admin', NULL, 'DPT', now(), NULL, 'displacement tonnage', 'displacement tonnage', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-479, 0, 'opencell.admin', NULL, 'DRA', now(), NULL, 'dram (US)', 'dram (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-480, 0, 'opencell.admin', NULL, 'DRI', now(), NULL, 'dram (UK)', 'dram (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-481, 0, 'opencell.admin', NULL, 'DRL', now(), NULL, 'dozen roll', 'dozen roll', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-482, 0, 'opencell.admin', NULL, 'DT', now(), NULL, 'dry ton', 'dry ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-483, 0, 'opencell.admin', NULL, 'DTN', now(), NULL, 'decitonne', 'decitonne', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-484, 0, 'opencell.admin', NULL, 'DWT', now(), NULL, 'pennyweight', 'pennyweight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-485, 0, 'opencell.admin', NULL, 'DZN', now(), NULL, 'dozen', 'dozen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-486, 0, 'opencell.admin', NULL, 'DZP', now(), NULL, 'dozen pack', 'dozen pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-487, 0, 'opencell.admin', NULL, 'E01', now(), NULL, 'newton per square centimetre', 'newton per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-488, 0, 'opencell.admin', NULL, 'E07', now(), NULL, 'megawatt hour per hour', 'megawatt hour per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-489, 0, 'opencell.admin', NULL, 'E08', now(), NULL, 'megawatt per hertz', 'megawatt per hertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-490, 0, 'opencell.admin', NULL, 'E09', now(), NULL, 'milliampere hour', 'milliampere hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-491, 0, 'opencell.admin', NULL, 'E10', now(), NULL, 'degree day', 'degree day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-492, 0, 'opencell.admin', NULL, 'E12', now(), NULL, 'mille', 'mille', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-493, 0, 'opencell.admin', NULL, 'E14', now(), NULL, 'kilocalorie (international table)', 'kilocalorie (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-494, 0, 'opencell.admin', NULL, 'E15', now(), NULL, 'kilocalorie (thermochemical) per hour', 'kilocalorie (thermochemical) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-495, 0, 'opencell.admin', NULL, 'E16', now(), NULL, 'million Btu(IT) per hour', 'million Btu(IT) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-496, 0, 'opencell.admin', NULL, 'E17', now(), NULL, 'cubic foot per second', 'cubic foot per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-497, 0, 'opencell.admin', NULL, 'E18', now(), NULL, 'tonne per hour', 'tonne per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-498, 0, 'opencell.admin', NULL, 'E19', now(), NULL, 'ping', 'ping', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-499, 0, 'opencell.admin', NULL, 'E20', now(), NULL, 'megabit per second', 'megabit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-500, 0, 'opencell.admin', NULL, 'E21', now(), NULL, 'shares', 'shares', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-501, 0, 'opencell.admin', NULL, 'E22', now(), NULL, 'TEU', 'TEU', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-502, 0, 'opencell.admin', NULL, 'E23', now(), NULL, 'tyre', 'tyre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-503, 0, 'opencell.admin', NULL, 'E25', now(), NULL, 'active unit', 'active unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-504, 0, 'opencell.admin', NULL, 'E27', now(), NULL, 'dose', 'dose', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-505, 0, 'opencell.admin', NULL, 'E28', now(), NULL, 'air dry ton', 'air dry ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-506, 0, 'opencell.admin', NULL, 'E30', now(), NULL, 'strand', 'strand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-507, 0, 'opencell.admin', NULL, 'E31', now(), NULL, 'square metre per litre', 'square metre per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-508, 0, 'opencell.admin', NULL, 'E32', now(), NULL, 'litre per hour', 'litre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-509, 0, 'opencell.admin', NULL, 'E33', now(), NULL, 'foot per thousand', 'foot per thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-510, 0, 'opencell.admin', NULL, 'E34', now(), NULL, 'gigabyte', 'gigabyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-511, 0, 'opencell.admin', NULL, 'E35', now(), NULL, 'terabyte', 'terabyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-512, 0, 'opencell.admin', NULL, 'E36', now(), NULL, 'petabyte', 'petabyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-513, 0, 'opencell.admin', NULL, 'E37', now(), NULL, 'pixel', 'pixel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-514, 0, 'opencell.admin', NULL, 'E38', now(), NULL, 'megapixel', 'megapixel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-515, 0, 'opencell.admin', NULL, 'E39', now(), NULL, 'dots per inch', 'dots per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-516, 0, 'opencell.admin', NULL, 'E4', now(), NULL, 'gross kilogram', 'gross kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-517, 0, 'opencell.admin', NULL, 'E40', now(), NULL, 'part per hundred thousand', 'part per hundred thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-518, 0, 'opencell.admin', NULL, 'E41', now(), NULL, 'kilogram-force per square millimetre', 'kilogram-force per square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-519, 0, 'opencell.admin', NULL, 'E42', now(), NULL, 'kilogram-force per square centimetre', 'kilogram-force per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-520, 0, 'opencell.admin', NULL, 'E43', now(), NULL, 'joule per square centimetre', 'joule per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-521, 0, 'opencell.admin', NULL, 'E44', now(), NULL, 'kilogram-force metre per square centimetre', 'kilogram-force metre per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-522, 0, 'opencell.admin', NULL, 'E45', now(), NULL, 'milliohm', 'milliohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-523, 0, 'opencell.admin', NULL, 'E46', now(), NULL, 'kilowatt hour per cubic metre', 'kilowatt hour per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-524, 0, 'opencell.admin', NULL, 'E47', now(), NULL, 'kilowatt hour per kelvin', 'kilowatt hour per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-525, 0, 'opencell.admin', NULL, 'E48', now(), NULL, 'service unit', 'service unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-526, 0, 'opencell.admin', NULL, 'E49', now(), NULL, 'working day', 'working day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-527, 0, 'opencell.admin', NULL, 'E50', now(), NULL, 'accounting unit', 'accounting unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-528, 0, 'opencell.admin', NULL, 'E51', now(), NULL, 'job', 'job', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-529, 0, 'opencell.admin', NULL, 'E52', now(), NULL, 'run foot', 'run foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-530, 0, 'opencell.admin', NULL, 'E53', now(), NULL, 'test', 'test', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-531, 0, 'opencell.admin', NULL, 'E54', now(), NULL, 'trip', 'trip', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-532, 0, 'opencell.admin', NULL, 'E55', now(), NULL, 'use', 'use', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-533, 0, 'opencell.admin', NULL, 'E56', now(), NULL, 'well', 'well', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-534, 0, 'opencell.admin', NULL, 'E57', now(), NULL, 'zone', 'zone', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-535, 0, 'opencell.admin', NULL, 'E58', now(), NULL, 'exabit per second', 'exabit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-536, 0, 'opencell.admin', NULL, 'E59', now(), NULL, 'exbibyte', 'exbibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-537, 0, 'opencell.admin', NULL, 'E60', now(), NULL, 'pebibyte', 'pebibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-538, 0, 'opencell.admin', NULL, 'E61', now(), NULL, 'tebibyte', 'tebibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-539, 0, 'opencell.admin', NULL, 'E62', now(), NULL, 'gibibyte', 'gibibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-540, 0, 'opencell.admin', NULL, 'E63', now(), NULL, 'mebibyte', 'mebibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-541, 0, 'opencell.admin', NULL, 'E64', now(), NULL, 'kibibyte', 'kibibyte', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-542, 0, 'opencell.admin', NULL, 'E65', now(), NULL, 'exbibit per metre', 'exbibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-543, 0, 'opencell.admin', NULL, 'E66', now(), NULL, 'exbibit per square metre', 'exbibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-544, 0, 'opencell.admin', NULL, 'E67', now(), NULL, 'exbibit per cubic metre', 'exbibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-545, 0, 'opencell.admin', NULL, 'E68', now(), NULL, 'gigabyte per second', 'gigabyte per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-546, 0, 'opencell.admin', NULL, 'E69', now(), NULL, 'gibibit per metre', 'gibibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-547, 0, 'opencell.admin', NULL, 'E70', now(), NULL, 'gibibit per square metre', 'gibibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-548, 0, 'opencell.admin', NULL, 'E71', now(), NULL, 'gibibit per cubic metre', 'gibibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-549, 0, 'opencell.admin', NULL, 'E72', now(), NULL, 'kibibit per metre', 'kibibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-550, 0, 'opencell.admin', NULL, 'E73', now(), NULL, 'kibibit per square metre', 'kibibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-551, 0, 'opencell.admin', NULL, 'E74', now(), NULL, 'kibibit per cubic metre', 'kibibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-552, 0, 'opencell.admin', NULL, 'E75', now(), NULL, 'mebibit per metre', 'mebibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-553, 0, 'opencell.admin', NULL, 'E76', now(), NULL, 'mebibit per square metre', 'mebibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-554, 0, 'opencell.admin', NULL, 'E77', now(), NULL, 'mebibit per cubic metre', 'mebibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-555, 0, 'opencell.admin', NULL, 'E78', now(), NULL, 'petabit', 'petabit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-556, 0, 'opencell.admin', NULL, 'E79', now(), NULL, 'petabit per second', 'petabit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-557, 0, 'opencell.admin', NULL, 'E80', now(), NULL, 'pebibit per metre', 'pebibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-558, 0, 'opencell.admin', NULL, 'E81', now(), NULL, 'pebibit per square metre', 'pebibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-559, 0, 'opencell.admin', NULL, 'E82', now(), NULL, 'pebibit per cubic metre', 'pebibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-560, 0, 'opencell.admin', NULL, 'E83', now(), NULL, 'terabit', 'terabit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-561, 0, 'opencell.admin', NULL, 'E84', now(), NULL, 'terabit per second', 'terabit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-562, 0, 'opencell.admin', NULL, 'E85', now(), NULL, 'tebibit per metre', 'tebibit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-563, 0, 'opencell.admin', NULL, 'E86', now(), NULL, 'tebibit per cubic metre', 'tebibit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-564, 0, 'opencell.admin', NULL, 'E87', now(), NULL, 'tebibit per square metre', 'tebibit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-565, 0, 'opencell.admin', NULL, 'E88', now(), NULL, 'bit per metre', 'bit per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-566, 0, 'opencell.admin', NULL, 'E89', now(), NULL, 'bit per square metre', 'bit per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-567, 0, 'opencell.admin', NULL, 'E90', now(), NULL, 'reciprocal centimetre', 'reciprocal centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-568, 0, 'opencell.admin', NULL, 'E91', now(), NULL, 'reciprocal day', 'reciprocal day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-569, 0, 'opencell.admin', NULL, 'E92', now(), NULL, 'cubic decimetre per hour', 'cubic decimetre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-570, 0, 'opencell.admin', NULL, 'E93', now(), NULL, 'kilogram per hour', 'kilogram per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-571, 0, 'opencell.admin', NULL, 'E94', now(), NULL, 'kilomole per second', 'kilomole per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-572, 0, 'opencell.admin', NULL, 'E95', now(), NULL, 'mole per second', 'mole per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-573, 0, 'opencell.admin', NULL, 'E96', now(), NULL, 'degree per second', 'degree per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-574, 0, 'opencell.admin', NULL, 'E97', now(), NULL, 'millimetre per degree Celcius metre', 'millimetre per degree Celcius metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-575, 0, 'opencell.admin', NULL, 'E98', now(), NULL, 'degree Celsius per kelvin', 'degree Celsius per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-576, 0, 'opencell.admin', NULL, 'E99', now(), NULL, 'hectopascal per bar', 'hectopascal per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-577, 0, 'opencell.admin', NULL, 'EA', now(), NULL, 'each', 'each', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-578, 0, 'opencell.admin', NULL, 'EB', now(), NULL, 'electronic mail box', 'electronic mail box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-579, 0, 'opencell.admin', NULL, 'EQ', now(), NULL, 'equivalent gallon', 'equivalent gallon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-580, 0, 'opencell.admin', NULL, 'F01', now(), NULL, 'bit per cubic metre', 'bit per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-581, 0, 'opencell.admin', NULL, 'F02', now(), NULL, 'kelvin per kelvin', 'kelvin per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-582, 0, 'opencell.admin', NULL, 'F03', now(), NULL, 'kilopascal per bar', 'kilopascal per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-583, 0, 'opencell.admin', NULL, 'F04', now(), NULL, 'millibar per bar', 'millibar per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-584, 0, 'opencell.admin', NULL, 'F05', now(), NULL, 'megapascal per bar', 'megapascal per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-585, 0, 'opencell.admin', NULL, 'F06', now(), NULL, 'poise per bar', 'poise per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-586, 0, 'opencell.admin', NULL, 'F07', now(), NULL, 'pascal per bar', 'pascal per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-587, 0, 'opencell.admin', NULL, 'F08', now(), NULL, 'milliampere per inch', 'milliampere per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-588, 0, 'opencell.admin', NULL, 'F10', now(), NULL, 'kelvin per hour', 'kelvin per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-589, 0, 'opencell.admin', NULL, 'F11', now(), NULL, 'kelvin per minute', 'kelvin per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-590, 0, 'opencell.admin', NULL, 'F12', now(), NULL, 'kelvin per second', 'kelvin per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-591, 0, 'opencell.admin', NULL, 'F13', now(), NULL, 'slug', 'slug', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-592, 0, 'opencell.admin', NULL, 'F14', now(), NULL, 'gram per kelvin', 'gram per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-593, 0, 'opencell.admin', NULL, 'F15', now(), NULL, 'kilogram per kelvin', 'kilogram per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-594, 0, 'opencell.admin', NULL, 'F16', now(), NULL, 'milligram per kelvin', 'milligram per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-595, 0, 'opencell.admin', NULL, 'F17', now(), NULL, 'pound-force per foot', 'pound-force per foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-596, 0, 'opencell.admin', NULL, 'F18', now(), NULL, 'kilogram square centimetre', 'kilogram square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-597, 0, 'opencell.admin', NULL, 'F19', now(), NULL, 'kilogram square millimetre', 'kilogram square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-598, 0, 'opencell.admin', NULL, 'F20', now(), NULL, 'pound inch squared', 'pound inch squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-599, 0, 'opencell.admin', NULL, 'F21', now(), NULL, 'pound-force inch', 'pound-force inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-600, 0, 'opencell.admin', NULL, 'F22', now(), NULL, 'pound-force foot per ampere', 'pound-force foot per ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-601, 0, 'opencell.admin', NULL, 'F23', now(), NULL, 'gram per cubic decimetre', 'gram per cubic decimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-602, 0, 'opencell.admin', NULL, 'F24', now(), NULL, 'kilogram per kilomol', 'kilogram per kilomol', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-603, 0, 'opencell.admin', NULL, 'F25', now(), NULL, 'gram per hertz', 'gram per hertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-604, 0, 'opencell.admin', NULL, 'F26', now(), NULL, 'gram per day', 'gram per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-605, 0, 'opencell.admin', NULL, 'F27', now(), NULL, 'gram per hour', 'gram per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-606, 0, 'opencell.admin', NULL, 'F28', now(), NULL, 'gram per minute', 'gram per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-607, 0, 'opencell.admin', NULL, 'F29', now(), NULL, 'gram per second', 'gram per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-608, 0, 'opencell.admin', NULL, 'F30', now(), NULL, 'kilogram per day', 'kilogram per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-609, 0, 'opencell.admin', NULL, 'F31', now(), NULL, 'kilogram per minute', 'kilogram per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-610, 0, 'opencell.admin', NULL, 'F32', now(), NULL, 'milligram per day', 'milligram per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-611, 0, 'opencell.admin', NULL, 'F33', now(), NULL, 'milligram per minute', 'milligram per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-612, 0, 'opencell.admin', NULL, 'F34', now(), NULL, 'milligram per second', 'milligram per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-613, 0, 'opencell.admin', NULL, 'F35', now(), NULL, 'gram per day kelvin', 'gram per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-614, 0, 'opencell.admin', NULL, 'F36', now(), NULL, 'gram per hour kelvin', 'gram per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-615, 0, 'opencell.admin', NULL, 'F37', now(), NULL, 'gram per minute kelvin', 'gram per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-616, 0, 'opencell.admin', NULL, 'F38', now(), NULL, 'gram per second kelvin', 'gram per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-617, 0, 'opencell.admin', NULL, 'F39', now(), NULL, 'kilogram per day kelvin', 'kilogram per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-618, 0, 'opencell.admin', NULL, 'F40', now(), NULL, 'kilogram per hour kelvin', 'kilogram per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-619, 0, 'opencell.admin', NULL, 'F41', now(), NULL, 'kilogram per minute kelvin', 'kilogram per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-620, 0, 'opencell.admin', NULL, 'F42', now(), NULL, 'kilogram per second kelvin', 'kilogram per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-621, 0, 'opencell.admin', NULL, 'F43', now(), NULL, 'milligram per day kelvin', 'milligram per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-622, 0, 'opencell.admin', NULL, 'F44', now(), NULL, 'milligram per hour kelvin', 'milligram per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-623, 0, 'opencell.admin', NULL, 'F45', now(), NULL, 'milligram per minute kelvin', 'milligram per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-624, 0, 'opencell.admin', NULL, 'F46', now(), NULL, 'milligram per second kelvin', 'milligram per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-625, 0, 'opencell.admin', NULL, 'F47', now(), NULL, 'newton per millimetre', 'newton per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-626, 0, 'opencell.admin', NULL, 'F48', now(), NULL, 'pound-force per inch', 'pound-force per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-627, 0, 'opencell.admin', NULL, 'F49', now(), NULL, 'rod [unit of distance]', 'rod [unit of distance]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-628, 0, 'opencell.admin', NULL, 'F50', now(), NULL, 'micrometre per kelvin', 'micrometre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-629, 0, 'opencell.admin', NULL, 'F51', now(), NULL, 'centimetre per kelvin', 'centimetre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-630, 0, 'opencell.admin', NULL, 'F52', now(), NULL, 'metre per kelvin', 'metre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-631, 0, 'opencell.admin', NULL, 'F53', now(), NULL, 'millimetre per kelvin', 'millimetre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-632, 0, 'opencell.admin', NULL, 'F54', now(), NULL, 'milliohm per metre', 'milliohm per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-633, 0, 'opencell.admin', NULL, 'F55', now(), NULL, 'ohm per mile (statute mile)', 'ohm per mile (statute mile)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-634, 0, 'opencell.admin', NULL, 'F56', now(), NULL, 'ohm per kilometre', 'ohm per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-635, 0, 'opencell.admin', NULL, 'F57', now(), NULL, 'milliampere per pound-force per square inch', 'milliampere per pound-force per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-636, 0, 'opencell.admin', NULL, 'F58', now(), NULL, 'reciprocal bar', 'reciprocal bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-637, 0, 'opencell.admin', NULL, 'F59', now(), NULL, 'milliampere per bar', 'milliampere per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-638, 0, 'opencell.admin', NULL, 'F60', now(), NULL, 'degree Celsius per bar', 'degree Celsius per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-639, 0, 'opencell.admin', NULL, 'F61', now(), NULL, 'kelvin per bar', 'kelvin per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-640, 0, 'opencell.admin', NULL, 'F62', now(), NULL, 'gram per day bar', 'gram per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-641, 0, 'opencell.admin', NULL, 'F63', now(), NULL, 'gram per hour bar', 'gram per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-642, 0, 'opencell.admin', NULL, 'F64', now(), NULL, 'gram per minute bar', 'gram per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-643, 0, 'opencell.admin', NULL, 'F65', now(), NULL, 'gram per second bar', 'gram per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-644, 0, 'opencell.admin', NULL, 'F66', now(), NULL, 'kilogram per day bar', 'kilogram per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-645, 0, 'opencell.admin', NULL, 'F67', now(), NULL, 'kilogram per hour bar', 'kilogram per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-646, 0, 'opencell.admin', NULL, 'F68', now(), NULL, 'kilogram per minute bar', 'kilogram per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-647, 0, 'opencell.admin', NULL, 'F69', now(), NULL, 'kilogram per second bar', 'kilogram per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-648, 0, 'opencell.admin', NULL, 'F70', now(), NULL, 'milligram per day bar', 'milligram per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-649, 0, 'opencell.admin', NULL, 'F71', now(), NULL, 'milligram per hour bar', 'milligram per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-650, 0, 'opencell.admin', NULL, 'F72', now(), NULL, 'milligram per minute bar', 'milligram per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-651, 0, 'opencell.admin', NULL, 'F73', now(), NULL, 'milligram per second bar', 'milligram per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-652, 0, 'opencell.admin', NULL, 'F74', now(), NULL, 'gram per bar', 'gram per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-653, 0, 'opencell.admin', NULL, 'F75', now(), NULL, 'milligram per bar', 'milligram per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-654, 0, 'opencell.admin', NULL, 'F76', now(), NULL, 'milliampere per millimetre', 'milliampere per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-655, 0, 'opencell.admin', NULL, 'F77', now(), NULL, 'pascal second per kelvin', 'pascal second per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-656, 0, 'opencell.admin', NULL, 'F78', now(), NULL, 'inch of water', 'inch of water', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-657, 0, 'opencell.admin', NULL, 'F79', now(), NULL, 'inch of mercury', 'inch of mercury', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-658, 0, 'opencell.admin', NULL, 'F80', now(), NULL, 'water horse power', 'water horse power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-659, 0, 'opencell.admin', NULL, 'F81', now(), NULL, 'bar per kelvin', 'bar per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-660, 0, 'opencell.admin', NULL, 'F82', now(), NULL, 'hectopascal per kelvin', 'hectopascal per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-661, 0, 'opencell.admin', NULL, 'F83', now(), NULL, 'kilopascal per kelvin', 'kilopascal per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-662, 0, 'opencell.admin', NULL, 'F84', now(), NULL, 'millibar per kelvin', 'millibar per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-663, 0, 'opencell.admin', NULL, 'F85', now(), NULL, 'megapascal per kelvin', 'megapascal per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-664, 0, 'opencell.admin', NULL, 'F86', now(), NULL, 'poise per kelvin', 'poise per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-665, 0, 'opencell.admin', NULL, 'F87', now(), NULL, 'volt per litre minute', 'volt per litre minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-666, 0, 'opencell.admin', NULL, 'F88', now(), NULL, 'newton centimetre', 'newton centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-667, 0, 'opencell.admin', NULL, 'F89', now(), NULL, 'newton metre per degree', 'newton metre per degree', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-668, 0, 'opencell.admin', NULL, 'F90', now(), NULL, 'newton metre per ampere', 'newton metre per ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-669, 0, 'opencell.admin', NULL, 'F91', now(), NULL, 'bar litre per second', 'bar litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-670, 0, 'opencell.admin', NULL, 'F92', now(), NULL, 'bar cubic metre per second', 'bar cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-671, 0, 'opencell.admin', NULL, 'F93', now(), NULL, 'hectopascal litre per second', 'hectopascal litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-672, 0, 'opencell.admin', NULL, 'F94', now(), NULL, 'hectopascal cubic metre per second', 'hectopascal cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-673, 0, 'opencell.admin', NULL, 'F95', now(), NULL, 'millibar litre per second', 'millibar litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-674, 0, 'opencell.admin', NULL, 'F96', now(), NULL, 'millibar cubic metre per second', 'millibar cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-675, 0, 'opencell.admin', NULL, 'F97', now(), NULL, 'megapascal litre per second', 'megapascal litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-676, 0, 'opencell.admin', NULL, 'F98', now(), NULL, 'megapascal cubic metre per second', 'megapascal cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-677, 0, 'opencell.admin', NULL, 'F99', now(), NULL, 'pascal litre per second', 'pascal litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-678, 0, 'opencell.admin', NULL, 'FAH', now(), NULL, 'degree Fahrenheit', 'degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-679, 0, 'opencell.admin', NULL, 'FAR', now(), NULL, 'farad', 'farad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-680, 0, 'opencell.admin', NULL, 'FBM', now(), NULL, 'fibre metre', 'fibre metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-681, 0, 'opencell.admin', NULL, 'FC', now(), NULL, 'thousand cubic foot', 'thousand cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-682, 0, 'opencell.admin', NULL, 'FF', now(), NULL, 'hundred cubic metre', 'hundred cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-683, 0, 'opencell.admin', NULL, 'FH', now(), NULL, 'micromole', 'micromole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-684, 0, 'opencell.admin', NULL, 'FIT', now(), NULL, 'failures in time', 'failures in time', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-685, 0, 'opencell.admin', NULL, 'FL', now(), NULL, 'flake ton', 'flake ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-686, 0, 'opencell.admin', NULL, 'FNU', now(), NULL, 'Formazin nephelometric unit', 'Formazin nephelometric unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-687, 0, 'opencell.admin', NULL, 'FOT', now(), NULL, 'foot', 'foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-688, 0, 'opencell.admin', NULL, 'FP', now(), NULL, 'pound per square foot', 'pound per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-689, 0, 'opencell.admin', NULL, 'FR', now(), NULL, 'foot per minute', 'foot per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-690, 0, 'opencell.admin', NULL, 'FS', now(), NULL, 'foot per second', 'foot per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-691, 0, 'opencell.admin', NULL, 'FTK', now(), NULL, 'square foot', 'square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-692, 0, 'opencell.admin', NULL, 'FTQ', now(), NULL, 'cubic foot', 'cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-693, 0, 'opencell.admin', NULL, 'G01', now(), NULL, 'pascal cubic metre per second', 'pascal cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-694, 0, 'opencell.admin', NULL, 'G04', now(), NULL, 'centimetre per bar', 'centimetre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-695, 0, 'opencell.admin', NULL, 'G05', now(), NULL, 'metre per bar', 'metre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-696, 0, 'opencell.admin', NULL, 'G06', now(), NULL, 'millimetre per bar', 'millimetre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-697, 0, 'opencell.admin', NULL, 'G08', now(), NULL, 'square inch per second', 'square inch per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-698, 0, 'opencell.admin', NULL, 'G09', now(), NULL, 'square metre per second kelvin', 'square metre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-699, 0, 'opencell.admin', NULL, 'G10', now(), NULL, 'stokes per kelvin', 'stokes per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-700, 0, 'opencell.admin', NULL, 'G11', now(), NULL, 'gram per cubic centimetre bar', 'gram per cubic centimetre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-701, 0, 'opencell.admin', NULL, 'G12', now(), NULL, 'gram per cubic decimetre bar', 'gram per cubic decimetre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-702, 0, 'opencell.admin', NULL, 'G13', now(), NULL, 'gram per litre bar', 'gram per litre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-703, 0, 'opencell.admin', NULL, 'G14', now(), NULL, 'gram per cubic metre bar', 'gram per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-704, 0, 'opencell.admin', NULL, 'G15', now(), NULL, 'gram per millilitre bar', 'gram per millilitre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-705, 0, 'opencell.admin', NULL, 'G16', now(), NULL, 'kilogram per cubic centimetre bar', 'kilogram per cubic centimetre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-706, 0, 'opencell.admin', NULL, 'G17', now(), NULL, 'kilogram per litre bar', 'kilogram per litre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-707, 0, 'opencell.admin', NULL, 'G18', now(), NULL, 'kilogram per cubic metre bar', 'kilogram per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-708, 0, 'opencell.admin', NULL, 'G19', now(), NULL, 'newton metre per kilogram', 'newton metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-709, 0, 'opencell.admin', NULL, 'G2', now(), NULL, 'US gallon per minute', 'US gallon per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-710, 0, 'opencell.admin', NULL, 'G20', now(), NULL, 'pound-force foot per pound', 'pound-force foot per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-711, 0, 'opencell.admin', NULL, 'G21', now(), NULL, 'cup [unit of volume]', 'cup [unit of volume]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-712, 0, 'opencell.admin', NULL, 'G23', now(), NULL, 'peck', 'peck', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-713, 0, 'opencell.admin', NULL, 'G24', now(), NULL, 'tablespoon (US)', 'tablespoon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-714, 0, 'opencell.admin', NULL, 'G25', now(), NULL, 'teaspoon (US)', 'teaspoon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-715, 0, 'opencell.admin', NULL, 'G26', now(), NULL, 'stere', 'stere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-716, 0, 'opencell.admin', NULL, 'G27', now(), NULL, 'cubic centimetre per kelvin', 'cubic centimetre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-717, 0, 'opencell.admin', NULL, 'G28', now(), NULL, 'litre per kelvin', 'litre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-718, 0, 'opencell.admin', NULL, 'G29', now(), NULL, 'cubic metre per kelvin', 'cubic metre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-719, 0, 'opencell.admin', NULL, 'G3', now(), NULL, 'Imperial gallon per minute', 'Imperial gallon per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-720, 0, 'opencell.admin', NULL, 'G30', now(), NULL, 'millilitre per kelvin', 'millilitre per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-721, 0, 'opencell.admin', NULL, 'G31', now(), NULL, 'kilogram per cubic centimetre', 'kilogram per cubic centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-722, 0, 'opencell.admin', NULL, 'G32', now(), NULL, 'ounce (avoirdupois) per cubic yard', 'ounce (avoirdupois) per cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-723, 0, 'opencell.admin', NULL, 'G33', now(), NULL, 'gram per cubic centimetre kelvin', 'gram per cubic centimetre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-724, 0, 'opencell.admin', NULL, 'G34', now(), NULL, 'gram per cubic decimetre kelvin', 'gram per cubic decimetre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-725, 0, 'opencell.admin', NULL, 'G35', now(), NULL, 'gram per litre kelvin', 'gram per litre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-726, 0, 'opencell.admin', NULL, 'G36', now(), NULL, 'gram per cubic metre kelvin', 'gram per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-727, 0, 'opencell.admin', NULL, 'G37', now(), NULL, 'gram per millilitre kelvin', 'gram per millilitre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-728, 0, 'opencell.admin', NULL, 'G38', now(), NULL, 'kilogram per cubic centimetre kelvin', 'kilogram per cubic centimetre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-729, 0, 'opencell.admin', NULL, 'G39', now(), NULL, 'kilogram per litre kelvin', 'kilogram per litre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-730, 0, 'opencell.admin', NULL, 'G40', now(), NULL, 'kilogram per cubic metre kelvin', 'kilogram per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-731, 0, 'opencell.admin', NULL, 'G41', now(), NULL, 'square metre per second bar', 'square metre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-732, 0, 'opencell.admin', NULL, 'G42', now(), NULL, 'microsiemens per centimetre', 'microsiemens per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-733, 0, 'opencell.admin', NULL, 'G43', now(), NULL, 'microsiemens per metre', 'microsiemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-734, 0, 'opencell.admin', NULL, 'G44', now(), NULL, 'nanosiemens per centimetre', 'nanosiemens per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-735, 0, 'opencell.admin', NULL, 'G45', now(), NULL, 'nanosiemens per metre', 'nanosiemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-736, 0, 'opencell.admin', NULL, 'G46', now(), NULL, 'stokes per bar', 'stokes per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-737, 0, 'opencell.admin', NULL, 'G47', now(), NULL, 'cubic centimetre per day', 'cubic centimetre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-738, 0, 'opencell.admin', NULL, 'G48', now(), NULL, 'cubic centimetre per hour', 'cubic centimetre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-739, 0, 'opencell.admin', NULL, 'G49', now(), NULL, 'cubic centimetre per minute', 'cubic centimetre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-740, 0, 'opencell.admin', NULL, 'G50', now(), NULL, 'gallon (US) per hour', 'gallon (US) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-741, 0, 'opencell.admin', NULL, 'G51', now(), NULL, 'litre per second', 'litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-742, 0, 'opencell.admin', NULL, 'G52', now(), NULL, 'cubic metre per day', 'cubic metre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-743, 0, 'opencell.admin', NULL, 'G53', now(), NULL, 'cubic metre per minute', 'cubic metre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-744, 0, 'opencell.admin', NULL, 'G54', now(), NULL, 'millilitre per day', 'millilitre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-745, 0, 'opencell.admin', NULL, 'G55', now(), NULL, 'millilitre per hour', 'millilitre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-746, 0, 'opencell.admin', NULL, 'G56', now(), NULL, 'cubic inch per hour', 'cubic inch per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-747, 0, 'opencell.admin', NULL, 'G57', now(), NULL, 'cubic inch per minute', 'cubic inch per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-748, 0, 'opencell.admin', NULL, 'G58', now(), NULL, 'cubic inch per second', 'cubic inch per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-749, 0, 'opencell.admin', NULL, 'G59', now(), NULL, 'milliampere per litre minute', 'milliampere per litre minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-750, 0, 'opencell.admin', NULL, 'G60', now(), NULL, 'volt per bar', 'volt per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-751, 0, 'opencell.admin', NULL, 'G61', now(), NULL, 'cubic centimetre per day kelvin', 'cubic centimetre per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-752, 0, 'opencell.admin', NULL, 'G62', now(), NULL, 'cubic centimetre per hour kelvin', 'cubic centimetre per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-753, 0, 'opencell.admin', NULL, 'G63', now(), NULL, 'cubic centimetre per minute kelvin', 'cubic centimetre per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-754, 0, 'opencell.admin', NULL, 'G64', now(), NULL, 'cubic centimetre per second kelvin', 'cubic centimetre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-755, 0, 'opencell.admin', NULL, 'G65', now(), NULL, 'litre per day kelvin', 'litre per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-756, 0, 'opencell.admin', NULL, 'G66', now(), NULL, 'litre per hour kelvin', 'litre per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-757, 0, 'opencell.admin', NULL, 'G67', now(), NULL, 'litre per minute kelvin', 'litre per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-758, 0, 'opencell.admin', NULL, 'G68', now(), NULL, 'litre per second kelvin', 'litre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-759, 0, 'opencell.admin', NULL, 'G69', now(), NULL, 'cubic metre per day kelvin', 'cubic metre per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-760, 0, 'opencell.admin', NULL, 'G70', now(), NULL, 'cubic metre per hour kelvin', 'cubic metre per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-761, 0, 'opencell.admin', NULL, 'G71', now(), NULL, 'cubic metre per minute kelvin', 'cubic metre per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-762, 0, 'opencell.admin', NULL, 'G72', now(), NULL, 'cubic metre per second kelvin', 'cubic metre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-763, 0, 'opencell.admin', NULL, 'G73', now(), NULL, 'millilitre per day kelvin', 'millilitre per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-764, 0, 'opencell.admin', NULL, 'G74', now(), NULL, 'millilitre per hour kelvin', 'millilitre per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-765, 0, 'opencell.admin', NULL, 'G75', now(), NULL, 'millilitre per minute kelvin', 'millilitre per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-766, 0, 'opencell.admin', NULL, 'G76', now(), NULL, 'millilitre per second kelvin', 'millilitre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-767, 0, 'opencell.admin', NULL, 'G77', now(), NULL, 'millimetre to the fourth power', 'millimetre to the fourth power', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-768, 0, 'opencell.admin', NULL, 'G78', now(), NULL, 'cubic centimetre per day bar', 'cubic centimetre per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-769, 0, 'opencell.admin', NULL, 'G79', now(), NULL, 'cubic centimetre per hour bar', 'cubic centimetre per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-770, 0, 'opencell.admin', NULL, 'G80', now(), NULL, 'cubic centimetre per minute bar', 'cubic centimetre per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-771, 0, 'opencell.admin', NULL, 'G81', now(), NULL, 'cubic centimetre per second bar', 'cubic centimetre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-772, 0, 'opencell.admin', NULL, 'G82', now(), NULL, 'litre per day bar', 'litre per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-773, 0, 'opencell.admin', NULL, 'G83', now(), NULL, 'litre per hour bar', 'litre per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-774, 0, 'opencell.admin', NULL, 'G84', now(), NULL, 'litre per minute bar', 'litre per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-775, 0, 'opencell.admin', NULL, 'G85', now(), NULL, 'litre per second bar', 'litre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-776, 0, 'opencell.admin', NULL, 'G86', now(), NULL, 'cubic metre per day bar', 'cubic metre per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-777, 0, 'opencell.admin', NULL, 'G87', now(), NULL, 'cubic metre per hour bar', 'cubic metre per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-778, 0, 'opencell.admin', NULL, 'G88', now(), NULL, 'cubic metre per minute bar', 'cubic metre per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-779, 0, 'opencell.admin', NULL, 'G89', now(), NULL, 'cubic metre per second bar', 'cubic metre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-780, 0, 'opencell.admin', NULL, 'G90', now(), NULL, 'millilitre per day bar', 'millilitre per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-781, 0, 'opencell.admin', NULL, 'G91', now(), NULL, 'millilitre per hour bar', 'millilitre per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-782, 0, 'opencell.admin', NULL, 'G92', now(), NULL, 'millilitre per minute bar', 'millilitre per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-783, 0, 'opencell.admin', NULL, 'G93', now(), NULL, 'millilitre per second bar', 'millilitre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-784, 0, 'opencell.admin', NULL, 'G94', now(), NULL, 'cubic centimetre per bar', 'cubic centimetre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-785, 0, 'opencell.admin', NULL, 'G95', now(), NULL, 'litre per bar', 'litre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-786, 0, 'opencell.admin', NULL, 'G96', now(), NULL, 'cubic metre per bar', 'cubic metre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-787, 0, 'opencell.admin', NULL, 'G97', now(), NULL, 'millilitre per bar', 'millilitre per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-788, 0, 'opencell.admin', NULL, 'G98', now(), NULL, 'microhenry per kiloohm', 'microhenry per kiloohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-789, 0, 'opencell.admin', NULL, 'G99', now(), NULL, 'microhenry per ohm', 'microhenry per ohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-790, 0, 'opencell.admin', NULL, 'GB', now(), NULL, 'gallon (US) per day', 'gallon (US) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-791, 0, 'opencell.admin', NULL, 'GBQ', now(), NULL, 'gigabecquerel', 'gigabecquerel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-792, 0, 'opencell.admin', NULL, 'GDW', now(), NULL, 'gram, dry weight', 'gram, dry weight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-793, 0, 'opencell.admin', NULL, 'GE', now(), NULL, 'pound per gallon (US)', 'pound per gallon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-794, 0, 'opencell.admin', NULL, 'GF', now(), NULL, 'gram per metre (gram per 100 centimetres)', 'gram per metre (gram per 100 centimetres)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-795, 0, 'opencell.admin', NULL, 'GFI', now(), NULL, 'gram of fissile isotope', 'gram of fissile isotope', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-796, 0, 'opencell.admin', NULL, 'GGR', now(), NULL, 'great gross', 'great gross', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-797, 0, 'opencell.admin', NULL, 'GIA', now(), NULL, 'gill (US)', 'gill (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-798, 0, 'opencell.admin', NULL, 'GIC', now(), NULL, 'gram, including container', 'gram, including container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-799, 0, 'opencell.admin', NULL, 'GII', now(), NULL, 'gill (UK)', 'gill (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-800, 0, 'opencell.admin', NULL, 'GIP', now(), NULL, 'gram, including inner packaging', 'gram, including inner packaging', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-801, 0, 'opencell.admin', NULL, 'GJ', now(), NULL, 'gram per millilitre', 'gram per millilitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-802, 0, 'opencell.admin', NULL, 'GL', now(), NULL, 'gram per litre', 'gram per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-803, 0, 'opencell.admin', NULL, 'GLD', now(), NULL, 'dry gallon (US)', 'dry gallon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-804, 0, 'opencell.admin', NULL, 'GLI', now(), NULL, 'gallon (UK)', 'gallon (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-805, 0, 'opencell.admin', NULL, 'GLL', now(), NULL, 'gallon (US)', 'gallon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-806, 0, 'opencell.admin', NULL, 'GM', now(), NULL, 'gram per square metre', 'gram per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-807, 0, 'opencell.admin', NULL, 'GO', now(), NULL, 'milligram per square metre', 'milligram per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-808, 0, 'opencell.admin', NULL, 'GP', now(), NULL, 'milligram per cubic metre', 'milligram per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-809, 0, 'opencell.admin', NULL, 'GQ', now(), NULL, 'microgram per cubic metre', 'microgram per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-810, 0, 'opencell.admin', NULL, 'GRM', now(), NULL, 'gram', 'gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-811, 0, 'opencell.admin', NULL, 'GRN', now(), NULL, 'grain', 'grain', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-812, 0, 'opencell.admin', NULL, 'GRO', now(), NULL, 'gross', 'gross', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-813, 0, 'opencell.admin', NULL, 'GV', now(), NULL, 'gigajoule', 'gigajoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-814, 0, 'opencell.admin', NULL, 'GWH', now(), NULL, 'gigawatt hour', 'gigawatt hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-815, 0, 'opencell.admin', NULL, 'H03', now(), NULL, 'henry per kiloohm', 'henry per kiloohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-816, 0, 'opencell.admin', NULL, 'H04', now(), NULL, 'henry per ohm', 'henry per ohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-817, 0, 'opencell.admin', NULL, 'H05', now(), NULL, 'millihenry per kiloohm', 'millihenry per kiloohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-818, 0, 'opencell.admin', NULL, 'H06', now(), NULL, 'millihenry per ohm', 'millihenry per ohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-819, 0, 'opencell.admin', NULL, 'H07', now(), NULL, 'pascal second per bar', 'pascal second per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-820, 0, 'opencell.admin', NULL, 'H08', now(), NULL, 'microbecquerel', 'microbecquerel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-821, 0, 'opencell.admin', NULL, 'H09', now(), NULL, 'reciprocal year', 'reciprocal year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-822, 0, 'opencell.admin', NULL, 'H10', now(), NULL, 'reciprocal hour', 'reciprocal hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-823, 0, 'opencell.admin', NULL, 'H11', now(), NULL, 'reciprocal month', 'reciprocal month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-824, 0, 'opencell.admin', NULL, 'H12', now(), NULL, 'degree Celsius per hour', 'degree Celsius per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-825, 0, 'opencell.admin', NULL, 'H13', now(), NULL, 'degree Celsius per minute', 'degree Celsius per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-826, 0, 'opencell.admin', NULL, 'H14', now(), NULL, 'degree Celsius per second', 'degree Celsius per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-827, 0, 'opencell.admin', NULL, 'H15', now(), NULL, 'square centimetre per gram', 'square centimetre per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-828, 0, 'opencell.admin', NULL, 'H16', now(), NULL, 'square decametre', 'square decametre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-829, 0, 'opencell.admin', NULL, 'H18', now(), NULL, 'square hectometre', 'square hectometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-830, 0, 'opencell.admin', NULL, 'H19', now(), NULL, 'cubic hectometre', 'cubic hectometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-831, 0, 'opencell.admin', NULL, 'H20', now(), NULL, 'cubic kilometre', 'cubic kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-832, 0, 'opencell.admin', NULL, 'H21', now(), NULL, 'blank', 'blank', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-833, 0, 'opencell.admin', NULL, 'H22', now(), NULL, 'volt square inch per pound-force', 'volt square inch per pound-force', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-834, 0, 'opencell.admin', NULL, 'H23', now(), NULL, 'volt per inch', 'volt per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-835, 0, 'opencell.admin', NULL, 'H24', now(), NULL, 'volt per microsecond', 'volt per microsecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-836, 0, 'opencell.admin', NULL, 'H25', now(), NULL, 'percent per kelvin', 'percent per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-837, 0, 'opencell.admin', NULL, 'H26', now(), NULL, 'ohm per metre', 'ohm per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-838, 0, 'opencell.admin', NULL, 'H27', now(), NULL, 'degree per metre', 'degree per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-839, 0, 'opencell.admin', NULL, 'H28', now(), NULL, 'microfarad per kilometre', 'microfarad per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-840, 0, 'opencell.admin', NULL, 'H29', now(), NULL, 'microgram per litre', 'microgram per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-841, 0, 'opencell.admin', NULL, 'H30', now(), NULL, 'square micrometre (square micron)', 'square micrometre (square micron)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-842, 0, 'opencell.admin', NULL, 'H31', now(), NULL, 'ampere per kilogram', 'ampere per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-843, 0, 'opencell.admin', NULL, 'H32', now(), NULL, 'ampere squared second', 'ampere squared second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-844, 0, 'opencell.admin', NULL, 'H33', now(), NULL, 'farad per kilometre', 'farad per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-845, 0, 'opencell.admin', NULL, 'H34', now(), NULL, 'hertz metre', 'hertz metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-846, 0, 'opencell.admin', NULL, 'H35', now(), NULL, 'kelvin metre per watt', 'kelvin metre per watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-847, 0, 'opencell.admin', NULL, 'H36', now(), NULL, 'megaohm per kilometre', 'megaohm per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-848, 0, 'opencell.admin', NULL, 'H37', now(), NULL, 'megaohm per metre', 'megaohm per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-849, 0, 'opencell.admin', NULL, 'H38', now(), NULL, 'megaampere', 'megaampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-850, 0, 'opencell.admin', NULL, 'H39', now(), NULL, 'megahertz kilometre', 'megahertz kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-851, 0, 'opencell.admin', NULL, 'H40', now(), NULL, 'newton per ampere', 'newton per ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-852, 0, 'opencell.admin', NULL, 'H41', now(), NULL, 'newton metre watt to the power minus 0,5', 'newton metre watt to the power minus 0,5', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-853, 0, 'opencell.admin', NULL, 'H42', now(), NULL, 'pascal per metre', 'pascal per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-854, 0, 'opencell.admin', NULL, 'H43', now(), NULL, 'siemens per centimetre', 'siemens per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-855, 0, 'opencell.admin', NULL, 'H44', now(), NULL, 'teraohm', 'teraohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-856, 0, 'opencell.admin', NULL, 'H45', now(), NULL, 'volt second per metre', 'volt second per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-857, 0, 'opencell.admin', NULL, 'H46', now(), NULL, 'volt per second', 'volt per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-858, 0, 'opencell.admin', NULL, 'H47', now(), NULL, 'watt per cubic metre', 'watt per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-859, 0, 'opencell.admin', NULL, 'H48', now(), NULL, 'attofarad', 'attofarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-860, 0, 'opencell.admin', NULL, 'H49', now(), NULL, 'centimetre per hour', 'centimetre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-861, 0, 'opencell.admin', NULL, 'H50', now(), NULL, 'reciprocal cubic centimetre', 'reciprocal cubic centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-862, 0, 'opencell.admin', NULL, 'H51', now(), NULL, 'decibel per kilometre', 'decibel per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-863, 0, 'opencell.admin', NULL, 'H52', now(), NULL, 'decibel per metre', 'decibel per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-864, 0, 'opencell.admin', NULL, 'H53', now(), NULL, 'kilogram per bar', 'kilogram per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-865, 0, 'opencell.admin', NULL, 'H54', now(), NULL, 'kilogram per cubic decimetre kelvin', 'kilogram per cubic decimetre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-866, 0, 'opencell.admin', NULL, 'H55', now(), NULL, 'kilogram per cubic decimetre bar', 'kilogram per cubic decimetre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-867, 0, 'opencell.admin', NULL, 'H56', now(), NULL, 'kilogram per square metre second', 'kilogram per square metre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-868, 0, 'opencell.admin', NULL, 'H57', now(), NULL, 'inch per two pi radiant', 'inch per two pi radiant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-869, 0, 'opencell.admin', NULL, 'H58', now(), NULL, 'metre per volt second', 'metre per volt second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-870, 0, 'opencell.admin', NULL, 'H59', now(), NULL, 'square metre per newton', 'square metre per newton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-871, 0, 'opencell.admin', NULL, 'H60', now(), NULL, 'cubic metre per cubic metre', 'cubic metre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-872, 0, 'opencell.admin', NULL, 'H61', now(), NULL, 'millisiemens per centimetre', 'millisiemens per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-873, 0, 'opencell.admin', NULL, 'H62', now(), NULL, 'millivolt per minute', 'millivolt per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-874, 0, 'opencell.admin', NULL, 'H63', now(), NULL, 'milligram per square centimetre', 'milligram per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-875, 0, 'opencell.admin', NULL, 'H64', now(), NULL, 'milligram per gram', 'milligram per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-876, 0, 'opencell.admin', NULL, 'H65', now(), NULL, 'millilitre per cubic metre', 'millilitre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-877, 0, 'opencell.admin', NULL, 'H66', now(), NULL, 'millimetre per year', 'millimetre per year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-878, 0, 'opencell.admin', NULL, 'H67', now(), NULL, 'millimetre per hour', 'millimetre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-879, 0, 'opencell.admin', NULL, 'H68', now(), NULL, 'millimole per gram', 'millimole per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-880, 0, 'opencell.admin', NULL, 'H69', now(), NULL, 'picopascal per kilometre', 'picopascal per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-881, 0, 'opencell.admin', NULL, 'H70', now(), NULL, 'picosecond', 'picosecond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-882, 0, 'opencell.admin', NULL, 'H71', now(), NULL, 'percent per month', 'percent per month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-883, 0, 'opencell.admin', NULL, 'H72', now(), NULL, 'percent per hectobar', 'percent per hectobar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-884, 0, 'opencell.admin', NULL, 'H73', now(), NULL, 'percent per decakelvin', 'percent per decakelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-885, 0, 'opencell.admin', NULL, 'H74', now(), NULL, 'watt per metre', 'watt per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-886, 0, 'opencell.admin', NULL, 'H75', now(), NULL, 'decapascal', 'decapascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-887, 0, 'opencell.admin', NULL, 'H76', now(), NULL, 'gram per millimetre', 'gram per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-888, 0, 'opencell.admin', NULL, 'H77', now(), NULL, 'module width', 'module width', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-889, 0, 'opencell.admin', NULL, 'H79', now(), NULL, 'French gauge', 'French gauge', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-890, 0, 'opencell.admin', NULL, 'H80', now(), NULL, 'rack unit', 'rack unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-891, 0, 'opencell.admin', NULL, 'H81', now(), NULL, 'millimetre per minute', 'millimetre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-892, 0, 'opencell.admin', NULL, 'H82', now(), NULL, 'big point', 'big point', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-893, 0, 'opencell.admin', NULL, 'H83', now(), NULL, 'litre per kilogram', 'litre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-894, 0, 'opencell.admin', NULL, 'H84', now(), NULL, 'gram millimetre', 'gram millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-895, 0, 'opencell.admin', NULL, 'H85', now(), NULL, 'reciprocal week', 'reciprocal week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-896, 0, 'opencell.admin', NULL, 'H87', now(), NULL, 'piece', 'piece', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-897, 0, 'opencell.admin', NULL, 'H88', now(), NULL, 'megaohm kilometre', 'megaohm kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-898, 0, 'opencell.admin', NULL, 'H89', now(), NULL, 'percent per ohm', 'percent per ohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-899, 0, 'opencell.admin', NULL, 'H90', now(), NULL, 'percent per degree', 'percent per degree', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-900, 0, 'opencell.admin', NULL, 'H91', now(), NULL, 'percent per ten thousand', 'percent per ten thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-901, 0, 'opencell.admin', NULL, 'H92', now(), NULL, 'percent per one hundred thousand', 'percent per one hundred thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-902, 0, 'opencell.admin', NULL, 'H93', now(), NULL, 'percent per hundred', 'percent per hundred', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-903, 0, 'opencell.admin', NULL, 'H94', now(), NULL, 'percent per thousand', 'percent per thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-904, 0, 'opencell.admin', NULL, 'H95', now(), NULL, 'percent per volt', 'percent per volt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-905, 0, 'opencell.admin', NULL, 'H96', now(), NULL, 'percent per bar', 'percent per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-906, 0, 'opencell.admin', NULL, 'H98', now(), NULL, 'percent per inch', 'percent per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-907, 0, 'opencell.admin', NULL, 'H99', now(), NULL, 'percent per metre', 'percent per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-908, 0, 'opencell.admin', NULL, 'HA', now(), NULL, 'hank', 'hank', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-909, 0, 'opencell.admin', NULL, 'HAD', now(), NULL, 'Piece Day', 'Piece Day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-910, 0, 'opencell.admin', NULL, 'HBA', now(), NULL, 'hectobar', 'hectobar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-911, 0, 'opencell.admin', NULL, 'HBX', now(), NULL, 'hundred boxes', 'hundred boxes', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-912, 0, 'opencell.admin', NULL, 'HC', now(), NULL, 'hundred count', 'hundred count', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-913, 0, 'opencell.admin', NULL, 'HDW', now(), NULL, 'hundred kilogram, dry weight', 'hundred kilogram, dry weight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-914, 0, 'opencell.admin', NULL, 'HEA', now(), NULL, 'head', 'head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-915, 0, 'opencell.admin', NULL, 'HGM', now(), NULL, 'hectogram', 'hectogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-916, 0, 'opencell.admin', NULL, 'HH', now(), NULL, 'hundred cubic foot', 'hundred cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-917, 0, 'opencell.admin', NULL, 'HIU', now(), NULL, 'hundred international unit', 'hundred international unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-918, 0, 'opencell.admin', NULL, 'HKM', now(), NULL, 'hundred kilogram, net mass', 'hundred kilogram, net mass', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-919, 0, 'opencell.admin', NULL, 'HLT', now(), NULL, 'hectolitre', 'hectolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-920, 0, 'opencell.admin', NULL, 'HM', now(), NULL, 'mile per hour (statute mile)', 'mile per hour (statute mile)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-921, 0, 'opencell.admin', NULL, 'HMO', now(), NULL, 'Piece Month', 'Piece Month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-922, 0, 'opencell.admin', NULL, 'HMQ', now(), NULL, 'million cubic metre', 'million cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-923, 0, 'opencell.admin', NULL, 'HMT', now(), NULL, 'hectometre', 'hectometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-924, 0, 'opencell.admin', NULL, 'HPA', now(), NULL, 'hectolitre of pure alcohol', 'hectolitre of pure alcohol', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-925, 0, 'opencell.admin', NULL, 'HTZ', now(), NULL, 'hertz', 'hertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-926, 0, 'opencell.admin', NULL, 'HUR', now(), NULL, 'hour', 'hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-927, 0, 'opencell.admin', NULL, 'HWE', now(), NULL, 'Piece Week', 'Piece Week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-928, 0, 'opencell.admin', NULL, 'IA', now(), NULL, 'inch pound (pound inch)', 'inch pound (pound inch)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-929, 0, 'opencell.admin', NULL, 'IE', now(), NULL, 'person', 'person', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-930, 0, 'opencell.admin', NULL, 'INH', now(), NULL, 'inch', 'inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-931, 0, 'opencell.admin', NULL, 'INK', now(), NULL, 'square inch', 'square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-932, 0, 'opencell.admin', NULL, 'INQ', now(), NULL, 'cubic inch', 'cubic inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-933, 0, 'opencell.admin', NULL, 'ISD', now(), NULL, 'international sugar degree', 'international sugar degree', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-934, 0, 'opencell.admin', NULL, 'IU', now(), NULL, 'inch per second', 'inch per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-935, 0, 'opencell.admin', NULL, 'IUG', now(), NULL, 'international unit per gram', 'international unit per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-936, 0, 'opencell.admin', NULL, 'IV', now(), NULL, 'inch per second squared', 'inch per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-937, 0, 'opencell.admin', NULL, 'J10', now(), NULL, 'percent per millimetre', 'percent per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-938, 0, 'opencell.admin', NULL, 'J12', now(), NULL, 'per mille per psi', 'per mille per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-939, 0, 'opencell.admin', NULL, 'J13', now(), NULL, 'degree API', 'degree API', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-940, 0, 'opencell.admin', NULL, 'J14', now(), NULL, 'degree Baume (origin scale)', 'degree Baume (origin scale)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-941, 0, 'opencell.admin', NULL, 'J15', now(), NULL, 'degree Baume (US heavy)', 'degree Baume (US heavy)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-942, 0, 'opencell.admin', NULL, 'J16', now(), NULL, 'degree Baume (US light)', 'degree Baume (US light)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-943, 0, 'opencell.admin', NULL, 'J17', now(), NULL, 'degree Balling', 'degree Balling', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-944, 0, 'opencell.admin', NULL, 'J18', now(), NULL, 'degree Brix', 'degree Brix', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-945, 0, 'opencell.admin', NULL, 'J19', now(), NULL, 'degree Fahrenheit hour square foot per British thermal unit (thermochemical)', 'degree Fahrenheit hour square foot per British thermal unit (thermochemical)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-946, 0, 'opencell.admin', NULL, 'J2', now(), NULL, 'joule per kilogram', 'joule per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-947, 0, 'opencell.admin', NULL, 'J20', now(), NULL, 'degree Fahrenheit per kelvin', 'degree Fahrenheit per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-948, 0, 'opencell.admin', NULL, 'J21', now(), NULL, 'degree Fahrenheit per bar', 'degree Fahrenheit per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-949, 0, 'opencell.admin', NULL, 'J22', now(), NULL, 'degree Fahrenheit hour square foot per British thermal unit (international table)', 'degree Fahrenheit hour square foot per British thermal unit (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-950, 0, 'opencell.admin', NULL, 'J23', now(), NULL, 'degree Fahrenheit per hour', 'degree Fahrenheit per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-951, 0, 'opencell.admin', NULL, 'J24', now(), NULL, 'degree Fahrenheit per minute', 'degree Fahrenheit per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-952, 0, 'opencell.admin', NULL, 'J25', now(), NULL, 'degree Fahrenheit per second', 'degree Fahrenheit per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-953, 0, 'opencell.admin', NULL, 'J26', now(), NULL, 'reciprocal degree Fahrenheit', 'reciprocal degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-954, 0, 'opencell.admin', NULL, 'J27', now(), NULL, 'degree Oechsle', 'degree Oechsle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-955, 0, 'opencell.admin', NULL, 'J28', now(), NULL, 'degree Rankine per hour', 'degree Rankine per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-956, 0, 'opencell.admin', NULL, 'J29', now(), NULL, 'degree Rankine per minute', 'degree Rankine per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-957, 0, 'opencell.admin', NULL, 'J30', now(), NULL, 'degree Rankine per second', 'degree Rankine per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-958, 0, 'opencell.admin', NULL, 'J31', now(), NULL, 'degree Twaddell', 'degree Twaddell', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-959, 0, 'opencell.admin', NULL, 'J32', now(), NULL, 'micropoise', 'micropoise', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-960, 0, 'opencell.admin', NULL, 'J33', now(), NULL, 'microgram per kilogram', 'microgram per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-961, 0, 'opencell.admin', NULL, 'J34', now(), NULL, 'microgram per cubic metre kelvin', 'microgram per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-962, 0, 'opencell.admin', NULL, 'J35', now(), NULL, 'microgram per cubic metre bar', 'microgram per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-963, 0, 'opencell.admin', NULL, 'J36', now(), NULL, 'microlitre per litre', 'microlitre per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-964, 0, 'opencell.admin', NULL, 'J38', now(), NULL, 'baud', 'baud', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-965, 0, 'opencell.admin', NULL, 'J39', now(), NULL, 'British thermal unit (mean)', 'British thermal unit (mean)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-966, 0, 'opencell.admin', NULL, 'J40', now(), NULL, 'British thermal unit (international table) foot per hour square foot degree Fahrenheit', 'British thermal unit (international table) foot per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-967, 0, 'opencell.admin', NULL, 'J41', now(), NULL, 'British thermal unit (international table) inch per hour square foot degree Fahrenheit', 'British thermal unit (international table) inch per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-968, 0, 'opencell.admin', NULL, 'J42', now(), NULL, 'British thermal unit (international table) inch per second square foot degree Fahrenheit', 'British thermal unit (international table) inch per second square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-969, 0, 'opencell.admin', NULL, 'J43', now(), NULL, 'British thermal unit (international table) per pound degree Fahrenheit', 'British thermal unit (international table) per pound degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-970, 0, 'opencell.admin', NULL, 'J44', now(), NULL, 'British thermal unit (international table) per minute', 'British thermal unit (international table) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-971, 0, 'opencell.admin', NULL, 'J45', now(), NULL, 'British thermal unit (international table) per second', 'British thermal unit (international table) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-972, 0, 'opencell.admin', NULL, 'J46', now(), NULL, 'British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit', 'British thermal unit (thermochemical) foot per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-973, 0, 'opencell.admin', NULL, 'J47', now(), NULL, 'British thermal unit (thermochemical) per hour', 'British thermal unit (thermochemical) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-974, 0, 'opencell.admin', NULL, 'J48', now(), NULL, 'British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit', 'British thermal unit (thermochemical) inch per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-975, 0, 'opencell.admin', NULL, 'J49', now(), NULL, 'British thermal unit (thermochemical) inch per second square foot degree Fahrenheit', 'British thermal unit (thermochemical) inch per second square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1117, 0, 'opencell.admin', NULL, 'KBA', now(), NULL, 'kilobar', 'kilobar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-976, 0, 'opencell.admin', NULL, 'J50', now(), NULL, 'British thermal unit (thermochemical) per pound degree Fahrenheit', 'British thermal unit (thermochemical) per pound degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-977, 0, 'opencell.admin', NULL, 'J51', now(), NULL, 'British thermal unit (thermochemical) per minute', 'British thermal unit (thermochemical) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-978, 0, 'opencell.admin', NULL, 'J52', now(), NULL, 'British thermal unit (thermochemical) per second', 'British thermal unit (thermochemical) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-979, 0, 'opencell.admin', NULL, 'J53', now(), NULL, 'coulomb square metre per kilogram', 'coulomb square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-980, 0, 'opencell.admin', NULL, 'J54', now(), NULL, 'megabaud', 'megabaud', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-981, 0, 'opencell.admin', NULL, 'J55', now(), NULL, 'watt second', 'watt second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-982, 0, 'opencell.admin', NULL, 'J56', now(), NULL, 'bar per bar', 'bar per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-983, 0, 'opencell.admin', NULL, 'J57', now(), NULL, 'barrel (UK petroleum)', 'barrel (UK petroleum)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-984, 0, 'opencell.admin', NULL, 'J58', now(), NULL, 'barrel (UK petroleum) per minute', 'barrel (UK petroleum) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-985, 0, 'opencell.admin', NULL, 'J59', now(), NULL, 'barrel (UK petroleum) per day', 'barrel (UK petroleum) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-986, 0, 'opencell.admin', NULL, 'J60', now(), NULL, 'barrel (UK petroleum) per hour', 'barrel (UK petroleum) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-987, 0, 'opencell.admin', NULL, 'J61', now(), NULL, 'barrel (UK petroleum) per second', 'barrel (UK petroleum) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-988, 0, 'opencell.admin', NULL, 'J62', now(), NULL, 'barrel (US petroleum) per hour', 'barrel (US petroleum) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-989, 0, 'opencell.admin', NULL, 'J63', now(), NULL, 'barrel (US petroleum) per second', 'barrel (US petroleum) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-990, 0, 'opencell.admin', NULL, 'J64', now(), NULL, 'bushel (UK) per day', 'bushel (UK) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-991, 0, 'opencell.admin', NULL, 'J65', now(), NULL, 'bushel (UK) per hour', 'bushel (UK) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-992, 0, 'opencell.admin', NULL, 'J66', now(), NULL, 'bushel (UK) per minute', 'bushel (UK) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-993, 0, 'opencell.admin', NULL, 'J67', now(), NULL, 'bushel (UK) per second', 'bushel (UK) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-994, 0, 'opencell.admin', NULL, 'J68', now(), NULL, 'bushel (US dry) per day', 'bushel (US dry) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-995, 0, 'opencell.admin', NULL, 'J69', now(), NULL, 'bushel (US dry) per hour', 'bushel (US dry) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-996, 0, 'opencell.admin', NULL, 'J70', now(), NULL, 'bushel (US dry) per minute', 'bushel (US dry) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-997, 0, 'opencell.admin', NULL, 'J71', now(), NULL, 'bushel (US dry) per second', 'bushel (US dry) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-998, 0, 'opencell.admin', NULL, 'J72', now(), NULL, 'centinewton metre', 'centinewton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-999, 0, 'opencell.admin', NULL, 'J73', now(), NULL, 'centipoise per kelvin', 'centipoise per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1000, 0, 'opencell.admin', NULL, 'J74', now(), NULL, 'centipoise per bar', 'centipoise per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1001, 0, 'opencell.admin', NULL, 'J75', now(), NULL, 'calorie (mean)', 'calorie (mean)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1002, 0, 'opencell.admin', NULL, 'J76', now(), NULL, 'calorie (international table) per gram degree Celsius', 'calorie (international table) per gram degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1003, 0, 'opencell.admin', NULL, 'J78', now(), NULL, 'calorie (thermochemical) per centimetre second degree Celsius', 'calorie (thermochemical) per centimetre second degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1004, 0, 'opencell.admin', NULL, 'J79', now(), NULL, 'calorie (thermochemical) per gram degree Celsius', 'calorie (thermochemical) per gram degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1005, 0, 'opencell.admin', NULL, 'J81', now(), NULL, 'calorie (thermochemical) per minute', 'calorie (thermochemical) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1006, 0, 'opencell.admin', NULL, 'J82', now(), NULL, 'calorie (thermochemical) per second', 'calorie (thermochemical) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1007, 0, 'opencell.admin', NULL, 'J83', now(), NULL, 'clo', 'clo', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1008, 0, 'opencell.admin', NULL, 'J84', now(), NULL, 'centimetre per second kelvin', 'centimetre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1009, 0, 'opencell.admin', NULL, 'J85', now(), NULL, 'centimetre per second bar', 'centimetre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1010, 0, 'opencell.admin', NULL, 'J87', now(), NULL, 'cubic centimetre per cubic metre', 'cubic centimetre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1011, 0, 'opencell.admin', NULL, 'J90', now(), NULL, 'cubic decimetre per day', 'cubic decimetre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1012, 0, 'opencell.admin', NULL, 'J91', now(), NULL, 'cubic decimetre per cubic metre', 'cubic decimetre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1013, 0, 'opencell.admin', NULL, 'J92', now(), NULL, 'cubic decimetre per minute', 'cubic decimetre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1014, 0, 'opencell.admin', NULL, 'J93', now(), NULL, 'cubic decimetre per second', 'cubic decimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1015, 0, 'opencell.admin', NULL, 'J95', now(), NULL, 'ounce (UK fluid) per day', 'ounce (UK fluid) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1016, 0, 'opencell.admin', NULL, 'J96', now(), NULL, 'ounce (UK fluid) per hour', 'ounce (UK fluid) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1017, 0, 'opencell.admin', NULL, 'J97', now(), NULL, 'ounce (UK fluid) per minute', 'ounce (UK fluid) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1018, 0, 'opencell.admin', NULL, 'J98', now(), NULL, 'ounce (UK fluid) per second', 'ounce (UK fluid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1019, 0, 'opencell.admin', NULL, 'J99', now(), NULL, 'ounce (US fluid) per day', 'ounce (US fluid) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1020, 0, 'opencell.admin', NULL, 'JE', now(), NULL, 'joule per kelvin', 'joule per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1021, 0, 'opencell.admin', NULL, 'JK', now(), NULL, 'megajoule per kilogram', 'megajoule per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1022, 0, 'opencell.admin', NULL, 'JM', now(), NULL, 'megajoule per cubic metre', 'megajoule per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1023, 0, 'opencell.admin', NULL, 'JNT', now(), NULL, 'pipeline joint', 'pipeline joint', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1024, 0, 'opencell.admin', NULL, 'JOU', now(), NULL, 'joule', 'joule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1025, 0, 'opencell.admin', NULL, 'JPS', now(), NULL, 'hundred metre', 'hundred metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1026, 0, 'opencell.admin', NULL, 'JWL', now(), NULL, 'number of jewels', 'number of jewels', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1027, 0, 'opencell.admin', NULL, 'K1', now(), NULL, 'kilowatt demand', 'kilowatt demand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1028, 0, 'opencell.admin', NULL, 'K10', now(), NULL, 'ounce (US fluid) per hour', 'ounce (US fluid) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1029, 0, 'opencell.admin', NULL, 'K11', now(), NULL, 'ounce (US fluid) per minute', 'ounce (US fluid) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1030, 0, 'opencell.admin', NULL, 'K12', now(), NULL, 'ounce (US fluid) per second', 'ounce (US fluid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1031, 0, 'opencell.admin', NULL, 'K13', now(), NULL, 'foot per degree Fahrenheit', 'foot per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1032, 0, 'opencell.admin', NULL, 'K14', now(), NULL, 'foot per hour', 'foot per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1033, 0, 'opencell.admin', NULL, 'K15', now(), NULL, 'foot pound-force per hour', 'foot pound-force per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1034, 0, 'opencell.admin', NULL, 'K16', now(), NULL, 'foot pound-force per minute', 'foot pound-force per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1035, 0, 'opencell.admin', NULL, 'K17', now(), NULL, 'foot per psi', 'foot per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1036, 0, 'opencell.admin', NULL, 'K18', now(), NULL, 'foot per second degree Fahrenheit', 'foot per second degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1037, 0, 'opencell.admin', NULL, 'K19', now(), NULL, 'foot per second psi', 'foot per second psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1038, 0, 'opencell.admin', NULL, 'K2', now(), NULL, 'kilovolt ampere reactive demand', 'kilovolt ampere reactive demand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1039, 0, 'opencell.admin', NULL, 'K20', now(), NULL, 'reciprocal cubic foot', 'reciprocal cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1040, 0, 'opencell.admin', NULL, 'K21', now(), NULL, 'cubic foot per degree Fahrenheit', 'cubic foot per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1041, 0, 'opencell.admin', NULL, 'K22', now(), NULL, 'cubic foot per day', 'cubic foot per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1042, 0, 'opencell.admin', NULL, 'K23', now(), NULL, 'cubic foot per psi', 'cubic foot per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1043, 0, 'opencell.admin', NULL, 'K26', now(), NULL, 'gallon (UK) per day', 'gallon (UK) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1044, 0, 'opencell.admin', NULL, 'K27', now(), NULL, 'gallon (UK) per hour', 'gallon (UK) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1045, 0, 'opencell.admin', NULL, 'K28', now(), NULL, 'gallon (UK) per second', 'gallon (UK) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1046, 0, 'opencell.admin', NULL, 'K3', now(), NULL, 'kilovolt ampere reactive hour', 'kilovolt ampere reactive hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1047, 0, 'opencell.admin', NULL, 'K30', now(), NULL, 'gallon (US liquid) per second', 'gallon (US liquid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1048, 0, 'opencell.admin', NULL, 'K31', now(), NULL, 'gram-force per square centimetre', 'gram-force per square centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1049, 0, 'opencell.admin', NULL, 'K32', now(), NULL, 'gill (UK) per day', 'gill (UK) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1050, 0, 'opencell.admin', NULL, 'K33', now(), NULL, 'gill (UK) per hour', 'gill (UK) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1051, 0, 'opencell.admin', NULL, 'K34', now(), NULL, 'gill (UK) per minute', 'gill (UK) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1052, 0, 'opencell.admin', NULL, 'K35', now(), NULL, 'gill (UK) per second', 'gill (UK) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1053, 0, 'opencell.admin', NULL, 'K36', now(), NULL, 'gill (US) per day', 'gill (US) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1054, 0, 'opencell.admin', NULL, 'K37', now(), NULL, 'gill (US) per hour', 'gill (US) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1055, 0, 'opencell.admin', NULL, 'K38', now(), NULL, 'gill (US) per minute', 'gill (US) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1056, 0, 'opencell.admin', NULL, 'K39', now(), NULL, 'gill (US) per second', 'gill (US) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1057, 0, 'opencell.admin', NULL, 'K40', now(), NULL, 'standard acceleration of free fall', 'standard acceleration of free fall', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1058, 0, 'opencell.admin', NULL, 'K41', now(), NULL, 'grain per gallon (US)', 'grain per gallon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1059, 0, 'opencell.admin', NULL, 'K42', now(), NULL, 'horsepower (boiler)', 'horsepower (boiler)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1060, 0, 'opencell.admin', NULL, 'K43', now(), NULL, 'horsepower (electric)', 'horsepower (electric)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1061, 0, 'opencell.admin', NULL, 'K45', now(), NULL, 'inch per degree Fahrenheit', 'inch per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1062, 0, 'opencell.admin', NULL, 'K46', now(), NULL, 'inch per psi', 'inch per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1063, 0, 'opencell.admin', NULL, 'K47', now(), NULL, 'inch per second degree Fahrenheit', 'inch per second degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1064, 0, 'opencell.admin', NULL, 'K48', now(), NULL, 'inch per second psi', 'inch per second psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1065, 0, 'opencell.admin', NULL, 'K49', now(), NULL, 'reciprocal cubic inch', 'reciprocal cubic inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1066, 0, 'opencell.admin', NULL, 'K50', now(), NULL, 'kilobaud', 'kilobaud', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1067, 0, 'opencell.admin', NULL, 'K51', now(), NULL, 'kilocalorie (mean)', 'kilocalorie (mean)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1068, 0, 'opencell.admin', NULL, 'K52', now(), NULL, 'kilocalorie (international table) per hour metre degree Celsius', 'kilocalorie (international table) per hour metre degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1069, 0, 'opencell.admin', NULL, 'K53', now(), NULL, 'kilocalorie (thermochemical)', 'kilocalorie (thermochemical)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1070, 0, 'opencell.admin', NULL, 'K54', now(), NULL, 'kilocalorie (thermochemical) per minute', 'kilocalorie (thermochemical) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1071, 0, 'opencell.admin', NULL, 'K55', now(), NULL, 'kilocalorie (thermochemical) per second', 'kilocalorie (thermochemical) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1072, 0, 'opencell.admin', NULL, 'K58', now(), NULL, 'kilomole per hour', 'kilomole per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1073, 0, 'opencell.admin', NULL, 'K59', now(), NULL, 'kilomole per cubic metre kelvin', 'kilomole per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1074, 0, 'opencell.admin', NULL, 'K6', now(), NULL, 'kilolitre', 'kilolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1075, 0, 'opencell.admin', NULL, 'K60', now(), NULL, 'kilomole per cubic metre bar', 'kilomole per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1076, 0, 'opencell.admin', NULL, 'K61', now(), NULL, 'kilomole per minute', 'kilomole per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1077, 0, 'opencell.admin', NULL, 'K62', now(), NULL, 'litre per litre', 'litre per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1078, 0, 'opencell.admin', NULL, 'K63', now(), NULL, 'reciprocal litre', 'reciprocal litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1079, 0, 'opencell.admin', NULL, 'K64', now(), NULL, 'pound (avoirdupois) per degree Fahrenheit', 'pound (avoirdupois) per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1080, 0, 'opencell.admin', NULL, 'K65', now(), NULL, 'pound (avoirdupois) square foot', 'pound (avoirdupois) square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1081, 0, 'opencell.admin', NULL, 'K66', now(), NULL, 'pound (avoirdupois) per day', 'pound (avoirdupois) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1082, 0, 'opencell.admin', NULL, 'K67', now(), NULL, 'pound per foot hour', 'pound per foot hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1083, 0, 'opencell.admin', NULL, 'K68', now(), NULL, 'pound per foot second', 'pound per foot second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1084, 0, 'opencell.admin', NULL, 'K69', now(), NULL, 'pound (avoirdupois) per cubic foot degree Fahrenheit', 'pound (avoirdupois) per cubic foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1085, 0, 'opencell.admin', NULL, 'K70', now(), NULL, 'pound (avoirdupois) per cubic foot psi', 'pound (avoirdupois) per cubic foot psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1086, 0, 'opencell.admin', NULL, 'K71', now(), NULL, 'pound (avoirdupois) per gallon (UK)', 'pound (avoirdupois) per gallon (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1087, 0, 'opencell.admin', NULL, 'K73', now(), NULL, 'pound (avoirdupois) per hour degree Fahrenheit', 'pound (avoirdupois) per hour degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1088, 0, 'opencell.admin', NULL, 'K74', now(), NULL, 'pound (avoirdupois) per hour psi', 'pound (avoirdupois) per hour psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1089, 0, 'opencell.admin', NULL, 'K75', now(), NULL, 'pound (avoirdupois) per cubic inch degree Fahrenheit', 'pound (avoirdupois) per cubic inch degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1090, 0, 'opencell.admin', NULL, 'K76', now(), NULL, 'pound (avoirdupois) per cubic inch psi', 'pound (avoirdupois) per cubic inch psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1091, 0, 'opencell.admin', NULL, 'K77', now(), NULL, 'pound (avoirdupois) per psi', 'pound (avoirdupois) per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1092, 0, 'opencell.admin', NULL, 'K78', now(), NULL, 'pound (avoirdupois) per minute', 'pound (avoirdupois) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1093, 0, 'opencell.admin', NULL, 'K79', now(), NULL, 'pound (avoirdupois) per minute degree Fahrenheit', 'pound (avoirdupois) per minute degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1094, 0, 'opencell.admin', NULL, 'K80', now(), NULL, 'pound (avoirdupois) per minute psi', 'pound (avoirdupois) per minute psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1095, 0, 'opencell.admin', NULL, 'K81', now(), NULL, 'pound (avoirdupois) per second', 'pound (avoirdupois) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1096, 0, 'opencell.admin', NULL, 'K82', now(), NULL, 'pound (avoirdupois) per second degree Fahrenheit', 'pound (avoirdupois) per second degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1097, 0, 'opencell.admin', NULL, 'K83', now(), NULL, 'pound (avoirdupois) per second psi', 'pound (avoirdupois) per second psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1098, 0, 'opencell.admin', NULL, 'K84', now(), NULL, 'pound per cubic yard', 'pound per cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1099, 0, 'opencell.admin', NULL, 'K85', now(), NULL, 'pound-force per square foot', 'pound-force per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1100, 0, 'opencell.admin', NULL, 'K86', now(), NULL, 'pound-force per square inch degree Fahrenheit', 'pound-force per square inch degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1101, 0, 'opencell.admin', NULL, 'K87', now(), NULL, 'psi cubic inch per second', 'psi cubic inch per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1102, 0, 'opencell.admin', NULL, 'K88', now(), NULL, 'psi litre per second', 'psi litre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1103, 0, 'opencell.admin', NULL, 'K89', now(), NULL, 'psi cubic metre per second', 'psi cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1104, 0, 'opencell.admin', NULL, 'K90', now(), NULL, 'psi cubic yard per second', 'psi cubic yard per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1105, 0, 'opencell.admin', NULL, 'K91', now(), NULL, 'pound-force second per square foot', 'pound-force second per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1106, 0, 'opencell.admin', NULL, 'K92', now(), NULL, 'pound-force second per square inch', 'pound-force second per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1107, 0, 'opencell.admin', NULL, 'K93', now(), NULL, 'reciprocal psi', 'reciprocal psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1108, 0, 'opencell.admin', NULL, 'K94', now(), NULL, 'quart (UK liquid) per day', 'quart (UK liquid) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1109, 0, 'opencell.admin', NULL, 'K95', now(), NULL, 'quart (UK liquid) per hour', 'quart (UK liquid) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1110, 0, 'opencell.admin', NULL, 'K96', now(), NULL, 'quart (UK liquid) per minute', 'quart (UK liquid) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1111, 0, 'opencell.admin', NULL, 'K97', now(), NULL, 'quart (UK liquid) per second', 'quart (UK liquid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1112, 0, 'opencell.admin', NULL, 'K98', now(), NULL, 'quart (US liquid) per day', 'quart (US liquid) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1113, 0, 'opencell.admin', NULL, 'K99', now(), NULL, 'quart (US liquid) per hour', 'quart (US liquid) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1114, 0, 'opencell.admin', NULL, 'KA', now(), NULL, 'cake', 'cake', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1115, 0, 'opencell.admin', NULL, 'KAT', now(), NULL, 'katal', 'katal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1116, 0, 'opencell.admin', NULL, 'KB', now(), NULL, 'kilocharacter', 'kilocharacter', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1118, 0, 'opencell.admin', NULL, 'KCC', now(), NULL, 'kilogram of choline chloride', 'kilogram of choline chloride', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1119, 0, 'opencell.admin', NULL, 'KDW', now(), NULL, 'kilogram drained net weight', 'kilogram drained net weight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1120, 0, 'opencell.admin', NULL, 'KEL', now(), NULL, 'kelvin', 'kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1121, 0, 'opencell.admin', NULL, 'KGM', now(), NULL, 'kilogram', 'kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1122, 0, 'opencell.admin', NULL, 'KGS', now(), NULL, 'kilogram per second', 'kilogram per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1123, 0, 'opencell.admin', NULL, 'KHY', now(), NULL, 'kilogram of hydrogen peroxide', 'kilogram of hydrogen peroxide', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1124, 0, 'opencell.admin', NULL, 'KHZ', now(), NULL, 'kilohertz', 'kilohertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1125, 0, 'opencell.admin', NULL, 'KI', now(), NULL, 'kilogram per millimetre width', 'kilogram per millimetre width', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1126, 0, 'opencell.admin', NULL, 'KIC', now(), NULL, 'kilogram, including container', 'kilogram, including container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1127, 0, 'opencell.admin', NULL, 'KIP', now(), NULL, 'kilogram, including inner packaging', 'kilogram, including inner packaging', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1128, 0, 'opencell.admin', NULL, 'KJ', now(), NULL, 'kilosegment', 'kilosegment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1129, 0, 'opencell.admin', NULL, 'KJO', now(), NULL, 'kilojoule', 'kilojoule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1130, 0, 'opencell.admin', NULL, 'KL', now(), NULL, 'kilogram per metre', 'kilogram per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1131, 0, 'opencell.admin', NULL, 'KLK', now(), NULL, 'lactic dry material percentage', 'lactic dry material percentage', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1132, 0, 'opencell.admin', NULL, 'KLX', now(), NULL, 'kilolux', 'kilolux', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1133, 0, 'opencell.admin', NULL, 'KMA', now(), NULL, 'kilogram of methylamine', 'kilogram of methylamine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1134, 0, 'opencell.admin', NULL, 'KMH', now(), NULL, 'kilometre per hour', 'kilometre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1135, 0, 'opencell.admin', NULL, 'KMK', now(), NULL, 'square kilometre', 'square kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1136, 0, 'opencell.admin', NULL, 'KMQ', now(), NULL, 'kilogram per cubic metre', 'kilogram per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1137, 0, 'opencell.admin', NULL, 'KMT', now(), NULL, 'kilometre', 'kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1138, 0, 'opencell.admin', NULL, 'KNI', now(), NULL, 'kilogram of nitrogen', 'kilogram of nitrogen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1139, 0, 'opencell.admin', NULL, 'KNM', now(), NULL, 'kilonewton per square metre', 'kilonewton per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1140, 0, 'opencell.admin', NULL, 'KNS', now(), NULL, 'kilogram named substance', 'kilogram named substance', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1141, 0, 'opencell.admin', NULL, 'KNT', now(), NULL, 'knot', 'knot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1142, 0, 'opencell.admin', NULL, 'KO', now(), NULL, 'milliequivalence caustic potash per gram of product', 'milliequivalence caustic potash per gram of product', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1143, 0, 'opencell.admin', NULL, 'KPA', now(), NULL, 'kilopascal', 'kilopascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1144, 0, 'opencell.admin', NULL, 'KPH', now(), NULL, 'kilogram of potassium hydroxide (caustic potash)', 'kilogram of potassium hydroxide (caustic potash)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1145, 0, 'opencell.admin', NULL, 'KPO', now(), NULL, 'kilogram of potassium oxide', 'kilogram of potassium oxide', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1146, 0, 'opencell.admin', NULL, 'KPP', now(), NULL, 'kilogram of phosphorus pentoxide (phosphoric anhydride)', 'kilogram of phosphorus pentoxide (phosphoric anhydride)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1147, 0, 'opencell.admin', NULL, 'KR', now(), NULL, 'kiloroentgen', 'kiloroentgen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1148, 0, 'opencell.admin', NULL, 'KSD', now(), NULL, 'kilogram of substance 90 % dry', 'kilogram of substance 90 % dry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1149, 0, 'opencell.admin', NULL, 'KSH', now(), NULL, 'kilogram of sodium hydroxide (caustic soda)', 'kilogram of sodium hydroxide (caustic soda)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1150, 0, 'opencell.admin', NULL, 'KT', now(), NULL, 'kit', 'kit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1151, 0, 'opencell.admin', NULL, 'KTN', now(), NULL, 'kilotonne', 'kilotonne', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1152, 0, 'opencell.admin', NULL, 'KUR', now(), NULL, 'kilogram of uranium', 'kilogram of uranium', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1153, 0, 'opencell.admin', NULL, 'KVA', now(), NULL, 'kilovolt - ampere', 'kilovolt - ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1154, 0, 'opencell.admin', NULL, 'KVR', now(), NULL, 'kilovar', 'kilovar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1155, 0, 'opencell.admin', NULL, 'KVT', now(), NULL, 'kilovolt', 'kilovolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1156, 0, 'opencell.admin', NULL, 'KW', now(), NULL, 'kilogram per millimetre', 'kilogram per millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1157, 0, 'opencell.admin', NULL, 'KWH', now(), NULL, 'kilowatt hour', 'kilowatt hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1158, 0, 'opencell.admin', NULL, 'KWN', now(), NULL, 'Kilowatt hour per normalized cubic metre', 'Kilowatt hour per normalized cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1159, 0, 'opencell.admin', NULL, 'KWO', now(), NULL, 'kilogram of tungsten trioxide', 'kilogram of tungsten trioxide', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1160, 0, 'opencell.admin', NULL, 'KWS', now(), NULL, 'Kilowatt hour per standard cubic metre', 'Kilowatt hour per standard cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1161, 0, 'opencell.admin', NULL, 'KWT', now(), NULL, 'kilowatt', 'kilowatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1162, 0, 'opencell.admin', NULL, 'KWY', now(), NULL, 'kilowatt year', 'kilowatt year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1163, 0, 'opencell.admin', NULL, 'KX', now(), NULL, 'millilitre per kilogram', 'millilitre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1164, 0, 'opencell.admin', NULL, 'L10', now(), NULL, 'quart (US liquid) per minute', 'quart (US liquid) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1165, 0, 'opencell.admin', NULL, 'L11', now(), NULL, 'quart (US liquid) per second', 'quart (US liquid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1166, 0, 'opencell.admin', NULL, 'L12', now(), NULL, 'metre per second kelvin', 'metre per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1167, 0, 'opencell.admin', NULL, 'L13', now(), NULL, 'metre per second bar', 'metre per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1168, 0, 'opencell.admin', NULL, 'L14', now(), NULL, 'square metre hour degree Celsius per kilocalorie (international table)', 'square metre hour degree Celsius per kilocalorie (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1169, 0, 'opencell.admin', NULL, 'L15', now(), NULL, 'millipascal second per kelvin', 'millipascal second per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1170, 0, 'opencell.admin', NULL, 'L16', now(), NULL, 'millipascal second per bar', 'millipascal second per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1171, 0, 'opencell.admin', NULL, 'L17', now(), NULL, 'milligram per cubic metre kelvin', 'milligram per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1172, 0, 'opencell.admin', NULL, 'L18', now(), NULL, 'milligram per cubic metre bar', 'milligram per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1173, 0, 'opencell.admin', NULL, 'L19', now(), NULL, 'millilitre per litre', 'millilitre per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1174, 0, 'opencell.admin', NULL, 'L2', now(), NULL, 'litre per minute', 'litre per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1175, 0, 'opencell.admin', NULL, 'L20', now(), NULL, 'reciprocal cubic millimetre', 'reciprocal cubic millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1176, 0, 'opencell.admin', NULL, 'L21', now(), NULL, 'cubic millimetre per cubic metre', 'cubic millimetre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1177, 0, 'opencell.admin', NULL, 'L23', now(), NULL, 'mole per hour', 'mole per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1178, 0, 'opencell.admin', NULL, 'L24', now(), NULL, 'mole per kilogram kelvin', 'mole per kilogram kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1179, 0, 'opencell.admin', NULL, 'L25', now(), NULL, 'mole per kilogram bar', 'mole per kilogram bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1180, 0, 'opencell.admin', NULL, 'L26', now(), NULL, 'mole per litre kelvin', 'mole per litre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1181, 0, 'opencell.admin', NULL, 'L27', now(), NULL, 'mole per litre bar', 'mole per litre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1182, 0, 'opencell.admin', NULL, 'L28', now(), NULL, 'mole per cubic metre kelvin', 'mole per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1183, 0, 'opencell.admin', NULL, 'L29', now(), NULL, 'mole per cubic metre bar', 'mole per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1184, 0, 'opencell.admin', NULL, 'L30', now(), NULL, 'mole per minute', 'mole per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1185, 0, 'opencell.admin', NULL, 'L31', now(), NULL, 'milliroentgen aequivalent men', 'milliroentgen aequivalent men', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1186, 0, 'opencell.admin', NULL, 'L32', now(), NULL, 'nanogram per kilogram', 'nanogram per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1187, 0, 'opencell.admin', NULL, 'L33', now(), NULL, 'ounce (avoirdupois) per day', 'ounce (avoirdupois) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1188, 0, 'opencell.admin', NULL, 'L34', now(), NULL, 'ounce (avoirdupois) per hour', 'ounce (avoirdupois) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1189, 0, 'opencell.admin', NULL, 'L35', now(), NULL, 'ounce (avoirdupois) per minute', 'ounce (avoirdupois) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1190, 0, 'opencell.admin', NULL, 'L36', now(), NULL, 'ounce (avoirdupois) per second', 'ounce (avoirdupois) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1191, 0, 'opencell.admin', NULL, 'L37', now(), NULL, 'ounce (avoirdupois) per gallon (UK)', 'ounce (avoirdupois) per gallon (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1192, 0, 'opencell.admin', NULL, 'L38', now(), NULL, 'ounce (avoirdupois) per gallon (US)', 'ounce (avoirdupois) per gallon (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1193, 0, 'opencell.admin', NULL, 'L39', now(), NULL, 'ounce (avoirdupois) per cubic inch', 'ounce (avoirdupois) per cubic inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1194, 0, 'opencell.admin', NULL, 'L40', now(), NULL, 'ounce (avoirdupois)-force', 'ounce (avoirdupois)-force', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1195, 0, 'opencell.admin', NULL, 'L41', now(), NULL, 'ounce (avoirdupois)-force inch', 'ounce (avoirdupois)-force inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1196, 0, 'opencell.admin', NULL, 'L42', now(), NULL, 'picosiemens per metre', 'picosiemens per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1197, 0, 'opencell.admin', NULL, 'L43', now(), NULL, 'peck (UK)', 'peck (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1198, 0, 'opencell.admin', NULL, 'L44', now(), NULL, 'peck (UK) per day', 'peck (UK) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1199, 0, 'opencell.admin', NULL, 'L45', now(), NULL, 'peck (UK) per hour', 'peck (UK) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1200, 0, 'opencell.admin', NULL, 'L46', now(), NULL, 'peck (UK) per minute', 'peck (UK) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1201, 0, 'opencell.admin', NULL, 'L47', now(), NULL, 'peck (UK) per second', 'peck (UK) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1202, 0, 'opencell.admin', NULL, 'L48', now(), NULL, 'peck (US dry) per day', 'peck (US dry) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1203, 0, 'opencell.admin', NULL, 'L49', now(), NULL, 'peck (US dry) per hour', 'peck (US dry) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1204, 0, 'opencell.admin', NULL, 'L50', now(), NULL, 'peck (US dry) per minute', 'peck (US dry) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1205, 0, 'opencell.admin', NULL, 'L51', now(), NULL, 'peck (US dry) per second', 'peck (US dry) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1206, 0, 'opencell.admin', NULL, 'L52', now(), NULL, 'psi per psi', 'psi per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1207, 0, 'opencell.admin', NULL, 'L53', now(), NULL, 'pint (UK) per day', 'pint (UK) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1208, 0, 'opencell.admin', NULL, 'L54', now(), NULL, 'pint (UK) per hour', 'pint (UK) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1209, 0, 'opencell.admin', NULL, 'L55', now(), NULL, 'pint (UK) per minute', 'pint (UK) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1210, 0, 'opencell.admin', NULL, 'L56', now(), NULL, 'pint (UK) per second', 'pint (UK) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1211, 0, 'opencell.admin', NULL, 'L57', now(), NULL, 'pint (US liquid) per day', 'pint (US liquid) per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1212, 0, 'opencell.admin', NULL, 'L58', now(), NULL, 'pint (US liquid) per hour', 'pint (US liquid) per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1213, 0, 'opencell.admin', NULL, 'L59', now(), NULL, 'pint (US liquid) per minute', 'pint (US liquid) per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1214, 0, 'opencell.admin', NULL, 'L60', now(), NULL, 'pint (US liquid) per second', 'pint (US liquid) per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1215, 0, 'opencell.admin', NULL, 'L63', now(), NULL, 'slug per day', 'slug per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1216, 0, 'opencell.admin', NULL, 'L64', now(), NULL, 'slug per foot second', 'slug per foot second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1217, 0, 'opencell.admin', NULL, 'L65', now(), NULL, 'slug per cubic foot', 'slug per cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1218, 0, 'opencell.admin', NULL, 'L66', now(), NULL, 'slug per hour', 'slug per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1219, 0, 'opencell.admin', NULL, 'L67', now(), NULL, 'slug per minute', 'slug per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1220, 0, 'opencell.admin', NULL, 'L68', now(), NULL, 'slug per second', 'slug per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1221, 0, 'opencell.admin', NULL, 'L69', now(), NULL, 'tonne per kelvin', 'tonne per kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1222, 0, 'opencell.admin', NULL, 'L70', now(), NULL, 'tonne per bar', 'tonne per bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1223, 0, 'opencell.admin', NULL, 'L71', now(), NULL, 'tonne per day', 'tonne per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1224, 0, 'opencell.admin', NULL, 'L72', now(), NULL, 'tonne per day kelvin', 'tonne per day kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1225, 0, 'opencell.admin', NULL, 'L73', now(), NULL, 'tonne per day bar', 'tonne per day bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1226, 0, 'opencell.admin', NULL, 'L74', now(), NULL, 'tonne per hour kelvin', 'tonne per hour kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1227, 0, 'opencell.admin', NULL, 'L75', now(), NULL, 'tonne per hour bar', 'tonne per hour bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1228, 0, 'opencell.admin', NULL, 'L76', now(), NULL, 'tonne per cubic metre kelvin', 'tonne per cubic metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1229, 0, 'opencell.admin', NULL, 'L77', now(), NULL, 'tonne per cubic metre bar', 'tonne per cubic metre bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1230, 0, 'opencell.admin', NULL, 'L78', now(), NULL, 'tonne per minute', 'tonne per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1231, 0, 'opencell.admin', NULL, 'L79', now(), NULL, 'tonne per minute kelvin', 'tonne per minute kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1232, 0, 'opencell.admin', NULL, 'L80', now(), NULL, 'tonne per minute bar', 'tonne per minute bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1233, 0, 'opencell.admin', NULL, 'L81', now(), NULL, 'tonne per second', 'tonne per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1234, 0, 'opencell.admin', NULL, 'L82', now(), NULL, 'tonne per second kelvin', 'tonne per second kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1235, 0, 'opencell.admin', NULL, 'L83', now(), NULL, 'tonne per second bar', 'tonne per second bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1236, 0, 'opencell.admin', NULL, 'L84', now(), NULL, 'ton (UK shipping)', 'ton (UK shipping)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1237, 0, 'opencell.admin', NULL, 'L85', now(), NULL, 'ton long per day', 'ton long per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1238, 0, 'opencell.admin', NULL, 'L86', now(), NULL, 'ton (US shipping)', 'ton (US shipping)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1239, 0, 'opencell.admin', NULL, 'L87', now(), NULL, 'ton short per degree Fahrenheit', 'ton short per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1240, 0, 'opencell.admin', NULL, 'L88', now(), NULL, 'ton short per day', 'ton short per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1241, 0, 'opencell.admin', NULL, 'L89', now(), NULL, 'ton short per hour degree Fahrenheit', 'ton short per hour degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1242, 0, 'opencell.admin', NULL, 'L90', now(), NULL, 'ton short per hour psi', 'ton short per hour psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1243, 0, 'opencell.admin', NULL, 'L91', now(), NULL, 'ton short per psi', 'ton short per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1244, 0, 'opencell.admin', NULL, 'L92', now(), NULL, 'ton (UK long) per cubic yard', 'ton (UK long) per cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1245, 0, 'opencell.admin', NULL, 'L93', now(), NULL, 'ton (US short) per cubic yard', 'ton (US short) per cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1246, 0, 'opencell.admin', NULL, 'L94', now(), NULL, 'ton-force (US short)', 'ton-force (US short)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1247, 0, 'opencell.admin', NULL, 'L95', now(), NULL, 'common year', 'common year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1248, 0, 'opencell.admin', NULL, 'L96', now(), NULL, 'sidereal year', 'sidereal year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1249, 0, 'opencell.admin', NULL, 'L98', now(), NULL, 'yard per degree Fahrenheit', 'yard per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1250, 0, 'opencell.admin', NULL, 'L99', now(), NULL, 'yard per psi', 'yard per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1251, 0, 'opencell.admin', NULL, 'LA', now(), NULL, 'pound per cubic inch', 'pound per cubic inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1252, 0, 'opencell.admin', NULL, 'LAC', now(), NULL, 'lactose excess percentage', 'lactose excess percentage', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1253, 0, 'opencell.admin', NULL, 'LBR', now(), NULL, 'pound', 'pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1254, 0, 'opencell.admin', NULL, 'LBT', now(), NULL, 'troy pound (US)', 'troy pound (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1255, 0, 'opencell.admin', NULL, 'LD', now(), NULL, 'litre per day', 'litre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1256, 0, 'opencell.admin', NULL, 'LEF', now(), NULL, 'leaf', 'leaf', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1257, 0, 'opencell.admin', NULL, 'LF', now(), NULL, 'linear foot', 'linear foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1258, 0, 'opencell.admin', NULL, 'LH', now(), NULL, 'labour hour', 'labour hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1259, 0, 'opencell.admin', NULL, 'LK', now(), NULL, 'link', 'link', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1260, 0, 'opencell.admin', NULL, 'LM', now(), NULL, 'linear metre', 'linear metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1261, 0, 'opencell.admin', NULL, 'LN', now(), NULL, 'length', 'length', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1262, 0, 'opencell.admin', NULL, 'LO', now(), NULL, 'lot  [unit of procurement]', 'lot  [unit of procurement]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1263, 0, 'opencell.admin', NULL, 'LP', now(), NULL, 'liquid pound', 'liquid pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1264, 0, 'opencell.admin', NULL, 'LPA', now(), NULL, 'litre of pure alcohol', 'litre of pure alcohol', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1265, 0, 'opencell.admin', NULL, 'LR', now(), NULL, 'layer', 'layer', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1266, 0, 'opencell.admin', NULL, 'LS', now(), NULL, 'lump sum', 'lump sum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1267, 0, 'opencell.admin', NULL, 'LTN', now(), NULL, 'ton (UK) or long ton (US)', 'ton (UK) or long ton (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1268, 0, 'opencell.admin', NULL, 'LTR', now(), NULL, 'litre', 'litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1269, 0, 'opencell.admin', NULL, 'LUB', now(), NULL, 'metric ton, lubricating oil', 'metric ton, lubricating oil', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1270, 0, 'opencell.admin', NULL, 'LUM', now(), NULL, 'lumen', 'lumen', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1271, 0, 'opencell.admin', NULL, 'LUX', now(), NULL, 'lux', 'lux', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1272, 0, 'opencell.admin', NULL, 'LY', now(), NULL, 'linear yard', 'linear yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1273, 0, 'opencell.admin', NULL, 'M1', now(), NULL, 'milligram per litre', 'milligram per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1274, 0, 'opencell.admin', NULL, 'M10', now(), NULL, 'reciprocal cubic yard', 'reciprocal cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1275, 0, 'opencell.admin', NULL, 'M11', now(), NULL, 'cubic yard per degree Fahrenheit', 'cubic yard per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1276, 0, 'opencell.admin', NULL, 'M12', now(), NULL, 'cubic yard per day', 'cubic yard per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1277, 0, 'opencell.admin', NULL, 'M13', now(), NULL, 'cubic yard per hour', 'cubic yard per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1278, 0, 'opencell.admin', NULL, 'M14', now(), NULL, 'cubic yard per psi', 'cubic yard per psi', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1279, 0, 'opencell.admin', NULL, 'M15', now(), NULL, 'cubic yard per minute', 'cubic yard per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1280, 0, 'opencell.admin', NULL, 'M16', now(), NULL, 'cubic yard per second', 'cubic yard per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1281, 0, 'opencell.admin', NULL, 'M17', now(), NULL, 'kilohertz metre', 'kilohertz metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1282, 0, 'opencell.admin', NULL, 'M18', now(), NULL, 'gigahertz metre', 'gigahertz metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1283, 0, 'opencell.admin', NULL, 'M19', now(), NULL, 'Beaufort', 'Beaufort', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1284, 0, 'opencell.admin', NULL, 'M20', now(), NULL, 'reciprocal megakelvin or megakelvin to the power minus one', 'reciprocal megakelvin or megakelvin to the power minus one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1285, 0, 'opencell.admin', NULL, 'M21', now(), NULL, 'reciprocal kilovolt - ampere reciprocal hour', 'reciprocal kilovolt - ampere reciprocal hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1286, 0, 'opencell.admin', NULL, 'M22', now(), NULL, 'millilitre per square centimetre minute', 'millilitre per square centimetre minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1287, 0, 'opencell.admin', NULL, 'M23', now(), NULL, 'newton per centimetre', 'newton per centimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1288, 0, 'opencell.admin', NULL, 'M24', now(), NULL, 'ohm kilometre', 'ohm kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1289, 0, 'opencell.admin', NULL, 'M25', now(), NULL, 'percent per degree Celsius', 'percent per degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1290, 0, 'opencell.admin', NULL, 'M26', now(), NULL, 'gigaohm per metre', 'gigaohm per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1291, 0, 'opencell.admin', NULL, 'M27', now(), NULL, 'megahertz metre', 'megahertz metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1292, 0, 'opencell.admin', NULL, 'M29', now(), NULL, 'kilogram per kilogram', 'kilogram per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1293, 0, 'opencell.admin', NULL, 'M30', now(), NULL, 'reciprocal volt - ampere reciprocal second', 'reciprocal volt - ampere reciprocal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1294, 0, 'opencell.admin', NULL, 'M31', now(), NULL, 'kilogram per kilometre', 'kilogram per kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1295, 0, 'opencell.admin', NULL, 'M32', now(), NULL, 'pascal second per litre', 'pascal second per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1296, 0, 'opencell.admin', NULL, 'M33', now(), NULL, 'millimole per litre', 'millimole per litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1297, 0, 'opencell.admin', NULL, 'M34', now(), NULL, 'newton metre per square metre', 'newton metre per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1298, 0, 'opencell.admin', NULL, 'M35', now(), NULL, 'millivolt - ampere', 'millivolt - ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1299, 0, 'opencell.admin', NULL, 'M36', now(), NULL, '30-day month', '30-day month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1300, 0, 'opencell.admin', NULL, 'M37', now(), NULL, 'actual/360', 'actual/360', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1301, 0, 'opencell.admin', NULL, 'M38', now(), NULL, 'kilometre per second squared', 'kilometre per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1302, 0, 'opencell.admin', NULL, 'M39', now(), NULL, 'centimetre per second squared', 'centimetre per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1303, 0, 'opencell.admin', NULL, 'M4', now(), NULL, 'monetary value', 'monetary value', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1304, 0, 'opencell.admin', NULL, 'M40', now(), NULL, 'yard per second squared', 'yard per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1305, 0, 'opencell.admin', NULL, 'M41', now(), NULL, 'millimetre per second squared', 'millimetre per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1306, 0, 'opencell.admin', NULL, 'M42', now(), NULL, 'mile (statute mile) per second squared', 'mile (statute mile) per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1307, 0, 'opencell.admin', NULL, 'M43', now(), NULL, 'mil', 'mil', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1308, 0, 'opencell.admin', NULL, 'M44', now(), NULL, 'revolution', 'revolution', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1309, 0, 'opencell.admin', NULL, 'M45', now(), NULL, 'degree [unit of angle] per second squared', 'degree [unit of angle] per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1310, 0, 'opencell.admin', NULL, 'M46', now(), NULL, 'revolution per minute ', 'revolution per minute ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1311, 0, 'opencell.admin', NULL, 'M47', now(), NULL, 'circular mil ', 'circular mil ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1312, 0, 'opencell.admin', NULL, 'M48', now(), NULL, 'square mile (based on U.S. survey foot) ', 'square mile (based on U.S. survey foot) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1313, 0, 'opencell.admin', NULL, 'M49', now(), NULL, 'chain (based on U.S. survey foot)', 'chain (based on U.S. survey foot)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1314, 0, 'opencell.admin', NULL, 'M5', now(), NULL, 'microcurie', 'microcurie', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1315, 0, 'opencell.admin', NULL, 'M50', now(), NULL, 'furlong', 'furlong', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1316, 0, 'opencell.admin', NULL, 'M51', now(), NULL, 'foot (U.S. survey) ', 'foot (U.S. survey) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1317, 0, 'opencell.admin', NULL, 'M52', now(), NULL, 'mile (based on U.S. survey foot) ', 'mile (based on U.S. survey foot) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1318, 0, 'opencell.admin', NULL, 'M53', now(), NULL, 'metre per pascal', 'metre per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1319, 0, 'opencell.admin', NULL, 'M55', now(), NULL, 'metre per radiant', 'metre per radiant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1320, 0, 'opencell.admin', NULL, 'M56', now(), NULL, 'shake', 'shake', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1321, 0, 'opencell.admin', NULL, 'M57', now(), NULL, 'mile per minute ', 'mile per minute ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1322, 0, 'opencell.admin', NULL, 'M58', now(), NULL, 'mile per second ', 'mile per second ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1323, 0, 'opencell.admin', NULL, 'M59', now(), NULL, 'metre per second pascal', 'metre per second pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1324, 0, 'opencell.admin', NULL, 'M60', now(), NULL, 'metre per hour', 'metre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1325, 0, 'opencell.admin', NULL, 'M61', now(), NULL, 'inch per year', 'inch per year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1326, 0, 'opencell.admin', NULL, 'M62', now(), NULL, 'kilometre per second ', 'kilometre per second ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1327, 0, 'opencell.admin', NULL, 'M63', now(), NULL, 'inch per minute', 'inch per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1328, 0, 'opencell.admin', NULL, 'M64', now(), NULL, 'yard per second', 'yard per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1329, 0, 'opencell.admin', NULL, 'M65', now(), NULL, 'yard per minute', 'yard per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1330, 0, 'opencell.admin', NULL, 'M66', now(), NULL, 'yard per hour', 'yard per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1331, 0, 'opencell.admin', NULL, 'M67', now(), NULL, 'acre-foot (based on U.S. survey foot)', 'acre-foot (based on U.S. survey foot)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1332, 0, 'opencell.admin', NULL, 'M68', now(), NULL, 'cord (128 ft3)', 'cord (128 ft3)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1333, 0, 'opencell.admin', NULL, 'M69', now(), NULL, 'cubic mile (UK statute)', 'cubic mile (UK statute)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1334, 0, 'opencell.admin', NULL, 'M7', now(), NULL, 'micro-inch', 'micro-inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1335, 0, 'opencell.admin', NULL, 'M70', now(), NULL, 'ton, register ', 'ton, register ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1336, 0, 'opencell.admin', NULL, 'M71', now(), NULL, 'cubic metre per pascal', 'cubic metre per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1337, 0, 'opencell.admin', NULL, 'M72', now(), NULL, 'bel', 'bel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1338, 0, 'opencell.admin', NULL, 'M73', now(), NULL, 'kilogram per cubic metre pascal', 'kilogram per cubic metre pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1339, 0, 'opencell.admin', NULL, 'M74', now(), NULL, 'kilogram per pascal', 'kilogram per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1340, 0, 'opencell.admin', NULL, 'M75', now(), NULL, 'kilopound-force', 'kilopound-force', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1341, 0, 'opencell.admin', NULL, 'M76', now(), NULL, 'poundal', 'poundal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1342, 0, 'opencell.admin', NULL, 'M77', now(), NULL, 'kilogram metre per second squared', 'kilogram metre per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1343, 0, 'opencell.admin', NULL, 'M78', now(), NULL, 'pond', 'pond', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1344, 0, 'opencell.admin', NULL, 'M79', now(), NULL, 'square foot per hour ', 'square foot per hour ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1345, 0, 'opencell.admin', NULL, 'M80', now(), NULL, 'stokes per pascal', 'stokes per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1346, 0, 'opencell.admin', NULL, 'M81', now(), NULL, 'square centimetre per second', 'square centimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1347, 0, 'opencell.admin', NULL, 'M82', now(), NULL, 'square metre per second pascal', 'square metre per second pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1348, 0, 'opencell.admin', NULL, 'M83', now(), NULL, 'denier ', 'denier ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1349, 0, 'opencell.admin', NULL, 'M84', now(), NULL, 'pound per yard ', 'pound per yard ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1350, 0, 'opencell.admin', NULL, 'M85', now(), NULL, 'ton, assay', 'ton, assay', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1351, 0, 'opencell.admin', NULL, 'M86', now(), NULL, 'pfund', 'pfund', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1352, 0, 'opencell.admin', NULL, 'M87', now(), NULL, 'kilogram per second pascal', 'kilogram per second pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1353, 0, 'opencell.admin', NULL, 'M88', now(), NULL, 'tonne per month', 'tonne per month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1354, 0, 'opencell.admin', NULL, 'M89', now(), NULL, 'tonne per year', 'tonne per year', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1355, 0, 'opencell.admin', NULL, 'M9', now(), NULL, 'million Btu per 1000 cubic foot', 'million Btu per 1000 cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1356, 0, 'opencell.admin', NULL, 'M90', now(), NULL, 'kilopound per hour', 'kilopound per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1357, 0, 'opencell.admin', NULL, 'M91', now(), NULL, 'pound per pound', 'pound per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1358, 0, 'opencell.admin', NULL, 'M92', now(), NULL, 'pound-force foot', 'pound-force foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1359, 0, 'opencell.admin', NULL, 'M93', now(), NULL, 'newton metre per radian', 'newton metre per radian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1360, 0, 'opencell.admin', NULL, 'M94', now(), NULL, 'kilogram metre', 'kilogram metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1361, 0, 'opencell.admin', NULL, 'M95', now(), NULL, 'poundal foot', 'poundal foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1362, 0, 'opencell.admin', NULL, 'M96', now(), NULL, 'poundal inch', 'poundal inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1363, 0, 'opencell.admin', NULL, 'M97', now(), NULL, 'dyne metre', 'dyne metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1364, 0, 'opencell.admin', NULL, 'M98', now(), NULL, 'kilogram centimetre per second', 'kilogram centimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1365, 0, 'opencell.admin', NULL, 'M99', now(), NULL, 'gram centimetre per second', 'gram centimetre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1366, 0, 'opencell.admin', NULL, 'MAH', now(), NULL, 'megavolt ampere reactive hour', 'megavolt ampere reactive hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1367, 0, 'opencell.admin', NULL, 'MAL', now(), NULL, 'megalitre', 'megalitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1368, 0, 'opencell.admin', NULL, 'MAM', now(), NULL, 'megametre', 'megametre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1369, 0, 'opencell.admin', NULL, 'MAR', now(), NULL, 'megavar', 'megavar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1370, 0, 'opencell.admin', NULL, 'MAW', now(), NULL, 'megawatt', 'megawatt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1371, 0, 'opencell.admin', NULL, 'MBE', now(), NULL, 'thousand standard brick equivalent', 'thousand standard brick equivalent', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1372, 0, 'opencell.admin', NULL, 'MBF', now(), NULL, 'thousand board foot', 'thousand board foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1373, 0, 'opencell.admin', NULL, 'MBR', now(), NULL, 'millibar', 'millibar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1374, 0, 'opencell.admin', NULL, 'MC', now(), NULL, 'microgram', 'microgram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1375, 0, 'opencell.admin', NULL, 'MCU', now(), NULL, 'millicurie', 'millicurie', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1376, 0, 'opencell.admin', NULL, 'MD', now(), NULL, 'air dry metric ton', 'air dry metric ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1377, 0, 'opencell.admin', NULL, 'MGM', now(), NULL, 'milligram', 'milligram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1378, 0, 'opencell.admin', NULL, 'MHZ', now(), NULL, 'megahertz', 'megahertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1379, 0, 'opencell.admin', NULL, 'MIK', now(), NULL, 'square mile (statute mile)', 'square mile (statute mile)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1380, 0, 'opencell.admin', NULL, 'MIL', now(), NULL, 'thousand', 'thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1381, 0, 'opencell.admin', NULL, 'MIN', now(), NULL, 'minute [unit of time]', 'minute [unit of time]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1382, 0, 'opencell.admin', NULL, 'MIO', now(), NULL, 'million', 'million', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1383, 0, 'opencell.admin', NULL, 'MIU', now(), NULL, 'million international unit', 'million international unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1384, 0, 'opencell.admin', NULL, 'MKD', now(), NULL, 'Square Metre Day', 'Square Metre Day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1385, 0, 'opencell.admin', NULL, 'MKM', now(), NULL, 'Square Metre Month', 'Square Metre Month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1386, 0, 'opencell.admin', NULL, 'MKW', now(), NULL, 'Square Metre Week', 'Square Metre Week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1387, 0, 'opencell.admin', NULL, 'MLD', now(), NULL, 'milliard', 'milliard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1388, 0, 'opencell.admin', NULL, 'MLT', now(), NULL, 'millilitre', 'millilitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1389, 0, 'opencell.admin', NULL, 'MMK', now(), NULL, 'square millimetre', 'square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1390, 0, 'opencell.admin', NULL, 'MMQ', now(), NULL, 'cubic millimetre', 'cubic millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1391, 0, 'opencell.admin', NULL, 'MMT', now(), NULL, 'millimetre', 'millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1392, 0, 'opencell.admin', NULL, 'MND', now(), NULL, 'kilogram, dry weight', 'kilogram, dry weight', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1393, 0, 'opencell.admin', NULL, 'MNJ', now(), NULL, 'Mega Joule per Normalised cubic Metre', 'Mega Joule per Normalised cubic Metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1394, 0, 'opencell.admin', NULL, 'MON', now(), NULL, 'month', 'month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1395, 0, 'opencell.admin', NULL, 'MPA', now(), NULL, 'megapascal', 'megapascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1396, 0, 'opencell.admin', NULL, 'MQD', now(), NULL, 'Cubic Metre Day', 'Cubic Metre Day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1397, 0, 'opencell.admin', NULL, 'MQH', now(), NULL, 'cubic metre per hour', 'cubic metre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1398, 0, 'opencell.admin', NULL, 'MQM', now(), NULL, 'Cubic Metre Month', 'Cubic Metre Month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1399, 0, 'opencell.admin', NULL, 'MQS', now(), NULL, 'cubic metre per second', 'cubic metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1400, 0, 'opencell.admin', NULL, 'MQW', now(), NULL, 'Cubic Metre Week', 'Cubic Metre Week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1401, 0, 'opencell.admin', NULL, 'MRD', now(), NULL, 'Metre Day', 'Metre Day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1402, 0, 'opencell.admin', NULL, 'MRM', now(), NULL, 'Metre Month', 'Metre Month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1403, 0, 'opencell.admin', NULL, 'MRW', now(), NULL, 'Metre Week', 'Metre Week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1404, 0, 'opencell.admin', NULL, 'MSK', now(), NULL, 'metre per second squared', 'metre per second squared', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1405, 0, 'opencell.admin', NULL, 'MTK', now(), NULL, 'square metre', 'square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1406, 0, 'opencell.admin', NULL, 'MTQ', now(), NULL, 'cubic metre', 'cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1407, 0, 'opencell.admin', NULL, 'MTR', now(), NULL, 'metre', 'metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1408, 0, 'opencell.admin', NULL, 'MTS', now(), NULL, 'metre per second', 'metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1409, 0, 'opencell.admin', NULL, 'MTZ', now(), NULL, 'milihertz', 'milihertz', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1410, 0, 'opencell.admin', NULL, 'MVA', now(), NULL, 'megavolt - ampere', 'megavolt - ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1411, 0, 'opencell.admin', NULL, 'MWH', now(), NULL, 'megawatt hour (1000 kW.h)', 'megawatt hour (1000 kW.h)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1412, 0, 'opencell.admin', NULL, 'N1', now(), NULL, 'pen calorie', 'pen calorie', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1413, 0, 'opencell.admin', NULL, 'N10', now(), NULL, 'pound foot per second', 'pound foot per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1414, 0, 'opencell.admin', NULL, 'N11', now(), NULL, 'pound inch per second', 'pound inch per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1415, 0, 'opencell.admin', NULL, 'N12', now(), NULL, 'Pferdestaerke', 'Pferdestaerke', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1416, 0, 'opencell.admin', NULL, 'N13', now(), NULL, 'centimetre of mercury (0 ºC)', 'centimetre of mercury (0 ºC)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1417, 0, 'opencell.admin', NULL, 'N14', now(), NULL, 'centimetre of water (4 ºC)', 'centimetre of water (4 ºC)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1418, 0, 'opencell.admin', NULL, 'N15', now(), NULL, 'foot of water (39.2 ºF)', 'foot of water (39.2 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1419, 0, 'opencell.admin', NULL, 'N16', now(), NULL, 'inch of mercury (32 ºF)', 'inch of mercury (32 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1420, 0, 'opencell.admin', NULL, 'N17', now(), NULL, 'inch of mercury (60 ºF)', 'inch of mercury (60 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1421, 0, 'opencell.admin', NULL, 'N18', now(), NULL, 'inch of water (39.2 ºF)', 'inch of water (39.2 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1422, 0, 'opencell.admin', NULL, 'N19', now(), NULL, 'inch of water (60 ºF)', 'inch of water (60 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1423, 0, 'opencell.admin', NULL, 'N20', now(), NULL, 'kip per square inch', 'kip per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1424, 0, 'opencell.admin', NULL, 'N21', now(), NULL, 'poundal per square foot ', 'poundal per square foot ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1425, 0, 'opencell.admin', NULL, 'N22', now(), NULL, 'ounce (avoirdupois) per square inch ', 'ounce (avoirdupois) per square inch ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1426, 0, 'opencell.admin', NULL, 'N23', now(), NULL, 'conventional metre of water', 'conventional metre of water', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1427, 0, 'opencell.admin', NULL, 'N24', now(), NULL, 'gram per square millimetre', 'gram per square millimetre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1428, 0, 'opencell.admin', NULL, 'N25', now(), NULL, 'pound per square yard', 'pound per square yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1429, 0, 'opencell.admin', NULL, 'N26', now(), NULL, 'poundal per square inch', 'poundal per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1430, 0, 'opencell.admin', NULL, 'N27', now(), NULL, 'foot to the fourth power ', 'foot to the fourth power ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1431, 0, 'opencell.admin', NULL, 'N28', now(), NULL, 'cubic decimetre per kilogram', 'cubic decimetre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1432, 0, 'opencell.admin', NULL, 'N29', now(), NULL, 'cubic foot per pound', 'cubic foot per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1433, 0, 'opencell.admin', NULL, 'N3', now(), NULL, 'print point', 'print point', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1434, 0, 'opencell.admin', NULL, 'N30', now(), NULL, 'cubic inch per pound', 'cubic inch per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1435, 0, 'opencell.admin', NULL, 'N31', now(), NULL, 'kilonewton per metre', 'kilonewton per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1436, 0, 'opencell.admin', NULL, 'N32', now(), NULL, 'poundal per inch', 'poundal per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1437, 0, 'opencell.admin', NULL, 'N33', now(), NULL, 'pound-force per yard', 'pound-force per yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1438, 0, 'opencell.admin', NULL, 'N34', now(), NULL, 'poundal second per square foot ', 'poundal second per square foot ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1439, 0, 'opencell.admin', NULL, 'N35', now(), NULL, 'poise per pascal', 'poise per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1440, 0, 'opencell.admin', NULL, 'N36', now(), NULL, 'newton second per square metre', 'newton second per square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1441, 0, 'opencell.admin', NULL, 'N37', now(), NULL, 'kilogram per metre second', 'kilogram per metre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1442, 0, 'opencell.admin', NULL, 'N38', now(), NULL, 'kilogram per metre minute', 'kilogram per metre minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1443, 0, 'opencell.admin', NULL, 'N39', now(), NULL, 'kilogram per metre day', 'kilogram per metre day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1444, 0, 'opencell.admin', NULL, 'N40', now(), NULL, 'kilogram per metre hour', 'kilogram per metre hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1445, 0, 'opencell.admin', NULL, 'N41', now(), NULL, 'gram per centimetre second', 'gram per centimetre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1446, 0, 'opencell.admin', NULL, 'N42', now(), NULL, 'poundal second per square inch', 'poundal second per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1447, 0, 'opencell.admin', NULL, 'N43', now(), NULL, 'pound per foot minute', 'pound per foot minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1448, 0, 'opencell.admin', NULL, 'N44', now(), NULL, 'pound per foot day', 'pound per foot day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1449, 0, 'opencell.admin', NULL, 'N45', now(), NULL, 'cubic metre per second pascal', 'cubic metre per second pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1450, 0, 'opencell.admin', NULL, 'N46', now(), NULL, 'foot poundal', 'foot poundal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1451, 0, 'opencell.admin', NULL, 'N47', now(), NULL, 'inch poundal', 'inch poundal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1452, 0, 'opencell.admin', NULL, 'N48', now(), NULL, 'watt per square centimetre ', 'watt per square centimetre ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1453, 0, 'opencell.admin', NULL, 'N49', now(), NULL, 'watt per square inch ', 'watt per square inch ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1454, 0, 'opencell.admin', NULL, 'N50', now(), NULL, 'British thermal unit (international table) per square foot hour', 'British thermal unit (international table) per square foot hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1455, 0, 'opencell.admin', NULL, 'N51', now(), NULL, 'British thermal unit (thermochemical) per square foot hour', 'British thermal unit (thermochemical) per square foot hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1456, 0, 'opencell.admin', NULL, 'N52', now(), NULL, 'British thermal unit (thermochemical) per square foot minute', 'British thermal unit (thermochemical) per square foot minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1457, 0, 'opencell.admin', NULL, 'N53', now(), NULL, 'British thermal unit (international table) per square foot second', 'British thermal unit (international table) per square foot second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1458, 0, 'opencell.admin', NULL, 'N54', now(), NULL, 'British thermal unit (thermochemical) per square foot second', 'British thermal unit (thermochemical) per square foot second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1459, 0, 'opencell.admin', NULL, 'N55', now(), NULL, 'British thermal unit (international table) per square inch second', 'British thermal unit (international table) per square inch second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1460, 0, 'opencell.admin', NULL, 'N56', now(), NULL, 'calorie (thermochemical) per square centimetre minute', 'calorie (thermochemical) per square centimetre minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1461, 0, 'opencell.admin', NULL, 'N57', now(), NULL, 'calorie (thermochemical) per square centimetre second', 'calorie (thermochemical) per square centimetre second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1462, 0, 'opencell.admin', NULL, 'N58', now(), NULL, 'British thermal unit (international table) per cubic foot ', 'British thermal unit (international table) per cubic foot ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1463, 0, 'opencell.admin', NULL, 'N59', now(), NULL, 'British thermal unit (thermochemical) per cubic foot', 'British thermal unit (thermochemical) per cubic foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1464, 0, 'opencell.admin', NULL, 'N60', now(), NULL, 'British thermal unit (international table) per degree Fahrenheit', 'British thermal unit (international table) per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1465, 0, 'opencell.admin', NULL, 'N61', now(), NULL, 'British thermal unit (thermochemical) per degree Fahrenheit', 'British thermal unit (thermochemical) per degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1466, 0, 'opencell.admin', NULL, 'N62', now(), NULL, 'British thermal unit (international table) per degree Rankine', 'British thermal unit (international table) per degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1467, 0, 'opencell.admin', NULL, 'N63', now(), NULL, 'British thermal unit (thermochemical) per degree Rankine', 'British thermal unit (thermochemical) per degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1468, 0, 'opencell.admin', NULL, 'N64', now(), NULL, 'British thermal unit (thermochemical) per pound degree Rankine', 'British thermal unit (thermochemical) per pound degree Rankine', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1469, 0, 'opencell.admin', NULL, 'N65', now(), NULL, 'kilocalorie (international table) per gram kelvin', 'kilocalorie (international table) per gram kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1470, 0, 'opencell.admin', NULL, 'N66', now(), NULL, 'British thermal unit (39 ºF) ', 'British thermal unit (39 ºF) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1471, 0, 'opencell.admin', NULL, 'N67', now(), NULL, 'British thermal unit (59 ºF)', 'British thermal unit (59 ºF)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1472, 0, 'opencell.admin', NULL, 'N68', now(), NULL, 'British thermal unit (60 ºF) ', 'British thermal unit (60 ºF) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1473, 0, 'opencell.admin', NULL, 'N69', now(), NULL, 'calorie (20 ºC) ', 'calorie (20 ºC) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1474, 0, 'opencell.admin', NULL, 'N70', now(), NULL, 'quad (1015 BtuIT)', 'quad (1015 BtuIT)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1475, 0, 'opencell.admin', NULL, 'N71', now(), NULL, 'therm (EC)', 'therm (EC)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1476, 0, 'opencell.admin', NULL, 'N72', now(), NULL, 'therm (U.S.)', 'therm (U.S.)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1477, 0, 'opencell.admin', NULL, 'N73', now(), NULL, 'British thermal unit (thermochemical) per pound', 'British thermal unit (thermochemical) per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1478, 0, 'opencell.admin', NULL, 'N74', now(), NULL, 'British thermal unit (international table) per hour square foot degree Fahrenheit', 'British thermal unit (international table) per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1479, 0, 'opencell.admin', NULL, 'N75', now(), NULL, 'British thermal unit (thermochemical) per hour square foot degree Fahrenheit', 'British thermal unit (thermochemical) per hour square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1480, 0, 'opencell.admin', NULL, 'N76', now(), NULL, 'British thermal unit (international table) per second square foot degree Fahrenheit', 'British thermal unit (international table) per second square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1555, 0, 'opencell.admin', NULL, 'P31', now(), NULL, 'stilb', 'stilb', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1481, 0, 'opencell.admin', NULL, 'N77', now(), NULL, 'British thermal unit (thermochemical) per second square foot degree Fahrenheit', 'British thermal unit (thermochemical) per second square foot degree Fahrenheit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1482, 0, 'opencell.admin', NULL, 'N78', now(), NULL, 'kilowatt per square metre kelvin', 'kilowatt per square metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1483, 0, 'opencell.admin', NULL, 'N79', now(), NULL, 'kelvin per pascal', 'kelvin per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1484, 0, 'opencell.admin', NULL, 'N80', now(), NULL, 'watt per metre degree Celsius', 'watt per metre degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1485, 0, 'opencell.admin', NULL, 'N81', now(), NULL, 'kilowatt per metre kelvin', 'kilowatt per metre kelvin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1486, 0, 'opencell.admin', NULL, 'N82', now(), NULL, 'kilowatt per metre degree Celsius', 'kilowatt per metre degree Celsius', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1487, 0, 'opencell.admin', NULL, 'N83', now(), NULL, 'metre per degree Celcius metre', 'metre per degree Celcius metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1488, 0, 'opencell.admin', NULL, 'N84', now(), NULL, 'degree Fahrenheit hour per British thermal unit (international table)', 'degree Fahrenheit hour per British thermal unit (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1489, 0, 'opencell.admin', NULL, 'N85', now(), NULL, 'degree Fahrenheit hour per British thermal unit (thermochemical)', 'degree Fahrenheit hour per British thermal unit (thermochemical)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1490, 0, 'opencell.admin', NULL, 'N86', now(), NULL, 'degree Fahrenheit second per British thermal unit (international table)', 'degree Fahrenheit second per British thermal unit (international table)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1491, 0, 'opencell.admin', NULL, 'N87', now(), NULL, 'degree Fahrenheit second per British thermal unit (thermochemical)', 'degree Fahrenheit second per British thermal unit (thermochemical)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1492, 0, 'opencell.admin', NULL, 'N88', now(), NULL, 'degree Fahrenheit hour square foot per British thermal unit (international table) inch', 'degree Fahrenheit hour square foot per British thermal unit (international table) inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1493, 0, 'opencell.admin', NULL, 'N89', now(), NULL, 'degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch', 'degree Fahrenheit hour square foot per British thermal unit (thermochemical) inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1494, 0, 'opencell.admin', NULL, 'N90', now(), NULL, 'kilofarad', 'kilofarad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1495, 0, 'opencell.admin', NULL, 'N91', now(), NULL, 'reciprocal joule', 'reciprocal joule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1496, 0, 'opencell.admin', NULL, 'N92', now(), NULL, 'picosiemens', 'picosiemens', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1497, 0, 'opencell.admin', NULL, 'N93', now(), NULL, 'ampere per pascal', 'ampere per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1498, 0, 'opencell.admin', NULL, 'N94', now(), NULL, 'franklin', 'franklin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1499, 0, 'opencell.admin', NULL, 'N95', now(), NULL, 'ampere minute', 'ampere minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1500, 0, 'opencell.admin', NULL, 'N96', now(), NULL, 'biot', 'biot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1501, 0, 'opencell.admin', NULL, 'N97', now(), NULL, 'gilbert', 'gilbert', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1502, 0, 'opencell.admin', NULL, 'N98', now(), NULL, 'volt per pascal', 'volt per pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1503, 0, 'opencell.admin', NULL, 'N99', now(), NULL, 'picovolt', 'picovolt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1504, 0, 'opencell.admin', NULL, 'NA', now(), NULL, 'milligram per kilogram', 'milligram per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1505, 0, 'opencell.admin', NULL, 'NAR', now(), NULL, 'number of articles', 'number of articles', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1506, 0, 'opencell.admin', NULL, 'NCL', now(), NULL, 'number of cells', 'number of cells', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1507, 0, 'opencell.admin', NULL, 'NEW', now(), NULL, 'newton', 'newton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1508, 0, 'opencell.admin', NULL, 'NF', now(), NULL, 'message', 'message', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1509, 0, 'opencell.admin', NULL, 'NIL', now(), NULL, 'nil', 'nil', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1510, 0, 'opencell.admin', NULL, 'NIU', now(), NULL, 'number of international units', 'number of international units', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1511, 0, 'opencell.admin', NULL, 'NL', now(), NULL, 'load', 'load', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1512, 0, 'opencell.admin', NULL, 'NM3', now(), NULL, 'Normalised cubic metre', 'Normalised cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1513, 0, 'opencell.admin', NULL, 'NMI', now(), NULL, 'nautical mile', 'nautical mile', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1514, 0, 'opencell.admin', NULL, 'NMP', now(), NULL, 'number of packs', 'number of packs', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1515, 0, 'opencell.admin', NULL, 'NPT', now(), NULL, 'number of parts', 'number of parts', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1516, 0, 'opencell.admin', NULL, 'NT', now(), NULL, 'net ton', 'net ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1517, 0, 'opencell.admin', NULL, 'NTU', now(), NULL, 'Nephelometric turbidity unit', 'Nephelometric turbidity unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1518, 0, 'opencell.admin', NULL, 'NU', now(), NULL, 'newton metre', 'newton metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1519, 0, 'opencell.admin', NULL, 'NX', now(), NULL, 'part per thousand', 'part per thousand', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1520, 0, 'opencell.admin', NULL, 'OA', now(), NULL, 'panel', 'panel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1521, 0, 'opencell.admin', NULL, 'ODE', now(), NULL, 'ozone depletion equivalent', 'ozone depletion equivalent', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1522, 0, 'opencell.admin', NULL, 'ODG', now(), NULL, 'ODS Grams', 'ODS Grams', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1523, 0, 'opencell.admin', NULL, 'ODK', now(), NULL, 'ODS Kilograms', 'ODS Kilograms', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1524, 0, 'opencell.admin', NULL, 'ODM', now(), NULL, 'ODS Milligrams', 'ODS Milligrams', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1525, 0, 'opencell.admin', NULL, 'OHM', now(), NULL, 'ohm', 'ohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1526, 0, 'opencell.admin', NULL, 'ON', now(), NULL, 'ounce per square yard', 'ounce per square yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1527, 0, 'opencell.admin', NULL, 'ONZ', now(), NULL, 'ounce (avoirdupois)', 'ounce (avoirdupois)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1528, 0, 'opencell.admin', NULL, 'OPM', now(), NULL, 'oscillations per minute', 'oscillations per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1529, 0, 'opencell.admin', NULL, 'OT', now(), NULL, 'overtime hour', 'overtime hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1530, 0, 'opencell.admin', NULL, 'OZA', now(), NULL, 'fluid ounce (US)', 'fluid ounce (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1531, 0, 'opencell.admin', NULL, 'OZI', now(), NULL, 'fluid ounce (UK)', 'fluid ounce (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1532, 0, 'opencell.admin', NULL, 'P1', now(), NULL, 'percent', 'percent', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1533, 0, 'opencell.admin', NULL, 'P10', now(), NULL, 'coulomb per metre', 'coulomb per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1534, 0, 'opencell.admin', NULL, 'P11', now(), NULL, 'kiloweber', 'kiloweber', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1535, 0, 'opencell.admin', NULL, 'P12', now(), NULL, 'gamma', 'gamma', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1536, 0, 'opencell.admin', NULL, 'P13', now(), NULL, 'kilotesla', 'kilotesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1537, 0, 'opencell.admin', NULL, 'P14', now(), NULL, 'joule per second', 'joule per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1538, 0, 'opencell.admin', NULL, 'P15', now(), NULL, 'joule per minute', 'joule per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1539, 0, 'opencell.admin', NULL, 'P16', now(), NULL, 'joule per hour', 'joule per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1540, 0, 'opencell.admin', NULL, 'P17', now(), NULL, 'joule per day', 'joule per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1541, 0, 'opencell.admin', NULL, 'P18', now(), NULL, 'kilojoule per second', 'kilojoule per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1542, 0, 'opencell.admin', NULL, 'P19', now(), NULL, 'kilojoule per minute', 'kilojoule per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1543, 0, 'opencell.admin', NULL, 'P2', now(), NULL, 'pound per foot', 'pound per foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1544, 0, 'opencell.admin', NULL, 'P20', now(), NULL, 'kilojoule per hour', 'kilojoule per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1545, 0, 'opencell.admin', NULL, 'P21', now(), NULL, 'kilojoule per day', 'kilojoule per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1546, 0, 'opencell.admin', NULL, 'P22', now(), NULL, 'nanoohm', 'nanoohm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1547, 0, 'opencell.admin', NULL, 'P23', now(), NULL, 'ohm circular-mil per foot ', 'ohm circular-mil per foot ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1548, 0, 'opencell.admin', NULL, 'P24', now(), NULL, 'kilohenry', 'kilohenry', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1549, 0, 'opencell.admin', NULL, 'P25', now(), NULL, 'lumen per square foot ', 'lumen per square foot ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1550, 0, 'opencell.admin', NULL, 'P26', now(), NULL, 'phot', 'phot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1551, 0, 'opencell.admin', NULL, 'P27', now(), NULL, 'footcandle', 'footcandle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1552, 0, 'opencell.admin', NULL, 'P28', now(), NULL, 'candela per square inch ', 'candela per square inch ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1553, 0, 'opencell.admin', NULL, 'P29', now(), NULL, 'footlambert', 'footlambert', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1554, 0, 'opencell.admin', NULL, 'P30', now(), NULL, 'lambert', 'lambert', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1556, 0, 'opencell.admin', NULL, 'P32', now(), NULL, 'candela per square foot', 'candela per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1557, 0, 'opencell.admin', NULL, 'P33', now(), NULL, 'kilocandela', 'kilocandela', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1558, 0, 'opencell.admin', NULL, 'P34', now(), NULL, 'millicandela', 'millicandela', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1559, 0, 'opencell.admin', NULL, 'P35', now(), NULL, 'Hefner-Kerze', 'Hefner-Kerze', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1560, 0, 'opencell.admin', NULL, 'P36', now(), NULL, 'international candle ', 'international candle ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1561, 0, 'opencell.admin', NULL, 'P37', now(), NULL, 'British thermal unit (international table) per square foot', 'British thermal unit (international table) per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1562, 0, 'opencell.admin', NULL, 'P38', now(), NULL, 'British thermal unit (thermochemical) per square foot', 'British thermal unit (thermochemical) per square foot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1563, 0, 'opencell.admin', NULL, 'P39', now(), NULL, 'calorie (thermochemical) per square centimetre ', 'calorie (thermochemical) per square centimetre ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1564, 0, 'opencell.admin', NULL, 'P40', now(), NULL, 'langley', 'langley', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1565, 0, 'opencell.admin', NULL, 'P41', now(), NULL, 'decade (logarithmic)', 'decade (logarithmic)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1566, 0, 'opencell.admin', NULL, 'P42', now(), NULL, 'pascal squared second', 'pascal squared second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1567, 0, 'opencell.admin', NULL, 'P43', now(), NULL, 'bel per metre', 'bel per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1568, 0, 'opencell.admin', NULL, 'P44', now(), NULL, 'pound mole', 'pound mole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1569, 0, 'opencell.admin', NULL, 'P45', now(), NULL, 'pound mole per second', 'pound mole per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1570, 0, 'opencell.admin', NULL, 'P46', now(), NULL, 'pound mole per minute', 'pound mole per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1571, 0, 'opencell.admin', NULL, 'P47', now(), NULL, 'kilomole per kilogram', 'kilomole per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1572, 0, 'opencell.admin', NULL, 'P48', now(), NULL, 'pound mole per pound', 'pound mole per pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1573, 0, 'opencell.admin', NULL, 'P49', now(), NULL, 'newton square metre per ampere', 'newton square metre per ampere', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1574, 0, 'opencell.admin', NULL, 'P5', now(), NULL, 'five pack', 'five pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1575, 0, 'opencell.admin', NULL, 'P50', now(), NULL, 'weber metre', 'weber metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1576, 0, 'opencell.admin', NULL, 'P51', now(), NULL, 'mol per kilogram pascal', 'mol per kilogram pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1577, 0, 'opencell.admin', NULL, 'P52', now(), NULL, 'mol per cubic metre pascal', 'mol per cubic metre pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1578, 0, 'opencell.admin', NULL, 'P53', now(), NULL, 'unit pole ', 'unit pole ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1579, 0, 'opencell.admin', NULL, 'P54', now(), NULL, 'milligray per second', 'milligray per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1580, 0, 'opencell.admin', NULL, 'P55', now(), NULL, 'microgray per second', 'microgray per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1581, 0, 'opencell.admin', NULL, 'P56', now(), NULL, 'nanogray per second', 'nanogray per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1582, 0, 'opencell.admin', NULL, 'P57', now(), NULL, 'gray per minute', 'gray per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1583, 0, 'opencell.admin', NULL, 'P58', now(), NULL, 'milligray per minute', 'milligray per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1584, 0, 'opencell.admin', NULL, 'P59', now(), NULL, 'microgray per minute', 'microgray per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1585, 0, 'opencell.admin', NULL, 'P60', now(), NULL, 'nanogray per minute', 'nanogray per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1586, 0, 'opencell.admin', NULL, 'P61', now(), NULL, 'gray per hour', 'gray per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1587, 0, 'opencell.admin', NULL, 'P62', now(), NULL, 'milligray per hour', 'milligray per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1588, 0, 'opencell.admin', NULL, 'P63', now(), NULL, 'microgray per hour', 'microgray per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1589, 0, 'opencell.admin', NULL, 'P64', now(), NULL, 'nanogray per hour', 'nanogray per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1590, 0, 'opencell.admin', NULL, 'P65', now(), NULL, 'sievert per second', 'sievert per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1591, 0, 'opencell.admin', NULL, 'P66', now(), NULL, 'millisievert per second', 'millisievert per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1592, 0, 'opencell.admin', NULL, 'P67', now(), NULL, 'microsievert per second', 'microsievert per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1593, 0, 'opencell.admin', NULL, 'P68', now(), NULL, 'nanosievert per second', 'nanosievert per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1594, 0, 'opencell.admin', NULL, 'P69', now(), NULL, 'rem per second', 'rem per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1595, 0, 'opencell.admin', NULL, 'P70', now(), NULL, 'sievert per hour', 'sievert per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1596, 0, 'opencell.admin', NULL, 'P71', now(), NULL, 'millisievert per hour', 'millisievert per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1597, 0, 'opencell.admin', NULL, 'P72', now(), NULL, 'microsievert per hour', 'microsievert per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1598, 0, 'opencell.admin', NULL, 'P73', now(), NULL, 'nanosievert per hour', 'nanosievert per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1599, 0, 'opencell.admin', NULL, 'P74', now(), NULL, 'sievert per minute', 'sievert per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1600, 0, 'opencell.admin', NULL, 'P75', now(), NULL, 'millisievert per minute', 'millisievert per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1601, 0, 'opencell.admin', NULL, 'P76', now(), NULL, 'microsievert per minute', 'microsievert per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1602, 0, 'opencell.admin', NULL, 'P77', now(), NULL, 'nanosievert per minute', 'nanosievert per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1603, 0, 'opencell.admin', NULL, 'P78', now(), NULL, 'reciprocal square inch', 'reciprocal square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1604, 0, 'opencell.admin', NULL, 'P79', now(), NULL, 'pascal square metre per kilogram', 'pascal square metre per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1605, 0, 'opencell.admin', NULL, 'P80', now(), NULL, 'millipascal per metre', 'millipascal per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1606, 0, 'opencell.admin', NULL, 'P81', now(), NULL, 'kilopascal per metre', 'kilopascal per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1607, 0, 'opencell.admin', NULL, 'P82', now(), NULL, 'hectopascal per metre', 'hectopascal per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1608, 0, 'opencell.admin', NULL, 'P83', now(), NULL, 'standard atmosphere per metre', 'standard atmosphere per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1609, 0, 'opencell.admin', NULL, 'P84', now(), NULL, 'technical atmosphere per metre', 'technical atmosphere per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1610, 0, 'opencell.admin', NULL, 'P85', now(), NULL, 'torr per metre', 'torr per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1611, 0, 'opencell.admin', NULL, 'P86', now(), NULL, 'psi per inch', 'psi per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1612, 0, 'opencell.admin', NULL, 'P87', now(), NULL, 'cubic metre per second square metre', 'cubic metre per second square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1613, 0, 'opencell.admin', NULL, 'P88', now(), NULL, 'rhe', 'rhe', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1614, 0, 'opencell.admin', NULL, 'P89', now(), NULL, 'pound-force foot per inch', 'pound-force foot per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1615, 0, 'opencell.admin', NULL, 'P90', now(), NULL, 'pound-force inch per inch ', 'pound-force inch per inch ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1616, 0, 'opencell.admin', NULL, 'P91', now(), NULL, 'perm (0 ºC) ', 'perm (0 ºC) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1617, 0, 'opencell.admin', NULL, 'P92', now(), NULL, 'perm (23 ºC) ', 'perm (23 ºC) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1618, 0, 'opencell.admin', NULL, 'P93', now(), NULL, 'byte per second', 'byte per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1619, 0, 'opencell.admin', NULL, 'P94', now(), NULL, 'kilobyte per second', 'kilobyte per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1620, 0, 'opencell.admin', NULL, 'P95', now(), NULL, 'megabyte per second', 'megabyte per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1621, 0, 'opencell.admin', NULL, 'P96', now(), NULL, 'reciprocal volt', 'reciprocal volt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1622, 0, 'opencell.admin', NULL, 'P97', now(), NULL, 'reciprocal radian', 'reciprocal radian', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1623, 0, 'opencell.admin', NULL, 'P98', now(), NULL, 'pascal to the power sum of stoichiometric numbers', 'pascal to the power sum of stoichiometric numbers', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1624, 0, 'opencell.admin', NULL, 'P99', now(), NULL, 'mole per cubiv metre to the power sum of stoichiometric numbers', 'mole per cubiv metre to the power sum of stoichiometric numbers', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1625, 0, 'opencell.admin', NULL, 'PAL', now(), NULL, 'pascal', 'pascal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1626, 0, 'opencell.admin', NULL, 'PD', now(), NULL, 'pad', 'pad', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1627, 0, 'opencell.admin', NULL, 'PFL', now(), NULL, 'proof litre', 'proof litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1628, 0, 'opencell.admin', NULL, 'PGL', now(), NULL, 'proof gallon', 'proof gallon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1629, 0, 'opencell.admin', NULL, 'PI', now(), NULL, 'pitch', 'pitch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1630, 0, 'opencell.admin', NULL, 'PLA', now(), NULL, 'degree Plato', 'degree Plato', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1631, 0, 'opencell.admin', NULL, 'PO', now(), NULL, 'pound per inch of length', 'pound per inch of length', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1632, 0, 'opencell.admin', NULL, 'PQ', now(), NULL, 'page per inch', 'page per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1633, 0, 'opencell.admin', NULL, 'PR', now(), NULL, 'pair', 'pair', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1634, 0, 'opencell.admin', NULL, 'PS', now(), NULL, 'pound-force per square inch', 'pound-force per square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1635, 0, 'opencell.admin', NULL, 'PTD', now(), NULL, 'dry pint (US)', 'dry pint (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1636, 0, 'opencell.admin', NULL, 'PTI', now(), NULL, 'pint (UK)', 'pint (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1637, 0, 'opencell.admin', NULL, 'PTL', now(), NULL, 'liquid pint (US)', 'liquid pint (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1638, 0, 'opencell.admin', NULL, 'PTN', now(), NULL, 'portion', 'portion', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1639, 0, 'opencell.admin', NULL, 'Q10', now(), NULL, 'joule per tesla', 'joule per tesla', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1640, 0, 'opencell.admin', NULL, 'Q11', now(), NULL, 'erlang', 'erlang', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1641, 0, 'opencell.admin', NULL, 'Q12', now(), NULL, 'octet', 'octet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1642, 0, 'opencell.admin', NULL, 'Q13', now(), NULL, 'octet per second', 'octet per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1643, 0, 'opencell.admin', NULL, 'Q14', now(), NULL, 'shannon', 'shannon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1644, 0, 'opencell.admin', NULL, 'Q15', now(), NULL, 'hartley', 'hartley', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1645, 0, 'opencell.admin', NULL, 'Q16', now(), NULL, 'natural unit of information', 'natural unit of information', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1646, 0, 'opencell.admin', NULL, 'Q17', now(), NULL, 'shannon per second', 'shannon per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1647, 0, 'opencell.admin', NULL, 'Q18', now(), NULL, 'hartley per second', 'hartley per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1648, 0, 'opencell.admin', NULL, 'Q19', now(), NULL, 'natural unit of information per second', 'natural unit of information per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1649, 0, 'opencell.admin', NULL, 'Q20', now(), NULL, 'second per kilogramm', 'second per kilogramm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1650, 0, 'opencell.admin', NULL, 'Q21', now(), NULL, 'watt square metre', 'watt square metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1651, 0, 'opencell.admin', NULL, 'Q22', now(), NULL, 'second per radian cubic metre', 'second per radian cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1652, 0, 'opencell.admin', NULL, 'Q23', now(), NULL, 'weber to the power minus one', 'weber to the power minus one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1653, 0, 'opencell.admin', NULL, 'Q24', now(), NULL, 'reciprocal inch', 'reciprocal inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1654, 0, 'opencell.admin', NULL, 'Q25', now(), NULL, 'dioptre', 'dioptre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1655, 0, 'opencell.admin', NULL, 'Q26', now(), NULL, 'one per one', 'one per one', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1656, 0, 'opencell.admin', NULL, 'Q27', now(), NULL, 'newton metre per metre', 'newton metre per metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1657, 0, 'opencell.admin', NULL, 'Q28', now(), NULL, 'kilogram per square metre pascal second', 'kilogram per square metre pascal second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1658, 0, 'opencell.admin', NULL, 'Q29', now(), NULL, 'microgram per hectogram', 'microgram per hectogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1659, 0, 'opencell.admin', NULL, 'Q3', now(), NULL, 'meal', 'meal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1660, 0, 'opencell.admin', NULL, 'Q30', now(), NULL, 'pH (potential of Hydrogen)', 'pH (potential of Hydrogen)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1661, 0, 'opencell.admin', NULL, 'Q31', now(), NULL, 'kilojoule per gram', 'kilojoule per gram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1662, 0, 'opencell.admin', NULL, 'Q32', now(), NULL, 'femtolitre', 'femtolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1663, 0, 'opencell.admin', NULL, 'Q33', now(), NULL, 'picolitre', 'picolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1664, 0, 'opencell.admin', NULL, 'Q34', now(), NULL, 'nanolitre', 'nanolitre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1665, 0, 'opencell.admin', NULL, 'Q35', now(), NULL, 'megawatts per minute', 'megawatts per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1666, 0, 'opencell.admin', NULL, 'Q36', now(), NULL, 'square metre per cubic metre', 'square metre per cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1667, 0, 'opencell.admin', NULL, 'Q37', now(), NULL, 'Standard cubic metre per day', 'Standard cubic metre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1668, 0, 'opencell.admin', NULL, 'Q38', now(), NULL, 'Standard cubic metre per hour', 'Standard cubic metre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1669, 0, 'opencell.admin', NULL, 'Q39', now(), NULL, 'Normalized cubic metre per day', 'Normalized cubic metre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1670, 0, 'opencell.admin', NULL, 'Q40', now(), NULL, 'Normalized cubic metre per hour', 'Normalized cubic metre per hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1671, 0, 'opencell.admin', NULL, 'Q41', now(), NULL, 'Joule per normalised cubic metre', 'Joule per normalised cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1672, 0, 'opencell.admin', NULL, 'Q42', now(), NULL, 'Joule per standard cubic metre', 'Joule per standard cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1673, 0, 'opencell.admin', NULL, 'QA', now(), NULL, 'page - facsimile', 'page - facsimile', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1674, 0, 'opencell.admin', NULL, 'QAN', now(), NULL, 'quarter (of a year)', 'quarter (of a year)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1675, 0, 'opencell.admin', NULL, 'QB', now(), NULL, 'page - hardcopy', 'page - hardcopy', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1676, 0, 'opencell.admin', NULL, 'QR', now(), NULL, 'quire', 'quire', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1677, 0, 'opencell.admin', NULL, 'QTD', now(), NULL, 'dry quart (US)', 'dry quart (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1678, 0, 'opencell.admin', NULL, 'QTI', now(), NULL, 'quart (UK)', 'quart (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1679, 0, 'opencell.admin', NULL, 'QTL', now(), NULL, 'liquid quart (US)', 'liquid quart (US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1680, 0, 'opencell.admin', NULL, 'QTR', now(), NULL, 'quarter (UK)', 'quarter (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1681, 0, 'opencell.admin', NULL, 'R1', now(), NULL, 'pica', 'pica', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1682, 0, 'opencell.admin', NULL, 'R9', now(), NULL, 'thousand cubic metre', 'thousand cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1683, 0, 'opencell.admin', NULL, 'RH', now(), NULL, 'running or operating hour', 'running or operating hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1684, 0, 'opencell.admin', NULL, 'RM', now(), NULL, 'ream', 'ream', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1685, 0, 'opencell.admin', NULL, 'ROM', now(), NULL, 'room', 'room', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1686, 0, 'opencell.admin', NULL, 'RP', now(), NULL, 'pound per ream', 'pound per ream', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1687, 0, 'opencell.admin', NULL, 'RPM', now(), NULL, 'revolutions per minute', 'revolutions per minute', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1688, 0, 'opencell.admin', NULL, 'RPS', now(), NULL, 'revolutions per second', 'revolutions per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1689, 0, 'opencell.admin', NULL, 'RT', now(), NULL, 'revenue ton mile', 'revenue ton mile', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1690, 0, 'opencell.admin', NULL, 'S3', now(), NULL, 'square foot per second', 'square foot per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1691, 0, 'opencell.admin', NULL, 'S4', now(), NULL, 'square metre per second', 'square metre per second', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1692, 0, 'opencell.admin', NULL, 'SAN', now(), NULL, 'half year (6 months)', 'half year (6 months)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1693, 0, 'opencell.admin', NULL, 'SCO', now(), NULL, 'score', 'score', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1694, 0, 'opencell.admin', NULL, 'SCR', now(), NULL, 'scruple', 'scruple', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1695, 0, 'opencell.admin', NULL, 'SEC', now(), NULL, 'second [unit of time]', 'second [unit of time]', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1696, 0, 'opencell.admin', NULL, 'SET', now(), NULL, 'set', 'set', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1697, 0, 'opencell.admin', NULL, 'SG', now(), NULL, 'segment', 'segment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1698, 0, 'opencell.admin', NULL, 'SIE', now(), NULL, 'siemens', 'siemens', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1699, 0, 'opencell.admin', NULL, 'SM3', now(), NULL, 'Standard cubic metre', 'Standard cubic metre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1700, 0, 'opencell.admin', NULL, 'SMI', now(), NULL, 'mile (statute mile)', 'mile (statute mile)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1701, 0, 'opencell.admin', NULL, 'SQ', now(), NULL, 'square', 'square', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1702, 0, 'opencell.admin', NULL, 'SQR', now(), NULL, 'square, roofing', 'square, roofing', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1703, 0, 'opencell.admin', NULL, 'SR', now(), NULL, 'strip', 'strip', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1704, 0, 'opencell.admin', NULL, 'STC', now(), NULL, 'stick', 'stick', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1705, 0, 'opencell.admin', NULL, 'STI', now(), NULL, 'stone (UK)', 'stone (UK)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1706, 0, 'opencell.admin', NULL, 'STK', now(), NULL, 'stick, cigarette', 'stick, cigarette', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1707, 0, 'opencell.admin', NULL, 'STL', now(), NULL, 'standard litre', 'standard litre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1708, 0, 'opencell.admin', NULL, 'STN', now(), NULL, 'ton (US) or short ton (UK/US)', 'ton (US) or short ton (UK/US)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1709, 0, 'opencell.admin', NULL, 'STW', now(), NULL, 'straw', 'straw', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1710, 0, 'opencell.admin', NULL, 'SW', now(), NULL, 'skein', 'skein', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1711, 0, 'opencell.admin', NULL, 'SX', now(), NULL, 'shipment', 'shipment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1712, 0, 'opencell.admin', NULL, 'SYR', now(), NULL, 'syringe', 'syringe', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1713, 0, 'opencell.admin', NULL, 'T0', now(), NULL, 'telecommunication line in service', 'telecommunication line in service', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1714, 0, 'opencell.admin', NULL, 'T3', now(), NULL, 'thousand piece', 'thousand piece', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1715, 0, 'opencell.admin', NULL, 'TAH', now(), NULL, 'kiloampere hour (thousand ampere hour)', 'kiloampere hour (thousand ampere hour)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1716, 0, 'opencell.admin', NULL, 'TAN', now(), NULL, 'total acid number', 'total acid number', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1717, 0, 'opencell.admin', NULL, 'TI', now(), NULL, 'thousand square inch', 'thousand square inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1718, 0, 'opencell.admin', NULL, 'TIC', now(), NULL, 'metric ton, including container', 'metric ton, including container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1719, 0, 'opencell.admin', NULL, 'TIP', now(), NULL, 'metric ton, including inner packaging', 'metric ton, including inner packaging', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1720, 0, 'opencell.admin', NULL, 'TKM', now(), NULL, 'tonne kilometre', 'tonne kilometre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1721, 0, 'opencell.admin', NULL, 'TMS', now(), NULL, 'kilogram of imported meat, less offal', 'kilogram of imported meat, less offal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1722, 0, 'opencell.admin', NULL, 'TNE', now(), NULL, 'tonne (metric ton)', 'tonne (metric ton)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1723, 0, 'opencell.admin', NULL, 'TP', now(), NULL, 'ten pack', 'ten pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1724, 0, 'opencell.admin', NULL, 'TPI', now(), NULL, 'teeth per inch', 'teeth per inch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1725, 0, 'opencell.admin', NULL, 'TPR', now(), NULL, 'ten pair', 'ten pair', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1726, 0, 'opencell.admin', NULL, 'TQD', now(), NULL, 'thousand cubic metre per day', 'thousand cubic metre per day', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1727, 0, 'opencell.admin', NULL, 'TRL', now(), NULL, 'trillion (EUR)', 'trillion (EUR)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1728, 0, 'opencell.admin', NULL, 'TST', now(), NULL, 'ten set', 'ten set', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1729, 0, 'opencell.admin', NULL, 'TTS', now(), NULL, 'ten thousand sticks', 'ten thousand sticks', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1730, 0, 'opencell.admin', NULL, 'U1', now(), NULL, 'treatment', 'treatment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1731, 0, 'opencell.admin', NULL, 'U2', now(), NULL, 'tablet', 'tablet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1732, 0, 'opencell.admin', NULL, 'UB', now(), NULL, 'telecommunication line in service average', 'telecommunication line in service average', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1733, 0, 'opencell.admin', NULL, 'UC', now(), NULL, 'telecommunication port', 'telecommunication port', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1734, 0, 'opencell.admin', NULL, 'VA', now(), NULL, 'volt - ampere per kilogram', 'volt - ampere per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1735, 0, 'opencell.admin', NULL, 'VLT', now(), NULL, 'volt', 'volt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1736, 0, 'opencell.admin', NULL, 'VP', now(), NULL, 'percent volume', 'percent volume', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1737, 0, 'opencell.admin', NULL, 'W2', now(), NULL, 'wet kilo', 'wet kilo', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1738, 0, 'opencell.admin', NULL, 'WA', now(), NULL, 'watt per kilogram', 'watt per kilogram', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1739, 0, 'opencell.admin', NULL, 'WB', now(), NULL, 'wet pound', 'wet pound', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1740, 0, 'opencell.admin', NULL, 'WCD', now(), NULL, 'cord', 'cord', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1741, 0, 'opencell.admin', NULL, 'WE', now(), NULL, 'wet ton', 'wet ton', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1742, 0, 'opencell.admin', NULL, 'WEB', now(), NULL, 'weber', 'weber', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1743, 0, 'opencell.admin', NULL, 'WEE', now(), NULL, 'week', 'week', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1744, 0, 'opencell.admin', NULL, 'WG', now(), NULL, 'wine gallon', 'wine gallon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1745, 0, 'opencell.admin', NULL, 'WHR', now(), NULL, 'watt hour', 'watt hour', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1746, 0, 'opencell.admin', NULL, 'WM', now(), NULL, 'working month', 'working month', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1747, 0, 'opencell.admin', NULL, 'WSD', now(), NULL, 'standard', 'standard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1748, 0, 'opencell.admin', NULL, 'WTT', now(), NULL, 'watt', 'watt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1749, 0, 'opencell.admin', NULL, 'X1', now(), NULL, 'Gunters chain', 'Gunters chain', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1750, 0, 'opencell.admin', NULL, 'YDK', now(), NULL, 'square yard', 'square yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1751, 0, 'opencell.admin', NULL, 'YDQ', now(), NULL, 'cubic yard', 'cubic yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1752, 0, 'opencell.admin', NULL, 'YRD', now(), NULL, 'yard', 'yard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1753, 0, 'opencell.admin', NULL, 'Z11', now(), NULL, 'hanging container', 'hanging container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1754, 0, 'opencell.admin', NULL, 'Z9', now(), NULL, 'nanomole', 'nanomole', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1755, 0, 'opencell.admin', NULL, 'ZP', now(), NULL, 'page', 'page', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1756, 0, 'opencell.admin', NULL, 'ZZ', now(), NULL, 'mutually defined', 'mutually defined', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1757, 0, 'opencell.admin', NULL, 'X1A', now(), NULL, 'Drum, steel', 'Drum, steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1758, 0, 'opencell.admin', NULL, 'X1B', now(), NULL, 'Drum, aluminium', 'Drum, aluminium', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1759, 0, 'opencell.admin', NULL, 'X1D', now(), NULL, 'Drum, plywood', 'Drum, plywood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1760, 0, 'opencell.admin', NULL, 'X1F', now(), NULL, 'Container, flexible', 'Container, flexible', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1761, 0, 'opencell.admin', NULL, 'X1G', now(), NULL, 'Drum, fibre', 'Drum, fibre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1762, 0, 'opencell.admin', NULL, 'X1W', now(), NULL, 'Drum, wooden', 'Drum, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1763, 0, 'opencell.admin', NULL, 'X2C', now(), NULL, 'Barrel, wooden', 'Barrel, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1764, 0, 'opencell.admin', NULL, 'X3A', now(), NULL, 'Jerrican, steel', 'Jerrican, steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1765, 0, 'opencell.admin', NULL, 'X3H', now(), NULL, 'Jerrican, plastic', 'Jerrican, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1766, 0, 'opencell.admin', NULL, 'X43', now(), NULL, 'Bag, super bulk', 'Bag, super bulk', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1767, 0, 'opencell.admin', NULL, 'X44', now(), NULL, 'Bag, polybag', 'Bag, polybag', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1768, 0, 'opencell.admin', NULL, 'X4A', now(), NULL, 'Box, steel', 'Box, steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1769, 0, 'opencell.admin', NULL, 'X4B', now(), NULL, 'Box, aluminium', 'Box, aluminium', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1770, 0, 'opencell.admin', NULL, 'X4C', now(), NULL, 'Box, natural wood', 'Box, natural wood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1771, 0, 'opencell.admin', NULL, 'X4D', now(), NULL, 'Box, plywood', 'Box, plywood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1772, 0, 'opencell.admin', NULL, 'X4F', now(), NULL, 'Box, reconstituted wood', 'Box, reconstituted wood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1773, 0, 'opencell.admin', NULL, 'X4G', now(), NULL, 'Box, fibreboard', 'Box, fibreboard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1774, 0, 'opencell.admin', NULL, 'X4H', now(), NULL, 'Box, plastic', 'Box, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1775, 0, 'opencell.admin', NULL, 'X5H', now(), NULL, 'Bag, woven plastic', 'Bag, woven plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1776, 0, 'opencell.admin', NULL, 'X5L', now(), NULL, 'Bag, textile ', 'Bag, textile ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1777, 0, 'opencell.admin', NULL, 'X5M', now(), NULL, 'Bag, paper ', 'Bag, paper ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1778, 0, 'opencell.admin', NULL, 'X6H', now(), NULL, 'Composite packaging, plastic receptacle', 'Composite packaging, plastic receptacle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1779, 0, 'opencell.admin', NULL, 'X6P', now(), NULL, 'Composite packaging, glass receptacle', 'Composite packaging, glass receptacle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1780, 0, 'opencell.admin', NULL, 'X7A', now(), NULL, 'Case, car', 'Case, car', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1781, 0, 'opencell.admin', NULL, 'X7B', now(), NULL, 'Case, wooden', 'Case, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1782, 0, 'opencell.admin', NULL, 'X8A', now(), NULL, 'Pallet, wooden', 'Pallet, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1783, 0, 'opencell.admin', NULL, 'X8B', now(), NULL, 'Crate, wooden', 'Crate, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1784, 0, 'opencell.admin', NULL, 'X8C', now(), NULL, 'Bundle, wooden', 'Bundle, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1785, 0, 'opencell.admin', NULL, 'XAA', now(), NULL, 'Intermediate bulk container, rigid plastic', 'Intermediate bulk container, rigid plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1786, 0, 'opencell.admin', NULL, 'XAB', now(), NULL, 'Receptacle, fibre ', 'Receptacle, fibre ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1787, 0, 'opencell.admin', NULL, 'XAC', now(), NULL, 'Receptacle, paper ', 'Receptacle, paper ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1788, 0, 'opencell.admin', NULL, 'XAD', now(), NULL, 'Receptacle, wooden ', 'Receptacle, wooden ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1789, 0, 'opencell.admin', NULL, 'XAE', now(), NULL, 'Aerosol', 'Aerosol', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1790, 0, 'opencell.admin', NULL, 'XAF', now(), NULL, 'Pallet, modular, collars 80cms * 60cms ', 'Pallet, modular, collars 80cms * 60cms ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1791, 0, 'opencell.admin', NULL, 'XAG', now(), NULL, 'Pallet, shrinkwrapped ', 'Pallet, shrinkwrapped ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1792, 0, 'opencell.admin', NULL, 'XAH', now(), NULL, 'Pallet, 100cms * 110cms ', 'Pallet, 100cms * 110cms ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1793, 0, 'opencell.admin', NULL, 'XAI', now(), NULL, 'Clamshell', 'Clamshell', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1794, 0, 'opencell.admin', NULL, 'XAJ', now(), NULL, 'Cone', 'Cone', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1795, 0, 'opencell.admin', NULL, 'XAL', now(), NULL, 'Ball', 'Ball', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1796, 0, 'opencell.admin', NULL, 'XAM', now(), NULL, 'Ampoule, non-protected ', 'Ampoule, non-protected ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1797, 0, 'opencell.admin', NULL, 'XAP', now(), NULL, 'Ampoule, protected ', 'Ampoule, protected ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1798, 0, 'opencell.admin', NULL, 'XAT', now(), NULL, 'Atomizer ', 'Atomizer ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1799, 0, 'opencell.admin', NULL, 'XAV', now(), NULL, 'Capsule', 'Capsule', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1800, 0, 'opencell.admin', NULL, 'XB4', now(), NULL, 'Belt', 'Belt', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1801, 0, 'opencell.admin', NULL, 'XBA', now(), NULL, 'Barrel ', 'Barrel ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1802, 0, 'opencell.admin', NULL, 'XBB', now(), NULL, 'Bobbin ', 'Bobbin ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1803, 0, 'opencell.admin', NULL, 'XBC', now(), NULL, 'Bottlecrate / bottlerack ', 'Bottlecrate / bottlerack ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1804, 0, 'opencell.admin', NULL, 'XBD', now(), NULL, 'Board', 'Board', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1805, 0, 'opencell.admin', NULL, 'XBE', now(), NULL, 'Bundle ', 'Bundle ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1806, 0, 'opencell.admin', NULL, 'XBF', now(), NULL, 'Balloon, non-protected ', 'Balloon, non-protected ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1807, 0, 'opencell.admin', NULL, 'XBG', now(), NULL, 'Bag', 'Bag', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1808, 0, 'opencell.admin', NULL, 'XBH', now(), NULL, 'Bunch', 'Bunch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1809, 0, 'opencell.admin', NULL, 'XBI', now(), NULL, 'Bin', 'Bin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1810, 0, 'opencell.admin', NULL, 'XBJ', now(), NULL, 'Bucket ', 'Bucket ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1811, 0, 'opencell.admin', NULL, 'XBK', now(), NULL, 'Basket ', 'Basket ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1812, 0, 'opencell.admin', NULL, 'XBL', now(), NULL, 'Bale, compressed ', 'Bale, compressed ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1813, 0, 'opencell.admin', NULL, 'XBM', now(), NULL, 'Basin', 'Basin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1814, 0, 'opencell.admin', NULL, 'XBN', now(), NULL, 'Bale, non-compressed ', 'Bale, non-compressed ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1815, 0, 'opencell.admin', NULL, 'XBO', now(), NULL, 'Bottle, non-protected, cylindrical ', 'Bottle, non-protected, cylindrical ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1816, 0, 'opencell.admin', NULL, 'XBP', now(), NULL, 'Balloon, protected ', 'Balloon, protected ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1817, 0, 'opencell.admin', NULL, 'XBQ', now(), NULL, 'Bottle, protected cylindrical', 'Bottle, protected cylindrical', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1818, 0, 'opencell.admin', NULL, 'XBR', now(), NULL, 'Bar', 'Bar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1819, 0, 'opencell.admin', NULL, 'XBS', now(), NULL, 'Bottle, non-protected, bulbous ', 'Bottle, non-protected, bulbous ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1820, 0, 'opencell.admin', NULL, 'XBT', now(), NULL, 'Bolt ', 'Bolt ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1821, 0, 'opencell.admin', NULL, 'XBU', now(), NULL, 'Butt ', 'Butt ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1822, 0, 'opencell.admin', NULL, 'XBV', now(), NULL, 'Bottle, protected bulbous', 'Bottle, protected bulbous', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1823, 0, 'opencell.admin', NULL, 'XBW', now(), NULL, 'Box, for liquids', 'Box, for liquids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1824, 0, 'opencell.admin', NULL, 'XBX', now(), NULL, 'Box', 'Box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1825, 0, 'opencell.admin', NULL, 'XBY', now(), NULL, 'Board, in bundle/bunch/truss ', 'Board, in bundle/bunch/truss ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1826, 0, 'opencell.admin', NULL, 'XBZ', now(), NULL, 'Bars, in bundle/bunch/truss', 'Bars, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1827, 0, 'opencell.admin', NULL, 'XCA', now(), NULL, 'Can, rectangular ', 'Can, rectangular ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1828, 0, 'opencell.admin', NULL, 'XCB', now(), NULL, 'Crate, beer', 'Crate, beer', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1829, 0, 'opencell.admin', NULL, 'XCC', now(), NULL, 'Churn', 'Churn', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1830, 0, 'opencell.admin', NULL, 'XCD', now(), NULL, 'Can, with handle and spout ', 'Can, with handle and spout ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1831, 0, 'opencell.admin', NULL, 'XCE', now(), NULL, 'Creel', 'Creel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1832, 0, 'opencell.admin', NULL, 'XCF', now(), NULL, 'Coffer ', 'Coffer ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1833, 0, 'opencell.admin', NULL, 'XCG', now(), NULL, 'Cage ', 'Cage ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1834, 0, 'opencell.admin', NULL, 'XCH', now(), NULL, 'Chest', 'Chest', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1835, 0, 'opencell.admin', NULL, 'XCI', now(), NULL, 'Canister ', 'Canister ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1836, 0, 'opencell.admin', NULL, 'XCJ', now(), NULL, 'Coffin ', 'Coffin ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1837, 0, 'opencell.admin', NULL, 'XCK', now(), NULL, 'Cask ', 'Cask ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1838, 0, 'opencell.admin', NULL, 'XCL', now(), NULL, 'Coil ', 'Coil ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1839, 0, 'opencell.admin', NULL, 'XCM', now(), NULL, 'Card', 'Card', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1840, 0, 'opencell.admin', NULL, 'XCN', now(), NULL, 'Container, not otherwise specified as transport equipment', 'Container, not otherwise specified as transport equipment', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1841, 0, 'opencell.admin', NULL, 'XCO', now(), NULL, 'Carboy, non-protected', 'Carboy, non-protected', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1842, 0, 'opencell.admin', NULL, 'XCP', now(), NULL, 'Carboy, protected', 'Carboy, protected', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1843, 0, 'opencell.admin', NULL, 'XCQ', now(), NULL, 'Cartridge', 'Cartridge', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1844, 0, 'opencell.admin', NULL, 'XCR', now(), NULL, 'Crate', 'Crate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1845, 0, 'opencell.admin', NULL, 'XCS', now(), NULL, 'Case ', 'Case ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1846, 0, 'opencell.admin', NULL, 'XCT', now(), NULL, 'Carton ', 'Carton ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1847, 0, 'opencell.admin', NULL, 'XCU', now(), NULL, 'Cup', 'Cup', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1848, 0, 'opencell.admin', NULL, 'XCV', now(), NULL, 'Cover', 'Cover', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1849, 0, 'opencell.admin', NULL, 'XCW', now(), NULL, 'Cage, roll ', 'Cage, roll ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1850, 0, 'opencell.admin', NULL, 'XCX', now(), NULL, 'Can, cylindrical ', 'Can, cylindrical ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1851, 0, 'opencell.admin', NULL, 'XCY', now(), NULL, 'Cylinder ', 'Cylinder ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1852, 0, 'opencell.admin', NULL, 'XCZ', now(), NULL, 'Canvas ', 'Canvas ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1853, 0, 'opencell.admin', NULL, 'XDA', now(), NULL, 'Crate, multiple layer, plastic ', 'Crate, multiple layer, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1854, 0, 'opencell.admin', NULL, 'XDB', now(), NULL, 'Crate, multiple layer, wooden', 'Crate, multiple layer, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1855, 0, 'opencell.admin', NULL, 'XDC', now(), NULL, 'Crate, multiple layer, cardboard ', 'Crate, multiple layer, cardboard ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1856, 0, 'opencell.admin', NULL, 'XDG', now(), NULL, 'Cage, Commonwealth Handling Equipment Pool  (CHEP)', 'Cage, Commonwealth Handling Equipment Pool  (CHEP)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1857, 0, 'opencell.admin', NULL, 'XDH', now(), NULL, 'Box, Commonwealth Handling Equipment Pool (CHEP), Eurobox', 'Box, Commonwealth Handling Equipment Pool (CHEP), Eurobox', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1858, 0, 'opencell.admin', NULL, 'XDI', now(), NULL, 'Drum, iron ', 'Drum, iron ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1859, 0, 'opencell.admin', NULL, 'XDJ', now(), NULL, 'Demijohn, non-protected', 'Demijohn, non-protected', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1860, 0, 'opencell.admin', NULL, 'XDK', now(), NULL, 'Crate, bulk, cardboard ', 'Crate, bulk, cardboard ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1861, 0, 'opencell.admin', NULL, 'XDL', now(), NULL, 'Crate, bulk, plastic ', 'Crate, bulk, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1862, 0, 'opencell.admin', NULL, 'XDM', now(), NULL, 'Crate, bulk, wooden', 'Crate, bulk, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1863, 0, 'opencell.admin', NULL, 'XDN', now(), NULL, 'Dispenser', 'Dispenser', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1864, 0, 'opencell.admin', NULL, 'XDP', now(), NULL, 'Demijohn, protected', 'Demijohn, protected', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1865, 0, 'opencell.admin', NULL, 'XDR', now(), NULL, 'Drum ', 'Drum ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1866, 0, 'opencell.admin', NULL, 'XDS', now(), NULL, 'Tray, one layer no cover, plastic', 'Tray, one layer no cover, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1867, 0, 'opencell.admin', NULL, 'XDT', now(), NULL, 'Tray, one layer no cover, wooden ', 'Tray, one layer no cover, wooden ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1868, 0, 'opencell.admin', NULL, 'XDU', now(), NULL, 'Tray, one layer no cover, polystyrene', 'Tray, one layer no cover, polystyrene', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1869, 0, 'opencell.admin', NULL, 'XDV', now(), NULL, 'Tray, one layer no cover, cardboard', 'Tray, one layer no cover, cardboard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1870, 0, 'opencell.admin', NULL, 'XDW', now(), NULL, 'Tray, two layers no cover, plastic tray', 'Tray, two layers no cover, plastic tray', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1871, 0, 'opencell.admin', NULL, 'XDX', now(), NULL, 'Tray, two layers no cover, wooden', 'Tray, two layers no cover, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1872, 0, 'opencell.admin', NULL, 'XDY', now(), NULL, 'Tray, two layers no cover, cardboard ', 'Tray, two layers no cover, cardboard ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1873, 0, 'opencell.admin', NULL, 'XEC', now(), NULL, 'Bag, plastic ', 'Bag, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1874, 0, 'opencell.admin', NULL, 'XED', now(), NULL, 'Case, with pallet base ', 'Case, with pallet base ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1875, 0, 'opencell.admin', NULL, 'XEE', now(), NULL, 'Case, with pallet base, wooden ', 'Case, with pallet base, wooden ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1876, 0, 'opencell.admin', NULL, 'XEF', now(), NULL, 'Case, with pallet base, cardboard', 'Case, with pallet base, cardboard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1877, 0, 'opencell.admin', NULL, 'XEG', now(), NULL, 'Case, with pallet base, plastic', 'Case, with pallet base, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1878, 0, 'opencell.admin', NULL, 'XEH', now(), NULL, 'Case, with pallet base, metal', 'Case, with pallet base, metal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1879, 0, 'opencell.admin', NULL, 'XEI', now(), NULL, 'Case, isothermic ', 'Case, isothermic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1880, 0, 'opencell.admin', NULL, 'XEN', now(), NULL, 'Envelope ', 'Envelope ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1881, 0, 'opencell.admin', NULL, 'XFB', now(), NULL, 'Flexibag', 'Flexibag', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1882, 0, 'opencell.admin', NULL, 'XFC', now(), NULL, 'Crate, fruit ', 'Crate, fruit ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1883, 0, 'opencell.admin', NULL, 'XFD', now(), NULL, 'Crate, framed', 'Crate, framed', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1884, 0, 'opencell.admin', NULL, 'XFE', now(), NULL, 'Flexitank', 'Flexitank', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1885, 0, 'opencell.admin', NULL, 'XFI', now(), NULL, 'Firkin ', 'Firkin ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1886, 0, 'opencell.admin', NULL, 'XFL', now(), NULL, 'Flask', 'Flask', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1887, 0, 'opencell.admin', NULL, 'XFO', now(), NULL, 'Footlocker ', 'Footlocker ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1888, 0, 'opencell.admin', NULL, 'XFP', now(), NULL, 'Filmpack ', 'Filmpack ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1889, 0, 'opencell.admin', NULL, 'XFR', now(), NULL, 'Frame', 'Frame', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1890, 0, 'opencell.admin', NULL, 'XFT', now(), NULL, 'Foodtainer', 'Foodtainer', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1891, 0, 'opencell.admin', NULL, 'XFW', now(), NULL, 'Cart, flatbed', 'Cart, flatbed', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1892, 0, 'opencell.admin', NULL, 'XFX', now(), NULL, 'Bag, flexible container', 'Bag, flexible container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1893, 0, 'opencell.admin', NULL, 'XGB', now(), NULL, 'Bottle, gas', 'Bottle, gas', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1894, 0, 'opencell.admin', NULL, 'XGI', now(), NULL, 'Girder ', 'Girder ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1895, 0, 'opencell.admin', NULL, 'XGL', now(), NULL, 'Container, gallon', 'Container, gallon', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1896, 0, 'opencell.admin', NULL, 'XGR', now(), NULL, 'Receptacle, glass ', 'Receptacle, glass ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1897, 0, 'opencell.admin', NULL, 'XGU', now(), NULL, 'Tray, containing horizontally stacked flat items', 'Tray, containing horizontally stacked flat items', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1898, 0, 'opencell.admin', NULL, 'XGY', now(), NULL, 'Bag, gunny', 'Bag, gunny', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1899, 0, 'opencell.admin', NULL, 'XGZ', now(), NULL, 'Girders, in bundle/bunch/truss ', 'Girders, in bundle/bunch/truss ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1900, 0, 'opencell.admin', NULL, 'XHA', now(), NULL, 'Basket, with handle, plastic ', 'Basket, with handle, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1901, 0, 'opencell.admin', NULL, 'XHB', now(), NULL, 'Basket, with handle, wooden', 'Basket, with handle, wooden', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1902, 0, 'opencell.admin', NULL, 'XHC', now(), NULL, 'Basket, with handle, cardboard ', 'Basket, with handle, cardboard ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1903, 0, 'opencell.admin', NULL, 'XHG', now(), NULL, 'Hogshead ', 'Hogshead ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1904, 0, 'opencell.admin', NULL, 'XHN', now(), NULL, 'Hanger', 'Hanger', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1905, 0, 'opencell.admin', NULL, 'XHR', now(), NULL, 'Hamper ', 'Hamper ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1906, 0, 'opencell.admin', NULL, 'XIA', now(), NULL, 'Package, display, wooden ', 'Package, display, wooden ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1907, 0, 'opencell.admin', NULL, 'XIB', now(), NULL, 'Package, display, cardboard', 'Package, display, cardboard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1908, 0, 'opencell.admin', NULL, 'XIC', now(), NULL, 'Package, display, plastic', 'Package, display, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1909, 0, 'opencell.admin', NULL, 'XID', now(), NULL, 'Package, display, metal', 'Package, display, metal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1910, 0, 'opencell.admin', NULL, 'XIE', now(), NULL, 'Package, show', 'Package, show', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1911, 0, 'opencell.admin', NULL, 'XIF', now(), NULL, 'Package, flow ', 'Package, flow ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1912, 0, 'opencell.admin', NULL, 'XIG', now(), NULL, 'Package, paper wrapped', 'Package, paper wrapped', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1913, 0, 'opencell.admin', NULL, 'XIH', now(), NULL, 'Drum, plastic', 'Drum, plastic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1914, 0, 'opencell.admin', NULL, 'XIK', now(), NULL, 'Package, cardboard, with bottle grip-holes ', 'Package, cardboard, with bottle grip-holes ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1915, 0, 'opencell.admin', NULL, 'XIL', now(), NULL, 'Tray, rigid, lidded stackable (CEN TS 14482:2002)', 'Tray, rigid, lidded stackable (CEN TS 14482:2002)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1916, 0, 'opencell.admin', NULL, 'XIN', now(), NULL, 'Ingot', 'Ingot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1917, 0, 'opencell.admin', NULL, 'XIZ', now(), NULL, 'Ingots, in bundle/bunch/truss', 'Ingots, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1918, 0, 'opencell.admin', NULL, 'XJB', now(), NULL, 'Bag, jumbo', 'Bag, jumbo', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1919, 0, 'opencell.admin', NULL, 'XJC', now(), NULL, 'Jerrican, rectangular', 'Jerrican, rectangular', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1920, 0, 'opencell.admin', NULL, 'XJG', now(), NULL, 'Jug', 'Jug', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1921, 0, 'opencell.admin', NULL, 'XJR', now(), NULL, 'Jar', 'Jar', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1922, 0, 'opencell.admin', NULL, 'XJT', now(), NULL, 'Jutebag', 'Jutebag', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1923, 0, 'opencell.admin', NULL, 'XJY', now(), NULL, 'Jerrican, cylindrical', 'Jerrican, cylindrical', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1924, 0, 'opencell.admin', NULL, 'XKG', now(), NULL, 'Keg', 'Keg', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1925, 0, 'opencell.admin', NULL, 'XKI', now(), NULL, 'Kit', 'Kit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1926, 0, 'opencell.admin', NULL, 'XLE', now(), NULL, 'Luggage', 'Luggage', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1927, 0, 'opencell.admin', NULL, 'XLG', now(), NULL, 'Log', 'Log', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1928, 0, 'opencell.admin', NULL, 'XLT', now(), NULL, 'Lot', 'Lot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1929, 0, 'opencell.admin', NULL, 'XLU', now(), NULL, 'Lug', 'Lug', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1930, 0, 'opencell.admin', NULL, 'XLV', now(), NULL, 'Liftvan', 'Liftvan', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1931, 0, 'opencell.admin', NULL, 'XLZ', now(), NULL, 'Logs, in bundle/bunch/truss', 'Logs, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1932, 0, 'opencell.admin', NULL, 'XMA', now(), NULL, 'Crate, metal', 'Crate, metal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1933, 0, 'opencell.admin', NULL, 'XMB', now(), NULL, 'Bag, multiply', 'Bag, multiply', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1934, 0, 'opencell.admin', NULL, 'XMC', now(), NULL, 'Crate, milk', 'Crate, milk', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1935, 0, 'opencell.admin', NULL, 'XME', now(), NULL, 'Container, metal', 'Container, metal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1936, 0, 'opencell.admin', NULL, 'XMR', now(), NULL, 'Receptacle, metal ', 'Receptacle, metal ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2087, 0, 'opencell.admin', NULL, 'XWB', now(), NULL, 'Wickerbottle ', 'Wickerbottle ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1937, 0, 'opencell.admin', NULL, 'XMS', now(), NULL, 'Sack, multi-wall ', 'Sack, multi-wall ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1938, 0, 'opencell.admin', NULL, 'XMT', now(), NULL, 'Mat', 'Mat', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1939, 0, 'opencell.admin', NULL, 'XMW', now(), NULL, 'Receptacle, plastic wrapped ', 'Receptacle, plastic wrapped ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1940, 0, 'opencell.admin', NULL, 'XMX', now(), NULL, 'Matchbox ', 'Matchbox ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1941, 0, 'opencell.admin', NULL, 'XNA', now(), NULL, 'Not available', 'Not available', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1942, 0, 'opencell.admin', NULL, 'XNE', now(), NULL, 'Unpacked or unpackaged ', 'Unpacked or unpackaged ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1943, 0, 'opencell.admin', NULL, 'XNF', now(), NULL, 'Unpacked or unpackaged, single unit', 'Unpacked or unpackaged, single unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1944, 0, 'opencell.admin', NULL, 'XNG', now(), NULL, 'Unpacked or unpackaged, multiple units', 'Unpacked or unpackaged, multiple units', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1945, 0, 'opencell.admin', NULL, 'XNS', now(), NULL, 'Nest ', 'Nest ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1946, 0, 'opencell.admin', NULL, 'XNT', now(), NULL, 'Net', 'Net', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1947, 0, 'opencell.admin', NULL, 'XNU', now(), NULL, 'Net, tube, plastic ', 'Net, tube, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1948, 0, 'opencell.admin', NULL, 'XNV', now(), NULL, 'Net, tube, textile ', 'Net, tube, textile ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1949, 0, 'opencell.admin', NULL, 'XO1', now(), NULL, 'Two sided cage on wheels with fixing strap', 'Two sided cage on wheels with fixing strap', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1950, 0, 'opencell.admin', NULL, 'XO2', now(), NULL, 'Trolley', 'Trolley', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1951, 0, 'opencell.admin', NULL, 'XO3', now(), NULL, 'Oneway pallet ISO 0 - 1/2 EURO Pallet', 'Oneway pallet ISO 0 - 1/2 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1952, 0, 'opencell.admin', NULL, 'XO4', now(), NULL, 'Oneway pallet ISO 1 - 1/1 EURO Pallet', 'Oneway pallet ISO 1 - 1/1 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1953, 0, 'opencell.admin', NULL, 'XO5', now(), NULL, 'Oneway pallet ISO 2 - 2/1 EURO Pallet', 'Oneway pallet ISO 2 - 2/1 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1954, 0, 'opencell.admin', NULL, 'XO6', now(), NULL, 'Pallet with exceptional dimensions', 'Pallet with exceptional dimensions', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1955, 0, 'opencell.admin', NULL, 'XO7', now(), NULL, 'Wooden pallet  40 cm x 80 cm', 'Wooden pallet  40 cm x 80 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1956, 0, 'opencell.admin', NULL, 'XO8', now(), NULL, 'Plastic pallet SRS 60 cm x 80 cm', 'Plastic pallet SRS 60 cm x 80 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1957, 0, 'opencell.admin', NULL, 'XO9', now(), NULL, 'Plastic pallet SRS 80 cm x 120 cm', 'Plastic pallet SRS 80 cm x 120 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1958, 0, 'opencell.admin', NULL, 'XOA', now(), NULL, 'Pallet, CHEP 40 cm x 60 cm', 'Pallet, CHEP 40 cm x 60 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1959, 0, 'opencell.admin', NULL, 'XOB', now(), NULL, 'Pallet, CHEP 80 cm x 120 cm', 'Pallet, CHEP 80 cm x 120 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1960, 0, 'opencell.admin', NULL, 'XOC', now(), NULL, 'Pallet, CHEP 100 cm x 120 cm', 'Pallet, CHEP 100 cm x 120 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1961, 0, 'opencell.admin', NULL, 'XOD', now(), NULL, 'Pallet, AS 4068-1993', 'Pallet, AS 4068-1993', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1962, 0, 'opencell.admin', NULL, 'XOE', now(), NULL, 'Pallet, ISO T11', 'Pallet, ISO T11', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1963, 0, 'opencell.admin', NULL, 'XOF', now(), NULL, 'Platform, unspecified weight or dimension', 'Platform, unspecified weight or dimension', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1964, 0, 'opencell.admin', NULL, 'XOG', now(), NULL, 'Pallet ISO 0 - 1/2 EURO Pallet', 'Pallet ISO 0 - 1/2 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1965, 0, 'opencell.admin', NULL, 'XOH', now(), NULL, 'Pallet ISO 1 - 1/1 EURO Pallet', 'Pallet ISO 1 - 1/1 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1966, 0, 'opencell.admin', NULL, 'XOI', now(), NULL, 'Pallet ISO 2  2/1 EURO Pallet', 'Pallet ISO 2  2/1 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1967, 0, 'opencell.admin', NULL, 'XOJ', now(), NULL, '1/4 EURO Pallet', '1/4 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1968, 0, 'opencell.admin', NULL, 'XOK', now(), NULL, 'Block', 'Block', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1969, 0, 'opencell.admin', NULL, 'XOL', now(), NULL, '1/8 EURO Pallet', '1/8 EURO Pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1970, 0, 'opencell.admin', NULL, 'XOM', now(), NULL, 'Synthetic pallet ISO 1', 'Synthetic pallet ISO 1', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1971, 0, 'opencell.admin', NULL, 'XON', now(), NULL, 'Synthetic pallet ISO 2', 'Synthetic pallet ISO 2', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1972, 0, 'opencell.admin', NULL, 'XOP', now(), NULL, 'Wholesaler pallet', 'Wholesaler pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1973, 0, 'opencell.admin', NULL, 'XOQ', now(), NULL, 'Pallet 80 X 100 cm', 'Pallet 80 X 100 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1974, 0, 'opencell.admin', NULL, 'XOR', now(), NULL, 'Pallet 60 X 100 cm', 'Pallet 60 X 100 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1975, 0, 'opencell.admin', NULL, 'XOS', now(), NULL, 'Oneway pallet', 'Oneway pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1976, 0, 'opencell.admin', NULL, 'XOT', now(), NULL, 'Octabin', 'Octabin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1977, 0, 'opencell.admin', NULL, 'XOU', now(), NULL, 'Container, outer', 'Container, outer', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1978, 0, 'opencell.admin', NULL, 'XOV', now(), NULL, 'Returnable pallet', 'Returnable pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1979, 0, 'opencell.admin', NULL, 'XOW', now(), NULL, 'Large bag, pallet sized', 'Large bag, pallet sized', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1980, 0, 'opencell.admin', NULL, 'XOX', now(), NULL, 'A wheeled pallet with raised rim (81 x 67 x 135)', 'A wheeled pallet with raised rim (81 x 67 x 135)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1981, 0, 'opencell.admin', NULL, 'XOY', now(), NULL, 'A Wheeled pallet with raised rim (81 x 72 x 135)', 'A Wheeled pallet with raised rim (81 x 72 x 135)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1982, 0, 'opencell.admin', NULL, 'XOZ', now(), NULL, 'Wheeled pallet with raised rim ( 81 x 60 x 16)', 'Wheeled pallet with raised rim ( 81 x 60 x 16)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1983, 0, 'opencell.admin', NULL, 'XP1', now(), NULL, 'CHEP pallet 60 cm x 80 cm ', 'CHEP pallet 60 cm x 80 cm ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1984, 0, 'opencell.admin', NULL, 'XP2', now(), NULL, 'Pan', 'Pan', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1985, 0, 'opencell.admin', NULL, 'XP3', now(), NULL, 'LPR pallet 60 cm x 80 cm', 'LPR pallet 60 cm x 80 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1986, 0, 'opencell.admin', NULL, 'XP4', now(), NULL, 'LPR pallet 80 cm x 120 cm', 'LPR pallet 80 cm x 120 cm', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1987, 0, 'opencell.admin', NULL, 'XPA', now(), NULL, 'Packet ', 'Packet ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1988, 0, 'opencell.admin', NULL, 'XPB', now(), NULL, 'Pallet, box Combined open-ended box and pallet', 'Pallet, box Combined open-ended box and pallet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1989, 0, 'opencell.admin', NULL, 'XPC', now(), NULL, 'Parcel ', 'Parcel ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1990, 0, 'opencell.admin', NULL, 'XPD', now(), NULL, 'Pallet, modular, collars 80cms * 100cms ', 'Pallet, modular, collars 80cms * 100cms ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1991, 0, 'opencell.admin', NULL, 'XPE', now(), NULL, 'Pallet, modular, collars 80cms * 120cms ', 'Pallet, modular, collars 80cms * 120cms ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1992, 0, 'opencell.admin', NULL, 'XPF', now(), NULL, 'Pen ', 'Pen ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1993, 0, 'opencell.admin', NULL, 'XPG', now(), NULL, 'Plate', 'Plate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1994, 0, 'opencell.admin', NULL, 'XPH', now(), NULL, 'Pitcher', 'Pitcher', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1995, 0, 'opencell.admin', NULL, 'XPI', now(), NULL, 'Pipe ', 'Pipe ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1996, 0, 'opencell.admin', NULL, 'XPJ', now(), NULL, 'Punnet', 'Punnet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1997, 0, 'opencell.admin', NULL, 'XPK', now(), NULL, 'Package', 'Package', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1998, 0, 'opencell.admin', NULL, 'XPL', now(), NULL, 'Pail ', 'Pail ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-1999, 0, 'opencell.admin', NULL, 'XPN', now(), NULL, 'Plank', 'Plank', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2000, 0, 'opencell.admin', NULL, 'XPO', now(), NULL, 'Pouch', 'Pouch', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2001, 0, 'opencell.admin', NULL, 'XPP', now(), NULL, 'Piece', 'Piece', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2002, 0, 'opencell.admin', NULL, 'XPR', now(), NULL, 'Receptacle, plastic ', 'Receptacle, plastic ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2003, 0, 'opencell.admin', NULL, 'XPT', now(), NULL, 'Pot', 'Pot', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2004, 0, 'opencell.admin', NULL, 'XPU', now(), NULL, 'Tray ', 'Tray ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2005, 0, 'opencell.admin', NULL, 'XPV', now(), NULL, 'Pipes, in bundle/bunch/truss ', 'Pipes, in bundle/bunch/truss ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2006, 0, 'opencell.admin', NULL, 'XPX', now(), NULL, 'Pallet ', 'Pallet ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2007, 0, 'opencell.admin', NULL, 'XPY', now(), NULL, 'Plates, in bundle/bunch/truss', 'Plates, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2008, 0, 'opencell.admin', NULL, 'XPZ', now(), NULL, 'Planks, in bundle/bunch/truss', 'Planks, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2009, 0, 'opencell.admin', NULL, 'XQA', now(), NULL, 'Drum, steel, non-removable head', 'Drum, steel, non-removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2010, 0, 'opencell.admin', NULL, 'XQB', now(), NULL, 'Drum, steel, removable head', 'Drum, steel, removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2011, 0, 'opencell.admin', NULL, 'XQC', now(), NULL, 'Drum, aluminium, non-removable head', 'Drum, aluminium, non-removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2012, 0, 'opencell.admin', NULL, 'XQD', now(), NULL, 'Drum, aluminium, removable head', 'Drum, aluminium, removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2013, 0, 'opencell.admin', NULL, 'XQF', now(), NULL, 'Drum, plastic, non-removable head', 'Drum, plastic, non-removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2014, 0, 'opencell.admin', NULL, 'XQG', now(), NULL, 'Drum, plastic, removable head', 'Drum, plastic, removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2015, 0, 'opencell.admin', NULL, 'XQH', now(), NULL, 'Barrel, wooden, bung type', 'Barrel, wooden, bung type', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2016, 0, 'opencell.admin', NULL, 'XQJ', now(), NULL, 'Barrel, wooden, removable head ', 'Barrel, wooden, removable head ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2017, 0, 'opencell.admin', NULL, 'XQK', now(), NULL, 'Jerrican, steel, non-removable head', 'Jerrican, steel, non-removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2018, 0, 'opencell.admin', NULL, 'XQL', now(), NULL, 'Jerrican, steel, removable head', 'Jerrican, steel, removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2019, 0, 'opencell.admin', NULL, 'XQM', now(), NULL, 'Jerrican, plastic, non-removable head', 'Jerrican, plastic, non-removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2020, 0, 'opencell.admin', NULL, 'XQN', now(), NULL, 'Jerrican, plastic, removable head', 'Jerrican, plastic, removable head', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2021, 0, 'opencell.admin', NULL, 'XQP', now(), NULL, 'Box, wooden, natural wood, ordinary', 'Box, wooden, natural wood, ordinary', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2022, 0, 'opencell.admin', NULL, 'XQQ', now(), NULL, 'Box, wooden, natural wood, with sift proof walls', 'Box, wooden, natural wood, with sift proof walls', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2023, 0, 'opencell.admin', NULL, 'XQR', now(), NULL, 'Box, plastic, expanded ', 'Box, plastic, expanded ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2024, 0, 'opencell.admin', NULL, 'XQS', now(), NULL, 'Box, plastic, solid', 'Box, plastic, solid', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2025, 0, 'opencell.admin', NULL, 'XRD', now(), NULL, 'Rod', 'Rod', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2026, 0, 'opencell.admin', NULL, 'XRG', now(), NULL, 'Ring ', 'Ring ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2027, 0, 'opencell.admin', NULL, 'XRJ', now(), NULL, 'Rack, clothing hanger', 'Rack, clothing hanger', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2028, 0, 'opencell.admin', NULL, 'XRK', now(), NULL, 'Rack ', 'Rack ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2029, 0, 'opencell.admin', NULL, 'XRL', now(), NULL, 'Reel ', 'Reel ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2030, 0, 'opencell.admin', NULL, 'XRO', now(), NULL, 'Roll ', 'Roll ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2031, 0, 'opencell.admin', NULL, 'XRT', now(), NULL, 'Rednet ', 'Rednet ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2032, 0, 'opencell.admin', NULL, 'XRZ', now(), NULL, 'Rods, in bundle/bunch/truss', 'Rods, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2033, 0, 'opencell.admin', NULL, 'XSA', now(), NULL, 'Sack ', 'Sack ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2034, 0, 'opencell.admin', NULL, 'XSB', now(), NULL, 'Slab', 'Slab', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2035, 0, 'opencell.admin', NULL, 'XSC', now(), NULL, 'Crate, shallow ', 'Crate, shallow ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2036, 0, 'opencell.admin', NULL, 'XSD', now(), NULL, 'Spindle', 'Spindle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2037, 0, 'opencell.admin', NULL, 'XSE', now(), NULL, 'Sea-chest', 'Sea-chest', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2038, 0, 'opencell.admin', NULL, 'XSH', now(), NULL, 'Sachet ', 'Sachet ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2039, 0, 'opencell.admin', NULL, 'XSI', now(), NULL, 'Skid ', 'Skid ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2040, 0, 'opencell.admin', NULL, 'XSK', now(), NULL, 'Case, skeleton ', 'Case, skeleton ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2041, 0, 'opencell.admin', NULL, 'XSL', now(), NULL, 'Slipsheet ', 'Slipsheet ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2042, 0, 'opencell.admin', NULL, 'XSM', now(), NULL, 'Sheetmetal ', 'Sheetmetal ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2043, 0, 'opencell.admin', NULL, 'XSO', now(), NULL, 'Spool ', 'Spool ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2044, 0, 'opencell.admin', NULL, 'XSP', now(), NULL, 'Sheet, plastic wrapping', 'Sheet, plastic wrapping', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2045, 0, 'opencell.admin', NULL, 'XSS', now(), NULL, 'Case, steel', 'Case, steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2046, 0, 'opencell.admin', NULL, 'XST', now(), NULL, 'Sheet', 'Sheet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2047, 0, 'opencell.admin', NULL, 'XSU', now(), NULL, 'Suitcase ', 'Suitcase ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2048, 0, 'opencell.admin', NULL, 'XSV', now(), NULL, 'Envelope, steel', 'Envelope, steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2049, 0, 'opencell.admin', NULL, 'XSW', now(), NULL, 'Shrinkwrapped  ', 'Shrinkwrapped  ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2050, 0, 'opencell.admin', NULL, 'XSX', now(), NULL, 'Set', 'Set', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2051, 0, 'opencell.admin', NULL, 'XSY', now(), NULL, 'Sleeve', 'Sleeve', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2052, 0, 'opencell.admin', NULL, 'XSZ', now(), NULL, 'Sheets, in bundle/bunch/truss', 'Sheets, in bundle/bunch/truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2053, 0, 'opencell.admin', NULL, 'XT1', now(), NULL, 'Tablet', 'Tablet', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2054, 0, 'opencell.admin', NULL, 'XTB', now(), NULL, 'Tub', 'Tub', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2055, 0, 'opencell.admin', NULL, 'XTC', now(), NULL, 'Tea-chest', 'Tea-chest', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2056, 0, 'opencell.admin', NULL, 'XTD', now(), NULL, 'Tube, collapsible', 'Tube, collapsible', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2057, 0, 'opencell.admin', NULL, 'XTE', now(), NULL, 'Tyre', 'Tyre', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2058, 0, 'opencell.admin', NULL, 'XTG', now(), NULL, 'Tank container, generic', 'Tank container, generic', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2059, 0, 'opencell.admin', NULL, 'XTI', now(), NULL, 'Tierce', 'Tierce', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2060, 0, 'opencell.admin', NULL, 'XTK', now(), NULL, 'Tank, rectangular', 'Tank, rectangular', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2061, 0, 'opencell.admin', NULL, 'XTL', now(), NULL, 'Tub, with lid', 'Tub, with lid', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2062, 0, 'opencell.admin', NULL, 'XTN', now(), NULL, 'Tin', 'Tin', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2063, 0, 'opencell.admin', NULL, 'XTO', now(), NULL, 'Tun', 'Tun', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2064, 0, 'opencell.admin', NULL, 'XTR', now(), NULL, 'Trunk', 'Trunk', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2065, 0, 'opencell.admin', NULL, 'XTS', now(), NULL, 'Truss', 'Truss', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2066, 0, 'opencell.admin', NULL, 'XTT', now(), NULL, 'Bag, tote', 'Bag, tote', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2067, 0, 'opencell.admin', NULL, 'XTU', now(), NULL, 'Tube ', 'Tube ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2068, 0, 'opencell.admin', NULL, 'XTV', now(), NULL, 'Tube, with nozzle ', 'Tube, with nozzle ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2069, 0, 'opencell.admin', NULL, 'XTW', now(), NULL, 'Pallet, triwall', 'Pallet, triwall', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2070, 0, 'opencell.admin', NULL, 'XTY', now(), NULL, 'Tank, cylindrical', 'Tank, cylindrical', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2071, 0, 'opencell.admin', NULL, 'XTZ', now(), NULL, 'Tubes, in bundle/bunch/truss ', 'Tubes, in bundle/bunch/truss ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2072, 0, 'opencell.admin', NULL, 'XUC', now(), NULL, 'Uncaged ', 'Uncaged ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2073, 0, 'opencell.admin', NULL, 'XUN', now(), NULL, 'Unit', 'Unit', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2074, 0, 'opencell.admin', NULL, 'XVA', now(), NULL, 'Vat', 'Vat', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2075, 0, 'opencell.admin', NULL, 'XVG', now(), NULL, 'Bulk, gas (at 1031 mbar and 15°C)', 'Bulk, gas (at 1031 mbar and 15°C)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2076, 0, 'opencell.admin', NULL, 'XVI', now(), NULL, 'Vial ', 'Vial ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2077, 0, 'opencell.admin', NULL, 'XVK', now(), NULL, 'Vanpack ', 'Vanpack ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2078, 0, 'opencell.admin', NULL, 'XVL', now(), NULL, 'Bulk, liquid ', 'Bulk, liquid ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2079, 0, 'opencell.admin', NULL, 'XVN', now(), NULL, 'Vehicle', 'Vehicle', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2080, 0, 'opencell.admin', NULL, 'XVO', now(), NULL, 'Bulk, solid, large particles (nodules) ', 'Bulk, solid, large particles (nodules) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2081, 0, 'opencell.admin', NULL, 'XVP', now(), NULL, 'Vacuum-packed', 'Vacuum-packed', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2082, 0, 'opencell.admin', NULL, 'XVQ', now(), NULL, 'Bulk, liquefied gas (at abnormal temperature/pressure) ', 'Bulk, liquefied gas (at abnormal temperature/pressure) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2083, 0, 'opencell.admin', NULL, 'XVR', now(), NULL, 'Bulk, solid, granular particles (grains) ', 'Bulk, solid, granular particles (grains) ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2084, 0, 'opencell.admin', NULL, 'XVS', now(), NULL, 'Bulk, scrap metal', 'Bulk, scrap metal', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2085, 0, 'opencell.admin', NULL, 'XVY', now(), NULL, 'Bulk, solid, fine particles (powders)', 'Bulk, solid, fine particles (powders)', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2086, 0, 'opencell.admin', NULL, 'XWA', now(), NULL, 'Intermediate bulk container', 'Intermediate bulk container', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2088, 0, 'opencell.admin', NULL, 'XWC', now(), NULL, 'Intermediate bulk container, steel ', 'Intermediate bulk container, steel ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2089, 0, 'opencell.admin', NULL, 'XWD', now(), NULL, 'Intermediate bulk container, aluminium ', 'Intermediate bulk container, aluminium ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2090, 0, 'opencell.admin', NULL, 'XWF', now(), NULL, 'Intermediate bulk container, metal ', 'Intermediate bulk container, metal ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2091, 0, 'opencell.admin', NULL, 'XWG', now(), NULL, 'Intermediate bulk container, steel, pressurised > 10 kpa', 'Intermediate bulk container, steel, pressurised > 10 kpa', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2092, 0, 'opencell.admin', NULL, 'XWH', now(), NULL, 'Intermediate bulk container, aluminium, pressurised > 10 kpa', 'Intermediate bulk container, aluminium, pressurised > 10 kpa', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2093, 0, 'opencell.admin', NULL, 'XWJ', now(), NULL, 'Intermediate bulk container, metal, pressure 10 kpa ', 'Intermediate bulk container, metal, pressure 10 kpa ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2094, 0, 'opencell.admin', NULL, 'XWK', now(), NULL, 'Intermediate bulk container, steel, liquid ', 'Intermediate bulk container, steel, liquid ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2095, 0, 'opencell.admin', NULL, 'XWL', now(), NULL, 'Intermediate bulk container, aluminium, liquid ', 'Intermediate bulk container, aluminium, liquid ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2096, 0, 'opencell.admin', NULL, 'XWM', now(), NULL, 'Intermediate bulk container, metal, liquid ', 'Intermediate bulk container, metal, liquid ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2097, 0, 'opencell.admin', NULL, 'XWN', now(), NULL, 'Intermediate bulk container, woven plastic, without coat/liner ', 'Intermediate bulk container, woven plastic, without coat/liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2098, 0, 'opencell.admin', NULL, 'XWP', now(), NULL, 'Intermediate bulk container, woven plastic, coated ', 'Intermediate bulk container, woven plastic, coated ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2099, 0, 'opencell.admin', NULL, 'XWQ', now(), NULL, 'Intermediate bulk container, woven plastic, with liner ', 'Intermediate bulk container, woven plastic, with liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2100, 0, 'opencell.admin', NULL, 'XWR', now(), NULL, 'Intermediate bulk container, woven plastic, coated and liner ', 'Intermediate bulk container, woven plastic, coated and liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2101, 0, 'opencell.admin', NULL, 'XWS', now(), NULL, 'Intermediate bulk container, plastic film', 'Intermediate bulk container, plastic film', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2102, 0, 'opencell.admin', NULL, 'XWT', now(), NULL, 'Intermediate bulk container, textile with out coat/liner ', 'Intermediate bulk container, textile with out coat/liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2103, 0, 'opencell.admin', NULL, 'XWU', now(), NULL, 'Intermediate bulk container, natural wood, with inner liner', 'Intermediate bulk container, natural wood, with inner liner', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2104, 0, 'opencell.admin', NULL, 'XWV', now(), NULL, 'Intermediate bulk container, textile, coated ', 'Intermediate bulk container, textile, coated ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2105, 0, 'opencell.admin', NULL, 'XWW', now(), NULL, 'Intermediate bulk container, textile, with liner ', 'Intermediate bulk container, textile, with liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2106, 0, 'opencell.admin', NULL, 'XWX', now(), NULL, 'Intermediate bulk container, textile, coated and liner ', 'Intermediate bulk container, textile, coated and liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2107, 0, 'opencell.admin', NULL, 'XWY', now(), NULL, 'Intermediate bulk container, plywood, with inner liner ', 'Intermediate bulk container, plywood, with inner liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2108, 0, 'opencell.admin', NULL, 'XWZ', now(), NULL, 'Intermediate bulk container, reconstituted wood, with inner liner', 'Intermediate bulk container, reconstituted wood, with inner liner', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2109, 0, 'opencell.admin', NULL, 'XXA', now(), NULL, 'Bag, woven plastic, without inner coat/liner ', 'Bag, woven plastic, without inner coat/liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2110, 0, 'opencell.admin', NULL, 'XXB', now(), NULL, 'Bag, woven plastic, sift proof ', 'Bag, woven plastic, sift proof ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2111, 0, 'opencell.admin', NULL, 'XXC', now(), NULL, 'Bag, woven plastic, water resistant', 'Bag, woven plastic, water resistant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2112, 0, 'opencell.admin', NULL, 'XXD', now(), NULL, 'Bag, plastics film ', 'Bag, plastics film ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2113, 0, 'opencell.admin', NULL, 'XXF', now(), NULL, 'Bag, textile, without inner coat/liner ', 'Bag, textile, without inner coat/liner ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2114, 0, 'opencell.admin', NULL, 'XXG', now(), NULL, 'Bag, textile, sift proof ', 'Bag, textile, sift proof ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2115, 0, 'opencell.admin', NULL, 'XXH', now(), NULL, 'Bag, textile, water resistant', 'Bag, textile, water resistant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2116, 0, 'opencell.admin', NULL, 'XXJ', now(), NULL, 'Bag, paper, multi-wall ', 'Bag, paper, multi-wall ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2117, 0, 'opencell.admin', NULL, 'XXK', now(), NULL, 'Bag, paper, multi-wall, water resistant', 'Bag, paper, multi-wall, water resistant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2118, 0, 'opencell.admin', NULL, 'XYA', now(), NULL, 'Composite packaging, plastic receptacle in steel drum', 'Composite packaging, plastic receptacle in steel drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2119, 0, 'opencell.admin', NULL, 'XYB', now(), NULL, 'Composite packaging, plastic receptacle in steel crate box', 'Composite packaging, plastic receptacle in steel crate box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2120, 0, 'opencell.admin', NULL, 'XYC', now(), NULL, 'Composite packaging, plastic receptacle in aluminium drum', 'Composite packaging, plastic receptacle in aluminium drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2121, 0, 'opencell.admin', NULL, 'XYD', now(), NULL, 'Composite packaging, plastic receptacle in aluminium crate', 'Composite packaging, plastic receptacle in aluminium crate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2122, 0, 'opencell.admin', NULL, 'XYF', now(), NULL, 'Composite packaging, plastic receptacle in wooden box', 'Composite packaging, plastic receptacle in wooden box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2123, 0, 'opencell.admin', NULL, 'XYG', now(), NULL, 'Composite packaging, plastic receptacle in plywood drum', 'Composite packaging, plastic receptacle in plywood drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2124, 0, 'opencell.admin', NULL, 'XYH', now(), NULL, 'Composite packaging, plastic receptacle in plywood box ', 'Composite packaging, plastic receptacle in plywood box ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2125, 0, 'opencell.admin', NULL, 'XYJ', now(), NULL, 'Composite packaging, plastic receptacle in fibre drum', 'Composite packaging, plastic receptacle in fibre drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2126, 0, 'opencell.admin', NULL, 'XYK', now(), NULL, 'Composite packaging, plastic receptacle in fibreboard box', 'Composite packaging, plastic receptacle in fibreboard box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2127, 0, 'opencell.admin', NULL, 'XYL', now(), NULL, 'Composite packaging, plastic receptacle in plastic drum', 'Composite packaging, plastic receptacle in plastic drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2128, 0, 'opencell.admin', NULL, 'XYM', now(), NULL, 'Composite packaging, plastic receptacle in solid plastic box', 'Composite packaging, plastic receptacle in solid plastic box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2129, 0, 'opencell.admin', NULL, 'XYN', now(), NULL, 'Composite packaging, glass receptacle in steel drum', 'Composite packaging, glass receptacle in steel drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2130, 0, 'opencell.admin', NULL, 'XYP', now(), NULL, 'Composite packaging, glass receptacle in steel crate box', 'Composite packaging, glass receptacle in steel crate box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2131, 0, 'opencell.admin', NULL, 'XYQ', now(), NULL, 'Composite packaging, glass receptacle in aluminium drum', 'Composite packaging, glass receptacle in aluminium drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2132, 0, 'opencell.admin', NULL, 'XYR', now(), NULL, 'Composite packaging, glass receptacle in aluminium crate', 'Composite packaging, glass receptacle in aluminium crate', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2133, 0, 'opencell.admin', NULL, 'XYS', now(), NULL, 'Composite packaging, glass receptacle in wooden box', 'Composite packaging, glass receptacle in wooden box', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2134, 0, 'opencell.admin', NULL, 'XYT', now(), NULL, 'Composite packaging, glass receptacle in plywood drum', 'Composite packaging, glass receptacle in plywood drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2135, 0, 'opencell.admin', NULL, 'XYV', now(), NULL, 'Composite packaging, glass receptacle in wickerwork hamper', 'Composite packaging, glass receptacle in wickerwork hamper', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2136, 0, 'opencell.admin', NULL, 'XYW', now(), NULL, 'Composite packaging, glass receptacle in fibre drum', 'Composite packaging, glass receptacle in fibre drum', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2137, 0, 'opencell.admin', NULL, 'XYX', now(), NULL, 'Composite packaging, glass receptacle in fibreboard box ', 'Composite packaging, glass receptacle in fibreboard box ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2138, 0, 'opencell.admin', NULL, 'XYY', now(), NULL, 'Composite packaging, glass receptacle in expandable plastic pack', 'Composite packaging, glass receptacle in expandable plastic pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2139, 0, 'opencell.admin', NULL, 'XYZ', now(), NULL, 'Composite packaging, glass receptacle in solid plastic pack', 'Composite packaging, glass receptacle in solid plastic pack', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2140, 0, 'opencell.admin', NULL, 'XZA', now(), NULL, 'Intermediate bulk container, paper, multi-wall ', 'Intermediate bulk container, paper, multi-wall ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2141, 0, 'opencell.admin', NULL, 'XZB', now(), NULL, 'Bag, large ', 'Bag, large ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2142, 0, 'opencell.admin', NULL, 'XZC', now(), NULL, 'Intermediate bulk container, paper, multi-wall, water resistant', 'Intermediate bulk container, paper, multi-wall, water resistant', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2143, 0, 'opencell.admin', NULL, 'XZD', now(), NULL, 'Intermediate bulk container, rigid plastic, with structural equipment, solids', 'Intermediate bulk container, rigid plastic, with structural equipment, solids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2144, 0, 'opencell.admin', NULL, 'XZF', now(), NULL, 'Intermediate bulk container, rigid plastic, freestanding, solids', 'Intermediate bulk container, rigid plastic, freestanding, solids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2145, 0, 'opencell.admin', NULL, 'XZG', now(), NULL, 'Intermediate bulk container, rigid plastic, with structural equipment, pressurised', 'Intermediate bulk container, rigid plastic, with structural equipment, pressurised', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2146, 0, 'opencell.admin', NULL, 'XZH', now(), NULL, 'Intermediate bulk container, rigid plastic, freestanding, pressurised', 'Intermediate bulk container, rigid plastic, freestanding, pressurised', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2147, 0, 'opencell.admin', NULL, 'XZJ', now(), NULL, 'Intermediate bulk container, rigid plastic, with structural equipment, liquids ', 'Intermediate bulk container, rigid plastic, with structural equipment, liquids ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2148, 0, 'opencell.admin', NULL, 'XZK', now(), NULL, 'Intermediate bulk container, rigid plastic, freestanding, liquids', 'Intermediate bulk container, rigid plastic, freestanding, liquids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2149, 0, 'opencell.admin', NULL, 'XZL', now(), NULL, 'Intermediate bulk container, composite, rigid plastic, solids', 'Intermediate bulk container, composite, rigid plastic, solids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2150, 0, 'opencell.admin', NULL, 'XZM', now(), NULL, 'Intermediate bulk container, composite, flexible plastic, solids', 'Intermediate bulk container, composite, flexible plastic, solids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2151, 0, 'opencell.admin', NULL, 'XZN', now(), NULL, 'Intermediate bulk container, composite, rigid plastic, pressurised ', 'Intermediate bulk container, composite, rigid plastic, pressurised ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2152, 0, 'opencell.admin', NULL, 'XZP', now(), NULL, 'Intermediate bulk container, composite, flexible plastic, pressurised', 'Intermediate bulk container, composite, flexible plastic, pressurised', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2153, 0, 'opencell.admin', NULL, 'XZQ', now(), NULL, 'Intermediate bulk container, composite, rigid plastic, liquids', 'Intermediate bulk container, composite, rigid plastic, liquids', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2154, 0, 'opencell.admin', NULL, 'XZR', now(), NULL, 'Intermediate bulk container, composite, flexible plastic, liquids ', 'Intermediate bulk container, composite, flexible plastic, liquids ', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2155, 0, 'opencell.admin', NULL, 'XZS', now(), NULL, 'Intermediate bulk container, composite', 'Intermediate bulk container, composite', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2156, 0, 'opencell.admin', NULL, 'XZT', now(), NULL, 'Intermediate bulk container, fibreboard', 'Intermediate bulk container, fibreboard', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2157, 0, 'opencell.admin', NULL, 'XZU', now(), NULL, 'Intermediate bulk container, flexible', 'Intermediate bulk container, flexible', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2158, 0, 'opencell.admin', NULL, 'XZV', now(), NULL, 'Intermediate bulk container, metal, other than steel', 'Intermediate bulk container, metal, other than steel', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2159, 0, 'opencell.admin', NULL, 'XZW', now(), NULL, 'Intermediate bulk container, natural wood', 'Intermediate bulk container, natural wood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2160, 0, 'opencell.admin', NULL, 'XZX', now(), NULL, 'Intermediate bulk container, plywood', 'Intermediate bulk container, plywood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2161, 0, 'opencell.admin', NULL, 'XZY', now(), NULL, 'Intermediate bulk container, reconstituted wood', 'Intermediate bulk container, reconstituted wood', NULL, 1, NULL);
		INSERT INTO ${db.schema.adapted}CAT_UNIT_OF_MEASURE (id,version,creator,updater,code,created,updated,symbol,description,description_i18n,multiplicator,parent_id) VALUES (-2162, 0, 'opencell.admin', NULL, 'XZZ', now(), NULL, 'Mutually defined ', 'Mutually defined ', NULL, 1, NULL);   
		        
        </sql>
        </changeSet>
        
        <changeSet id="#INTRD-13967_20230215" author="houdad">
		<update tableName="adm_currency">
			<column name="currency_code" value="AFN" />
			<where> id = 1</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="AZN" />
			<where> id = 14</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="BYN" />
			<where> id = 23</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="GHS" />
			<where> id = 62</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="MRU" />
			<where> id = 104</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="STN" />
			<where> id = 134</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="TMT" />
			<where> id = 157</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="ZMW" />
			<where> id = 166</where>
		</update>
		<update tableName="adm_currency">
			<column name="currency_code" value="ZWL" />
			<where> id = 167</where>
		</update>
		<insert tableName="adm_currency">
            <column name="id" valueNumeric="-168" />
            <column name="created" valueDate="2023-02-15 00:04:03.53" />
            <column name="version" valueNumeric="1" />
            <column name="currency_code" value="BOV" />
            <column name="description_en" value="Mvdol" />
            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-169" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="CHE" />
		            <column name="description_en" value="WIR Euro" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-170" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="CHW" />
		            <column name="description_en" value="WIR Franc" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-171" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="CLF" />
		            <column name="description_en" value="Unidad de Fomento" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-172" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="COU" />
		            <column name="description_en" value="Unidad de Valor Real" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-173" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="CUC" />
		            <column name="description_en" value="Peso Convertible" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-174" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="MXV" />
		            <column name="description_en" value="Mexican Unidad de Inversion (UDI)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-175" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="RSD" />
		            <column name="description_en" value="Serbian Dinar" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-176" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="SSP" />
		            <column name="description_en" value="South Sudanese Pound" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-177" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="USN" />
		            <column name="description_en" value="US Dollar (Next day)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-178" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="UYI" />
		            <column name="description_en" value="Uruguay Peso en Unidades Indexadas (UI)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-179" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="UYW" />
		            <column name="description_en" value="Unidad Previsional" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-180" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="VES" />
		            <column name="description_en" value="Bolívar Soberano" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-181" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XAG" />
		            <column name="description_en" value="Silver" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-182" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XBA" />
		            <column name="description_en" value="Bond Markets Unit European Composite Unit (EURCO)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-183" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XBB" />
		            <column name="description_en" value="Bond Markets Unit European Monetary Unit (E.M.U.-6)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-184" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XBC" />
		            <column name="description_en" value="Bond Markets Unit European Unit of Account 9 (E.U.A.-9)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-185" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XBD" />
		            <column name="description_en" value="Bond Markets Unit European Unit of Account 17 (E.U.A.-17)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-186" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XDR" />
		            <column name="description_en" value="SDR (Special Drawing Right)" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-187" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XPD" />
		            <column name="description_en" value="Palladium" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-188" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XPT" />
		            <column name="description_en" value="Platinum" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-189" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XSU" />
		            <column name="description_en" value="Sucre" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-190" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XTS" />
		            <column name="description_en" value="Codes specifically reserved for testing purposes" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-191" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XUA" />
		            <column name="description_en" value="ADB Unit of Account" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
		<insert tableName="adm_currency">
		            <column name="id" valueNumeric="-192" />
		            <column name="created"  valueDate="2023-02-15 00:04:03.53" />
		            <column name="version" valueNumeric="1" />
		            <column name="currency_code" value="XXX" />
		            <column name="description_en" value="The codes assigned for transactions where no currency is involved" />
		            <column name="system_currency" valueNumeric="1" />
		</insert>
	</changeSet>
	
	<changeSet id="#INTRD-13967_20230217" author="houdad">
		<update tableName="adm_currency">
			<column name="description_en" value="Rouble biélorussie" />
			<where> id = 23</where>
		</update>
	</changeSet>
	
	<changeSet id="#INTRD-13968" author="houdad">
	<insert tableName="adm_country">
            <column name="id" valueNumeric="-238" />
            <column name="created" valueDate="2015-03-19 00:04:08.896" />
            <column name="version" valueNumeric="1" />
            <column name="country_code" value="AQ" />
            <column name="description" value="Antarctica" />
			<column name="currency_id" valueNumeric="49" />
			<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-239" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="AX" />
		            <column name="description" value="Åland Islands" />
					<column name="language_id" valueNumeric="30" />
					<column name="currency_id" valueNumeric="5" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-240" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="BL" />
		            <column name="description" value="Saint Barthélemy" />
					<column name="currency_id" valueNumeric="5" />
					<column name="language_id" valueNumeric="12" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-241" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="BQ" />
		            <column name="description" value="Bonaire, Sint Eustatius and Saba" />
					<column name="currency_id" valueNumeric="5" />
					<column name="language_id" valueNumeric="21" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-242" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="SX" />
		            <column name="description" value="Sint Maarten (Dutch part)" />
					<column name="currency_id" valueNumeric="5" />
					<column name="language_id" valueNumeric="21" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-243" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="GG" />
		            <column name="description" value="Guernsey" />
					<column name="currency_id" valueNumeric="65" />
					<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-244" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="IM" />
		            <column name="description" value="Isle of Man" />
					<column name="currency_id" valueNumeric="65" />
					<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-245" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="JE" />
		            <column name="description" value="Jersey" />
					<column name="currency_id" valueNumeric="65" />
					<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-246" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="ME" />
		            <column name="description" value="Montenegro" />
					<column name="currency_id" valueNumeric="5" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-247" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="MF" />
		            <column name="description" value="Saint Martin (French part)" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-248" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="RS" />
		            <column name="description" value="Serbia" />
					<column name="language_id" valueNumeric="27" />
					<column name="currency_id" valueNumeric="5" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-249" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="SS" />
		            <column name="description" value="South Sudan" />
					<column name="currency_id" valueNumeric="-176" />
					<column name="language_id" valueNumeric="2" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-250" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="1A" />
		            <column name="description" value="Kosovo" />
					<column name="language_id" valueNumeric="27" />
					<column name="currency_id" valueNumeric="5" />
		</insert>
		<insert tableName="adm_country">
		            <column name="id" valueNumeric="-251" />
		            <column name="created" valueDate="2015-03-19 00:04:08.896" />
		            <column name="version" valueNumeric="1" />
		            <column name="country_code" value="XI" />
		            <column name="description" value="United Kingdom (Northern Ireland)" />					
					<column name="currency_id" valueNumeric="65" />
					<column name="language_id" valueNumeric="2" />
		</insert>
		</changeSet>

	<changeSet id="INTRD-14137_20230217" author="aeljaouhari">
		<update tableName="com_message_template">
			<column name="htmlcontent">
                <![CDATA[
#{billingAccount.isCompany?billingAccount.description:billingAccount.name.fullName}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode} #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{billingAccount.customerAccount.isCompany?billingAccount.customerAccount.description:billingAccount.name.fullName}<br>
#{billingAccount.customerAccount.address.address1}<br>
#{billingAccount.customerAccount.address.zipCode} #{billingAccount.customerAccount.address.city}<br>
<p>#{billingAccount.customerAccount.seller.address.city}, on #{dayDate}</p>
<p>#{billingAccount.legalEntityType.code},</p>
<p>Please find attached the invoice #{invoice.invoiceNumber} for an amount of #{invoice.netToPay}.</p>
<p>We remain at your disposal in case of any questions. Please accept, Madam / Sir, the assurance of our best regards.</p>
                ]]>
			</column>
			<where>code='EN-Invoice'</where>
		</update>
		<update tableName="com_message_template">
			<column name="htmlcontent">
                <![CDATA[
#{billingAccount.isCompany?billingAccount.description:billingAccount.name.fullName}<br>
#{billingAccount.address.address1}<br>
#{billingAccount.address.zipCode} #{billingAccount.address.city}<br>
#{billingAccount.contactInformation.phone}<br>
<br>
#{billingAccount.customerAccount.isCompany?billingAccount.customerAccount.description:billingAccount.name.fullName}<br>
#{billingAccount.customerAccount.address.address1}<br>
#{billingAccount.customerAccount.address.zipCode} #{billingAccount.customerAccount.address.city}<br>
<p>#{billingAccount.customerAccount.seller.address.city}, le #{dayDate}</p>
<p>#{billingAccount.legalEntityType.code},</p>
<p>Nous vous prions de trouver attaché à cet email la facture #{invoice.invoiceNumber} d’un montant de #{invoice.netToPay}.</p>
<p>Nous restons à votre disposition dans l’hypothèse d’éventuelles questions. Nous vous prions d'agréer l’assurance de nos salutations les meilleures.</p>
                ]]>
			</column>
			<where>code='FR-Invoice'</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-13267_20230220" author="AbdellatifBARI">
        <update tableName="adm_notification">
            <column name="event_type_filter" value="STARTED" />
            <where> code = 'OC_MASS_IMPORT_NOTIFICATION'</where>
        </update>
    </changeSet>
    
    <changeSet id="#INTRD-13867_20230220" author="aeljaouhari">
        <sql>
	        update public.accounting_journal_entry set 
		        trading_currency = (select ac.currency_code from adm_currency ac, billing_trading_currency btc, billing_invoice inv, ar_account_operation aco 
		        	where ac.id = btc.currency_id and inv.trading_currency_id = btc.id and inv.id = aco.invoice_id and aco.id =  accounting_operation_id),
		        converted_amount = (select inv.amount_without_tax from billing_invoice inv, ar_account_operation aco 
		        	where inv.id = aco.invoice_id and aco.id =  accounting_operation_id)
        </sql>
    </changeSet>
    <changeSet id="#INTRD-14122_20230221" author="hichamELHALOUI">
    <insert tableName="cpq_tag_type">
        <column name="id" value="-1"/>
        <column name="created" valueDate="${db.current.time}" />
        <column name="code" value="tunnel"/>
        <column name="description" value="Tunnel"/>
    </insert>
        <insert tableName="cpq_tag">
        <column name="id" value="-1"/>
        <column name="created" valueDate="${db.current.time}" />
        <column name="code" value="featured"/>
        <column name="description" value="Featured"/>
        <column name="tag_type_id" value="-1" />
    </insert>
	
	<update tableName="crm_customer">
		<column name="customer_category_id" valueComputed="(SELECT id FROM crm_customer_category WHERE code = 'CLIENT')" />
		<where>customer_category_id = (SELECT id FROM crm_customer_category WHERE code = 'PROSPECT')</where>
	</update>
    <delete tableName="crm_customer_category">
        <where>code='PROSPECT'</where>
    </delete>
	
    <insert tableName="crm_customer_category">
            <column name="id" valueNumeric="-3" />
            <column name="version" valueNumeric="0" />
            <column name="uuid" value="CCC_B2B" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="B2B" />
            <column name="description" value="B2B" />
            <column name="accounting_code_id" valueComputed="(select id from billing_accounting_code where code = '410000000')" />
            <column name="tax_category_id" valueNumeric="-3" />
    </insert>
    <insert tableName="crm_customer_category">
                <column name="id" valueNumeric="-4" />
                <column name="version" valueNumeric="0" />
                <column name="uuid" value="CCC_regular_account" />
                <column name="created" valueDate="${db.current.time}" />
                <column name="code" value="regular account" />
                <column name="description" value="regular account" />
                <column name="accounting_code_id" valueComputed="(select id from billing_accounting_code where code = '410000000')" />
                <column name="tax_category_id" valueNumeric="-3" />
    </insert>
     <update tableName="billing_invoice_cat">
			<column name="description" value="Security Deposit" />
			<where> code = 'ICAT_SECURITY_DEPOSIT'</where>
		</update>

        <insert tableName="cat_offer_template_category">
                <column name="id" valueNumeric="-1" />
                <column name="version" valueNumeric="0" />
                <column name="created" valueDate="${db.current.time}" />
                <column name="code" value="new" />
                <column name="name" value="New" />
        </insert>
        <insert tableName="cat_offer_template_category">
                <column name="id" valueNumeric="-2" />
                <column name="version" valueNumeric="0" />
                <column name="created" valueDate="${db.current.time}" />
                <column name="code" value="standard" />
                <column name="name" value="Standard" />
        </insert>

         <insert tableName="cat_channel">
                <column name="id" valueNumeric="-1" />
                <column name="version" valueNumeric="0" />
                <column name="created" valueDate="${db.current.time}" />
                <column name="code" value="backoffice" />
                <column name="description" value="Backoffice" />
        </insert>

        <update tableName="crm_provider_pay_methods">
			<column name="payment_method" value="STRIPEDIRECTLINK" />
			<where> payment_method = 'STRIPE'</where>
		</update>

        <update tableName="crm_provider_pay_methods">
			<column name="payment_method" value="PAYPALPAYMENTLINK" />
			<where> payment_method = 'PAYPAL'</where>
		</update>

        <update tableName="adm_currency">
            <column name="symbol" value="$"  />
            <where> currency_code = 'USD'</where>
        </update>
		
		<update tableName="billing_billing_account">
			<column name="legal_entity_type_id" valueComputed="(SELECT id FROM adm_title WHERE code = 'CIE')" />
			<where>legal_entity_type_id = (SELECT id FROM adm_title WHERE code = 'ASSOC')</where>
		</update>
		
        <delete tableName="adm_title">
            <where>code = 'ASSOC'</where>
        </delete>

        <update tableName="adm_title">
            <column name="code" value="Company" />
            <column name="description" value="Company" />
            <where>code = 'CIE'</where>
        </update>

                <insert tableName="adm_title">
            <column name="id" valueNumeric="-8" />
            <column name="version" valueNumeric="0" />

            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="SA" />
            <column name="description" value="French joint-stock company" />
            <column name="is_company" valueNumeric="1" />
            <column name="description_i18n" value='{"FRA":"Société Anonyme","ENG":"French joint-stock company"}' />
        </insert>

         <insert tableName="adm_title">
            <column name="id" valueNumeric="-9" />
            <column name="version" valueNumeric="0" />

            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="SARL" />
            <column name="description" value="French limited liability company" />
            <column name="is_company" valueNumeric="1" />
            <column name="description_i18n" value='{"FRA":"Société a responsabilité limitée","ENG":"French limited liability company"}' />
        </insert>

        <insert tableName="adm_title">
            <column name="id" valueNumeric="-10" />
            <column name="version" valueNumeric="0" />

            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="SAS" />
            <column name="description" value="Simplified joint-stock corporation" />
            <column name="is_company" valueNumeric="1" />
            <column name="description_i18n" value='{"FRA":"Société par actions simplifiée","ENG":"Simplified joint-stock corporation"}' />
        </insert>
        <insert tableName="adm_title">
            <column name="id" valueNumeric="-11" />
            <column name="version" valueNumeric="0" />

            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="PLC" />
            <column name="description" value="Public limited company" />
            <column name="is_company" valueNumeric="1" />
            <column name="description_i18n" value='{"FRA":"société ouverte à responsabilité limitée","ENG":"Public limited company"}' />
        </insert>

        <insert tableName="adm_title">
            <column name="id" valueNumeric="-12" />
            <column name="version" valueNumeric="0" />

            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="code" value="LTD" />
            <column name="description" value="Private company limited by shares" />
            <column name="is_company" valueNumeric="1" />
            <column name="description_i18n" value='{"FRA":"Société privée limité par actions","ENG":"Private company limited by shares"}' />
        </insert>

    </changeSet>
    
    <changeSet id="#INTRD-14122_20230221-FIX" author="hichamELHALOUI">
    	<preConditions onFail="MARK_RAN">
		    <sqlCheck expectedResult="0">
		        SELECT COUNT(1)
		        FROM cat_channel
		        WHERE lower(code)='web'
		    </sqlCheck>
		</preConditions>
	      <insert tableName="cat_channel">
	                <column name="id" valueNumeric="-2" />
	                <column name="version" valueNumeric="0" />
	                <column name="created" valueDate="${db.current.time}" />
	                <column name="code" value="web" />
	                <column name="description" value="Web" />
	        </insert>
     </changeSet>
    
    
    

    <changeSet id="#INTRD-13867_20230301" author="AbdellatifBARI">
        <delete tableName="meveo_job_instance">
            <where>job_category = 'DWH'</where>
        </delete>
    </changeSet>

    <changeSet id="#INTRD-14042_20230227" author="aeljaouhari">
		<insert tableName="meveo_script_instance">
			<column name="id" valueSequenceNext="meveo_script_instance_seq" />
			<column name="version" valueNumeric="0" />
			<column name="code" value="org.meveo.service.script.accountingscheme.NoAccountingEntry" />
			<column name="script">
				<![CDATA[package org.meveo.service.script.accountingscheme;
						public class NoAccountingEntry extends NoAccountingEntryScript {}
				]]>
			</column>
			<column name="src_type" value="JAVA" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="creator" value="OPENCELL.ADMIN" />
			<column name="description" value="This accounting scheme doesn’t produce any accounting entry. Use it on account operation type that should not be exported to accounting."/>
            <column name="description_i18n">
				<![CDATA[{"ENG":"<p>This accounting scheme doesn’t produce any accounting entry.</p><p>Use it on account operation type that should not be exported to accounting.</p>","FRA":"<p>Ce schéma comptable ne produit aucune écriture comptable.</p><p>Utilisez le pour les types d’opérations de compte qui ne doivent pas être exportés vers la comptabilité.</p>"}]]>
			</column>
			<column name="script_instance_cat_id" valueComputed="(SELECT id FROM meveo_script_instance_cat WHERE code='ACCOUNTING_SCHEMES')" />
		</insert>
		<insert tableName="ar_accounting_scheme">
			<column name="id" valueSequenceNext="ar_accounting_scheme_seq" />
			<column name="version" valueNumeric="0" />
			<column name="created" valueDate="${db.current.time}" />
			<column name="code" value="No accounting entry" />
			<column name="description" value="No accounting entry"/>
			<column name="long_description_i18n" value='{"FRA":"Pas d&apos;écriture comptable","ENG":"No accounting entry"}'/>
			<column name="script_instance_id" valueComputed="(SELECT id FROM meveo_script_instance WHERE code='org.meveo.service.script.accountingscheme.NoAccountingEntry')"/>
		</insert>
		<update tableName="ar_occ_template">
			<column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code='No accounting entry')" />
			<where> accounting_scheme_id is null</where>
		</update>
	</changeSet>
    <changeSet id="#INTRD-14433_20230306" author="hichamELHALOUI">
        <update tableName="meveo_script_parameter">
            <column name="mandatory" valueNumeric="0"/>
            <where>code='offers' AND script_instance_id in (SELECT id FROM meveo_script_instance WHERE
                code='org.meveo.service.script.CompareOfferAmount')
            </where>
        </update>
    </changeSet>

   	<changeSet id="INTRD-12103_20221215" author="HichamHANINE">
      <update tableName="meveo_script_instance">
			<column name="description" value="Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator. Only offer from the list actually present on invoice will be tested. If offer list is empty, then all invoice lines will be tested regardless of their offer. For the test to pass, all tested invoice lines must pass the test."/>
			<column name="description_i18n">
				<![CDATA[{"ENG":"<p>Amount of each invoice line coming from offers in the list will be compared to the provided value using the selected operator.</p><p>Only offer from the list actually present on invoice will be tested</p><p>If offer list is empty, then all invoice lines will be tested regardless of their offer.</p><p>For the test to pass, all tested invoice lines must pass the test.</p>",
				"FRA":"<p>Le montant de chaque ligne de facture provenant d’une offre de la liste sera comparé à la valeur indiquée, en utilisant l’opérateur sélectionné.</p><p>Seule les offres de la liste effectivement présentes sur la facture seront testées.</p><p>Si la liste des offres est vide, alors toutes les lignes de facture seront testées, quelle que soit leur offre.</p><p>Pour que le teste passe, toutes les lignes de facture testées doivent passer le test.</p>"}]]>
			</column>
          <where>code = 'org.meveo.service.script.CompareOfferLinesAmount' </where>
      </update>
    </changeSet>
    
   	<changeSet id="#INTRD-14555_20230303" author="aeljaouhari">
        <update tableName="crm_customer_category">
            <column name="default_seller_id" valueComputed="(SELECT min(id) FROM crm_seller WHERE code = 'MAIN_SELLER' OR id >= 1)" />
        </update>
    </changeSet>
	
	<changeSet id="#INTRD-14126_20230307" author="aelmalki">
        <insert tableName="ar_occ_template">
            <column name="id" valueSequenceNext="ar_occ_template_seq" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="code" value="CAN_SD" />
            <column name="description" value="Cancel security deposit" />
            <column name="occ_category" value="CREDIT" />
            <column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
            <column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='165000000')" />
            <column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code = 'Dual entry scheme')" />
            <column name="journal_id" valueComputed="(SELECT id FROM journal WHERE code = 'SAL')" />
        </insert>
    </changeSet>
	
	<changeSet author="HichamHANINE" id="#INTRD-14562_20230308">
		<update tableName="ar_account_operation">
			<column name="converted_amount" valueComputed="amount"/>
			<column name="converted_amount_without_tax" valueComputed="amount_without_tax"/>
			<column name="converted_tax_amount" valueComputed="tax_amount"/>
			<column name="converted_matching_amount" valueComputed="matching_amount"/>
			<column name="converted_un_matching_amount" valueComputed="un_matching_amount"/>
			<column name="transactional_currency" valueComputed="(SELECT id FROM billing_trading_currency btc where currency_id = (SELECT currency_id from crm_provider where id = 1))"></column>
			<where>transactional_currency is null</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-14786_20230309" author="bourras">
        <insert tableName="ar_occ_template">
            <column name="id" valueSequenceNext="ar_occ_template_seq" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="code" value="XCH_GAIN" />
            <column name="description" value="Exchange gain" />
            <column name="occ_category" value="DEBIT" />
            <column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
            <column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='766000000')" />
            <column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code = 'Dual entry scheme')" />
            <column name="journal_id" valueComputed="(SELECT id FROM journal WHERE code = 'MSC')" />
        </insert>
        <insert tableName="ar_occ_template">
            <column name="id" valueSequenceNext="ar_occ_template_seq" />
            <column name="version" valueNumeric="0" />
            <column name="created" valueDate="${db.current.time}" />
            <column name="creator" value="applicationInitializer" />
            <column name="code" value="XCH_LOSS" />
            <column name="description" value="Exchange loss" />
            <column name="occ_category" value="CREDIT" />
            <column name="accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='411000000')" />
            <column name="contra_accounting_code_id" valueComputed="(SELECT id FROM billing_accounting_code WHERE code='666000000')" />
            <column name="accounting_scheme_id" valueComputed="(SELECT id FROM ar_accounting_scheme WHERE code = 'Dual entry scheme')" />
            <column name="journal_id" valueComputed="(SELECT id FROM journal WHERE code = 'MSC')" />
        </insert>
    </changeSet>
    
    <changeSet author="houdad" id="#INTRD-15126_20230322">
		<update tableName="ar_payment_token">
			<column name="token_type" value="PAYPALPAYMENTLINK"/>
			<where> token_type ='PAYPAL'</where>
		</update>
		<update tableName="ar_payment_token">
			<column name="token_type" value="STRIPEDIRECTLINK"/>
			<where> token_type ='STRIPE'</where>
		</update>
	</changeSet>
	
	<changeSet id="#INTRD-15191_20230328" author="aelmalki">
		<update tableName="billing_trading_currency">
			<column name="symbol" value="$" />
			<where>currency_id=49</where>
		</update>
	</changeSet>
	
	<changeSet id="#INTRD-15189_20230327" author="hichamELHALOUI">
        <update tableName="cat_offer_template_category">
            <column name="order_level" valueNumeric="0" />
            <where> id in (-1, -2)</where>
        </update>
    </changeSet>
    
    <changeSet id="#INTRD-15228_20230327" author="hichamELHALOUI">
		<update tableName="adm_currency">
			<column name="symbol" value="$" />
			<where> currency_code = 'USD'</where>
		</update>
	</changeSet>

    <changeSet id="#INTRD-14750_20230331" author="TarikFA.">
        <insert tableName="meveo_job_instance">
            <column name="id" valueNumeric="-65" />
            <column name="version" valueNumeric="0" />
            <column name="disabled" valueNumeric="1" />
            <column name="created" valueDate="2023-03-31 15:51:00.000" />
            <column name="job_category" value="INVOICING" />
            <column name="job_template" value="DuplicateRatedTransactionJob" />
            <column name="code" value="DuplicateRatedTransactionJob" />
            <column name="creator" value="OPENCELL.ADMIN" />
            <column name="uuid" value="DuplicateRatedTransactionJob-UUID" />
        </insert>
    </changeSet>

</databaseChangeLog>
