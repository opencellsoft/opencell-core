/*
 * (C) Copyright 2015-2020 Opencell SAS (https://opencellsoft.com/) and contributors.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
 * Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN
 * OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS
 * IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO
 * THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
 * YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
 *
 * For more information on the GNU Affero General Public License, please consult
 * <https://www.gnu.org/licenses/agpl-3.0.en.html>.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.02.02 at 02:29:16 PM WET 
//

package org.meveo.model.jaxb.customer;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;

import org.meveo.model.jaxb.account.Address;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;attribute name="code" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="description" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="tradingCurrencyCode" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="tradingCountryCode" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="tradingLanguageCode" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}customers"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "code", "description", "tradingCurrencyCode", "tradingCountryCode", "tradingLanguageCode", "address", "currentInvoiceNb", "invoicePrefix",
        "customers" })
@XmlRootElement(name = "seller")
public class Seller {

    @XmlAttribute(name = "code")
    protected String code;
    @XmlAttribute(name = "description")
    protected String description;
    @XmlAttribute(name = "tradingCurrencyCode")
    protected String tradingCurrencyCode;
    @XmlAttribute(name = "tradingCountryCode")
    protected String tradingCountryCode;
    @XmlAttribute(name = "tradingLanguageCode")
    protected String tradingLanguageCode;
    @XmlElement()
    protected Address address;
    @XmlElement()
    protected Long currentInvoiceNb;
    @XmlElement()
    protected String invoicePrefix;

    protected Customers customers;

    public Seller() {
    }

    public Seller(org.meveo.model.admin.Seller seller) {
        if (seller != null) {
            code = seller.getCode();
            description = seller.getDescription();
            tradingCurrencyCode = seller.getTradingCurrency() == null ? "" : seller.getTradingCurrency().getCurrencyCode();
            tradingCountryCode = seller.getTradingCountry() == null ? "" : seller.getTradingCountry().getCountryCode();
            tradingLanguageCode = seller.getTradingLanguage() == null ? "" : seller.getTradingLanguage().getLanguageCode();
            if (seller.getAddress() != null) {
                address = new Address(seller.getAddress());
            }
        }
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getTradingCurrencyCode() {
        return tradingCurrencyCode;
    }

    public void setTradingCurrencyCode(String tradingCurrencyCode) {
        this.tradingCurrencyCode = tradingCurrencyCode;
    }

    public String getTradingCountryCode() {
        return tradingCountryCode;
    }

    public void setTradingCountryCode(String tradingCountryCode) {
        this.tradingCountryCode = tradingCountryCode;
    }

    public String getTradingLanguageCode() {
        return tradingLanguageCode;
    }

    public void setTradingLanguageCode(String tradingLanguageCode) {
        this.tradingLanguageCode = tradingLanguageCode;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public Long getCurrentInvoiceNb() {
        return currentInvoiceNb;
    }

    public void setCurrentInvoiceNb(Long currentInvoiceNb) {
        this.currentInvoiceNb = currentInvoiceNb;
    }

    public String getInvoicePrefix() {
        return invoicePrefix;
    }

    public void setInvoicePrefix(String invoicePrefix) {
        this.invoicePrefix = invoicePrefix;
    }

    public Customers getCustomers() {
        return customers;
    }

    public void setCustomers(Customers customers) {
        this.customers = customers;
    }
}
