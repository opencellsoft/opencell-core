<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

    <persistence-unit name="MeveoAdmin">
        <jta-data-source>java:jboss/datasources/MeveoAdminDatasource</jta-data-source>
        <!-- <jta-data-source>java:jboss/datasources/MeveoAdminMariaDBDatasource</jta-data-source> -->
        <jar-file>lib/opencell-model-${project.version}.jar</jar-file>
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
        <properties>
            <property name="hibernate.archive.autodetection" value="class" />
            <property name="hibernate.hbm2ddl.auto" value="validate" /> <!-- DB structure is managed by liquibase, not hibernate -->
            <property name="hibernate.show_sql" value="false" />
            <property name="format_sql" value="false" />
            <property name="show_sql" value="false" />
            <property name="use_sql_comments" value="false" />
            <!-- <property name="hibernate.default_schema" value="public" /> Disable for Mysql/mariaDB instalation -->
            <property name="hibernate.cache.use_second_level_cache" value="true" />
            <property name="hibernate.cache.use_query_cache" value="true" />
            <property name="hibernate.cache.use_minimal_puts" value="true" />
            <property name="hibernate.cache.default_cache_concurrency_strategy" value="read-write" />
            <property name="hibernate.generate_statistics" value="false" />
            <property name="hibernate.discriminator.ignore_explicit_for_joined" value="true" />
            
            <!-- PG driver 42.5.0 needs this to work with partitioned tables -->
            <property name="hibernate.hbm2dll.extra_physical_table_types" value="PARTITIONED TABLE" />
                                       
            <!-- Group multiple inserts and updates in a single transaction into a single insert or update. https://vladmihalcea.com/how-to-batch-insert-and-update-statements-with-hibernate -->
            <property name="hibernate.jdbc.batch_size" value="500" />
            <property name="hibernate.order_inserts" value="true" />
            <property name="hibernate.order_updates" value="true" />
            <property name="hibernate.jdbc.batch_versioned_data" value="true" />

            <!-- Revert that @ManyToOne wont result in related entity select after the update call -->
            <property name="hibernate.jpa.compliance.proxy" value="false" />

            <property name="hibernate.session_factory.interceptor" value="org.meveo.interceptor.FieldAuditInterceptor" />
            <property name="hibernate.ejb.event.create" value="org.meveo.jpa.event.CreateEventListener" />

            <!--skip duplicate ID_GENERATOR ERROR IN WF17 -->
            <property name="hibernate.jpa.compliance.global_id_generators" value="false" />

            <!-- Additional query functions for accessing JSON -->
            <property name="hibernate.dialect" value="org.meveo.commons.persistence.postgresql.MeveoPostgreSQLDialect" />

            <!-- Flush mode to COMMIT for hibernate -->
            <property name="org.hibernate.flushMode" value="COMMIT"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="MeveoAdminMultiTenant">
        <jta-data-source>java:jboss/datasources/MeveoAdminDatasource</jta-data-source>
        <!-- <jta-data-source>java:jboss/datasources/MeveoAdminMariaDBDatasource</jta-data-source> -->
        <!-- <jar-file>C:\\project\\git\\meveo\\opencell-model\\target\\opencell-model-${project.version}.jar</jar-file> -->
        <!-- <jar-file>C:\\mvn_repository\\com\\opencellsoft\\opencell-model\\5.0.1-SNAPSHOT\\opencell-model-${project.version}.jar</jar-file> -->
        <jar-file>/opt/jboss/opencell-model.jar</jar-file>
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
        <properties>
            <property name="hibernate.archive.autodetection" value="class" />
            <property name="hibernate.show_sql" value="false" />
            <property name="format_sql" value="false" />
            <property name="use_sql_comments" value="false" />
            <property name="hibernate.cache.use_second_level_cache" value="true" />
            <property name="hibernate.cache.use_query_cache" value="true" />
            <!-- <property name="hibernate.default_schema" value="public" /> -->
            <property name="hibernate.cache.use_minimal_puts" value="true" />
            <property name="hibernate.cache.default_cache_concurrency_strategy" value="read-write" />
            <property name="hibernate.cache.region.factory_class" value="org.jboss.as.jpa.hibernate5.infinispan.SharedInfinispanRegionFactory" />
            <property name="hibernate.generate_statistics" value="false" />
            <property name="hibernate.discriminator.ignore_explicit_for_joined" value="true" />
            
            <!-- PG driver 42.5.0 needs this to work with partitioned tables -->
            <property name="hibernate.hbm2dll.extra_physical_table_types" value="PARTITIONED TABLE" />
           
            <!-- Group multiple inserts and updates in a single transaction into a single insert or update. https://vladmihalcea.com/how-to-batch-insert-and-update-statements-with-hibernate -->
            <property name="hibernate.jdbc.batch_size" value="500" />
            <property name="hibernate.order_inserts" value="true" />
            <property name="hibernate.order_updates" value="true" />
            <property name="hibernate.jdbc.batch_versioned_data" value="true" />

            <!-- Revert that @ManyToOne wont result in related entity select after the update call -->
            <property name="hibernate.jpa.compliance.proxy" value="false" />

            <property name="hibernate.session_factory.interceptor" value="org.meveo.interceptor.FieldAuditInterceptor" />
            <property name="hibernate.ejb.event.create" value="org.meveo.jpa.event.CreateEventListener" />

            <!--skip duplicate ID_GENERATOR ERROR IN WF17 -->
            <property name="hibernate.jpa.compliance.global_id_generators" value="false" />

            <!-- Additional query functions for accessing JSON -->
            <property name="hibernate.dialect" value="org.meveo.commons.persistence.postgresql.MeveoPostgreSQLDialect" />

            <!-- Flush mode to COMMIT for hibernate -->
            <property name="org.hibernate.flushMode" value="COMMIT"/>
        </properties>
    </persistence-unit>

</persistence>
