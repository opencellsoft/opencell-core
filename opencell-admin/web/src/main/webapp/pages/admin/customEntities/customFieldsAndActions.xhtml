<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:hftl="http://hftl.org" xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags" xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions" xmlns:o="http://omnifaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:s="http://jboss.org/seam/faces">


    <o:importConstants type="org.meveo.model.crm.custom.CustomFieldMapKeyEnum" />
    <o:importConstants type="org.meveo.model.crm.custom.CustomFieldTypeEnum" />
    <o:importConstants type="org.meveo.model.crm.custom.CustomFieldMatrixColumn.CustomFieldColumnUseEnum" />

    <h:form id="fieldsForm">
        <p:panel width="100" header="#{messages['customizedEntities.fieldsAndActions']}" rendered="#{customEntityTemplateBean.cetPrefix!=null}">
            <p:treeTable id="fields" value="#{customEntityTemplateBean.fields}" var="entity" nodeVar="node" resizableColumns="true">
                <p:column headerText="#{messages['BusinessEntity.code']}">
                    <h:panelGroup styleClass="ui-icon ui-icon-play inlineIcon" rendered="#{node.type == 'action'}" />
                    <h:outputText value="#{entity.code}" rendered="#{node.type == 'field' or node.type == 'action'}" />
                    <h:panelGroup styleClass="ui-icon ui-icon-folder-collapsed inlineIcon" rendered="#{node.type == 'tab'}" />
                    <h:panelGroup styleClass="ui-icon ui-icon-contact inlineIcon" rendered="#{node.type == 'fieldGroup'}" />
                    <h:outputText value="#{entity.label}" rendered="#{node.type == 'tab' or node.type == 'fieldGroup'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.fieldLabel']}">
                    <h:outputText value="#{entity.description}" rendered="#{node.type == 'field'}" />
                    <h:outputText value="#{entity.label}" rendered="#{node.type == 'action'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.fieldType']}" style="width: 8%">
                    <h:outputText value="#{messages[entity.fieldType.label]}" rendered="#{node.type == 'field'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.storageType']}" style="width: 7%">
                    <h:outputText value="#{messages[entity.storageType.label]}" rendered="#{node.type == 'field'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.fieldRequired']}" style="width: 8%">
                    <h:outputText value="#{messages['commons.yes']}" rendered="#{node.type == 'field' and entity.valueRequired != null and entity.valueRequired.toString() == 'true'}" />
                    <h:outputText value="#{messages['commons.no']}" rendered="#{node.type == 'field' and entity.valueRequired != null and entity.valueRequired.toString() == 'false'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.uniqueConstraint']}" style="width: 8%">
                    <h:outputText value="#{messages['commons.yes']}" rendered="#{node.type == 'field' and entity.uniqueConstraint != null and entity.uniqueConstraint.toString() == 'true'}" />
                    <h:outputText value="#{messages['commons.no']}" rendered="#{node.type == 'field' and entity.uniqueConstraint != null and entity.uniqueConstraint.toString() == 'false'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.applicableOnEl.short']}" width="20%">
                    <h:outputText value="#{entity.applicableOnEl}" rendered="#{node.type == 'field' or node.type == 'action'}" />
                </p:column>
                <p:column headerText="#{messages['customFieldTemplate.versionable']}" style="width: 6%">
                    <h:outputText value="#{messages['commons.yes']}" rendered="#{node.type == 'field' and entity.versionable != null and entity.versionable.toString() == 'true'}" />
                    <h:outputText value="#{messages['commons.no']}" rendered="#{node.type == 'field' and entity.versionable != null and entity.versionable.toString() == 'false'}" />
                </p:column>
                <p:column headerText="#{messages['enableEntity.active']}" style="width: 5%">
                    <h:outputText value="#{messages['commons.yes']}" rendered="#{(node.type == 'field' or node.type == 'action') and entity.active != null and entity.active.toString() == 'true'}" />
                    <h:outputText value="#{messages['commons.no']}" rendered="#{(node.type == 'field' or node.type == 'action') and entity.active != null and entity.active.toString() == 'false'}" />
                </p:column>
                <p:column headerText="#{messages['commons.actions']}" width="12%">
                    <h:panelGroup rendered="#{node.type == 'tab'}">
                        <p:commandButton id="editTabBtn" icon="ui-icon-document" oncomplete="PF('groupDialog').show()" update=":groupForm" action="#{customEntityTemplateBean.editFieldGrouping(node)}"
                            rendered="#{!customEntityTemplateBean.customTable}">
                            <!--                             <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" /> -->
                        </p:commandButton>

                        <p:commandButton id="addFieldGroupBtn" icon="ui-icon-contact" action="#{customEntityTemplateBean.newFieldGroup(node)}" oncomplete="PF('groupDialog').show()" update=":groupForm"
                            rendered="#{!customEntityTemplateBean.customTable}" />

                        <p:commandButton id="addFieldInTabBtn" icon="ui-icon-plus" oncomplete="PF('cftDialog').show()" actionListener="#{customFieldTemplateBean.newEntity()}" update=":cftForm">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.backViewSave}" value="customizedEntity" />
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" />
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.guiPosition}" value="#{node.guiPositionForField}" />
                        </p:commandButton>

                        <p:commandButton id="addActionInTabBtn" icon="ui-icon-play" oncomplete="PF('actionDialog').show()" actionListener="#{entityCustomActionBean.newEntity()}" update=":actionForm"
                            rendered="#{!customEntityTemplateBean.customTable}">
                            <f:setPropertyActionListener target="#{entityCustomActionBean.backViewSave}" value="customizedEntity" />
                            <f:setPropertyActionListener target="#{entityCustomActionBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" />
                            <f:setPropertyActionListener target="#{entityCustomActionBean.entity.guiPosition}" value="#{node.guiPositionForAction}" />
                        </p:commandButton>

                        <p:commandButton id="deleteTablink" icon="ui-icon-trash" action="#{customEntityTemplateBean.removeFieldGrouping()}" update=":fieldsForm:fields"
                            rendered="#{node.parent.childCount &gt; 1}">
                            <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" />
                            <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['customizedEntities.confirmDeleteTab']}" icon="ui-icon-alert" />
                        </p:commandButton>

                        <p:commandButton id="moveUpTabBtn" icon="ui-icon-arrowthick-1-n" action="#{customEntityTemplateBean.moveUp(node)}" update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

                        <p:commandButton id="moveDownTabBtn" icon="ui-icon-arrowthick-1-s" action="#{customEntityTemplateBean.moveDown(node)}" update=":fieldsForm:fields"
                            rendered="#{node.canMoveDown()}" />
                    </h:panelGroup>

                    <h:panelGroup rendered="#{node.type == 'fieldGroup'}">
                        <p:commandButton id="editFieldGroupBtn" icon="ui-icon-document" oncomplete="PF('groupDialog').show()" update=":groupForm"
                            action="#{customEntityTemplateBean.editFieldGrouping(node)}">
                            <!--                             <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" /> -->
                        </p:commandButton>

                        <p:commandButton id="addFieldInFieldGroupBtn" icon="ui-icon-plus" oncomplete="PF('cftDialog').show()" actionListener="#{customFieldTemplateBean.newEntity()}" update=":cftForm">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.backViewSave}" value="customizedEntity" />
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" />
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.guiPosition}" value="#{node.guiPositionForField}" />
                        </p:commandButton>

                        <p:commandButton id="deleteFieldGrouplink" icon="ui-icon-trash" action="#{customEntityTemplateBean.removeFieldGrouping()}" update=":fieldsForm:fields">
                            <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" />
                            <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['customizedEntities.confirmDeleteFieldGroup']}" icon="ui-icon-alert" />
                        </p:commandButton>

                        <p:commandButton id="moveUpFgBtn" icon="ui-icon-arrowthick-1-n" action="#{customEntityTemplateBean.moveUp(node)}" update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

                        <p:commandButton id="moveDownFgBtn" icon="ui-icon-arrowthick-1-s" action="#{customEntityTemplateBean.moveDown(node)}" update=":fieldsForm:fields"
                            rendered="#{node.canMoveDown()}" />
                    </h:panelGroup>

                    <h:panelGroup rendered="#{node.type == 'field'}">

                        <p:commandButton id="editFieldBtn" icon="ui-icon-document" oncomplete="PF('cftDialog').show()" action="#{customFieldTemplateBean.initEntity(entity.id)}" update=":cftForm">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.backViewSave}" value="customizedEntity" />
                        </p:commandButton>


                        <p:commandButton id="enablelink" icon="ui-icon-circle-check" rendered="#{entity.disabled}" actionListener="#{customEntityTemplateBean.refreshFields}"
                            action="#{customFieldTemplateBean.enable()}" update="@form">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.enable']}" message="#{messages['commons.confirmEnable']}" />
                        </p:commandButton>
                        <p:commandButton id="disablelink" icon="ui-icon-circle-close" rendered="#{not entity.disabled}" actionListener="#{customEntityTemplateBean.refreshFields}"
                            action="#{customFieldTemplateBean.disable()}" update="@form">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.disable']}" message="#{messages['commons.confirmDisable']}" />
                        </p:commandButton>


                        <p:commandButton id="copylink" icon="ui-icon-copy" update=":copyCFTForm" oncomplete="PF('copyCFTDialog').show()" rendered="#{!customEntityTemplateBean.customTable}">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity}" value="#{entity}" />
                        </p:commandButton>

                        <p:remoteCommand id="remoteDeleteButton" actionListener="#{customFieldTemplateBean.delete}" action="#{customEntityTemplateBean.removeField(node)}" name="fieldsDoDelete"
                            update="@form" />
                        <p:commandButton id="deletelink" icon="ui-icon-trash" oncomplete="fieldsDoDelete()" disabled="#{entity.uniqueConstraint == true}">
                            <f:setPropertyActionListener target="#{customFieldTemplateBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['commons.confirmDelete']}" icon="ui-icon-alert" />
                        </p:commandButton>


                        <p:commandButton id="moveUpFBtn" icon="ui-icon-arrowthick-1-n" action="#{customEntityTemplateBean.moveUp(node)}" update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

                        <p:commandButton id="moveDownFBtn" icon="ui-icon-arrowthick-1-s" action="#{customEntityTemplateBean.moveDown(node)}" update=":fieldsForm:fields"
                            rendered="#{node.canMoveDown()}" />

                    </h:panelGroup>


                    <h:panelGroup rendered="#{node.type == 'action'}">

                        <p:commandButton id="editActionBtn" icon="ui-icon-document" oncomplete="PF('actionDialog').show()" action="#{entityCustomActionBean.initEntity(entity.id)}" update=":actionForm">
                            <f:setPropertyActionListener target="#{entityCustomActionBean.backViewSave}" value="customizedEntity" />
                        </p:commandButton>

                        <p:commandButton id="enableActionlink" icon="ui-icon-circle-check" rendered="#{entity.disabled}" actionListener="#{customEntityTemplateBean.refreshActions}"
                            action="#{entityCustomActionBean.enable()}" update="@form">
                            <f:setPropertyActionListener target="#{entityCustomActionBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.enable']}" message="#{messages['commons.confirmEnable']}" />
                        </p:commandButton>
                        <p:commandButton id="disableActionlink" icon="ui-icon-circle-close" rendered="#{not entity.disabled}" actionListener="#{customEntityTemplateBean.refreshActions}"
                            action="#{entityCustomActionBean.disable()}" update="@form">
                            <f:setPropertyActionListener target="#{entityCustomActionBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.disable']}" message="#{messages['commons.confirmDisable']}" />
                        </p:commandButton>

                        <p:remoteCommand id="remoteDeleteActionButton" actionListener="#{entityCustomActionBean.deleteInlist}" action="#{customEntityTemplateBean.refreshFields}" name="actionsDoDelete"
                            oncomplete="handleDeleteComplete(xhr,status,args)" update="@form" />
                        <p:commandButton id="deleteActionlink" icon="ui-icon-trash" oncomplete="actionsDoDelete()">
                            <f:setPropertyActionListener target="#{entityCustomActionBean.entity}" value="#{entity}" />
                            <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['commons.confirmDelete']}" icon="ui-icon-alert" />
                        </p:commandButton>

                        <p:commandButton id="moveUpABtn" icon="ui-icon-arrowthick-1-n" action="#{customEntityTemplateBean.moveUp(node)}" update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

                        <p:commandButton id="moveDownABtn" icon="ui-icon-arrowthick-1-s" action="#{customEntityTemplateBean.moveDown(node)}" update=":fieldsForm:fields"
                            rendered="#{node.canMoveDown()}" />

                    </h:panelGroup>

                </p:column>
                <f:facet name="footer">
                    <p:commandButton id="addTab" value="#{messages['customizedEntities.addFieldGroup']}" oncomplete="PF('groupDialog').show()" actionListener="#{customEntityTemplateBean.newTab()}"
                        update=":groupForm" rendered="#{!customEntityTemplateBean.customTable}">
                    </p:commandButton>
                    <p:commandButton id="addAction" value="#{messages['customizedEntities.addAction']}" oncomplete="PF('actionDialog').show()" actionListener="#{entityCustomActionBean.newEntity()}"
                        update=":actionForm" rendered="#{!customEntityTemplateBean.customTable}">
                        <f:setPropertyActionListener target="#{entityCustomActionBean.backViewSave}" value="customizedEntity" />
                        <f:setPropertyActionListener target="#{entityCustomActionBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" />
                    </p:commandButton>
                    <!--                         <p:commandButton id="addlink" value="#{messages['customizedEntities.addNewField']}" oncomplete="PF('cftDialog').show()" -->
                    <!--                             actionListener="#{customFieldTemplateBean.newEntity()}" update=":cftForm"> -->
                    <!--                             <f:setPropertyActionListener target="#{customFieldTemplateBean.backViewSave}" value="customizedEntity" /> -->
                    <!--                             <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" /> -->
                    <!--                         </p:commandButton> -->
                </f:facet>
            </p:treeTable>

            <!--  Field related confirmation widgets -->

            <p:confirmDialog id="confirmCanDeleteDialog" styleClass="confirm-dialog" message="#{messages['commons.confirmCanotDelete']}" header="" severity="alert"
                widgetVar="fieldsConfirmCanotDeleteWidget" appendTo="@(body)">
                <p:panel styleClass="confirm-dialog-content">
                    <p:commandButton id="canotdeleteOk" value="#{messages['commons.ok']}" oncomplete="PF('fieldsConfirmCanotDeleteWidget').hide()" update="@this" />
                </p:panel>
            </p:confirmDialog>

            <!-- Action related widgets -->
            <p:remoteCommand id="remoteDeleteActionButton" actionListener="#{entityCustomActionBean.delete}" action="#{customEntityTemplateBean.refreshActions}" name="actionsDoDelete" update="@form" />
        </p:panel>

    </h:form>


    <p:dialog id="copyCFTDialog" header="#{messages['customFieldTemplate.copyCFT.header']}" modal="true" closeOnEscape="true" widgetVar="copyCFTDialog" width="50%" closable="false" appendTo="@(body)">

        <hftl:decorateFormPanel formId="copyCFTForm">
            <ui:define name="fields">
                <hftl:decorateFormField fieldId="fieldToCopy" label="#{messages['customFieldTemplate.copyCFT.fieldToCopy']}">
                    <h:outputText id="fieldToCopy" value="#{customFieldTemplateBean.entity.descriptionAndCode}" styleClass="field-value" />
                </hftl:decorateFormField>

                <hftl:decorateFormField fieldId="copyCftTo" label="#{messages['customFieldTemplate.copyCFT.target']}">
                    <p:autoComplete id="copyCftTo" value="#{customFieldTemplateBean.copyCftTo}" completeMethod="#{customFieldTemplateBean.autocompleteClassNamesHuman}"
                        converter="customFieldAppliesToConverter" required="true" size="50" dropdown="true" dropdownMode="current" />
                </hftl:decorateFormField>
            </ui:define>
            <ui:define name="buttons">
                <p:commandButton value="#{messages['customFieldTemplate.copyCFT.action']}" action="#{customFieldTemplateBean.copyCFT}" update="@form :cftForm:messages"
                    oncomplete="if (args &amp;&amp; !args.validationFailed){PF('copyCFTDialog').hide();}" ajax="true" />
                <p:button value="#{messages['action.cancel']}" onclick="PF('copyCFTDialog').hide(); return false;" />
            </ui:define>
        </hftl:decorateFormPanel>
    </p:dialog>

    <p:dialog id="groupDialog" header="#{messages['customizedEntities.groupDialogHeader']}" modal="true" closeOnEscape="false" widgetVar="groupDialog" width="50%" closable="false" appendTo="@(body)">

        <hftl:decorateFormPanel formId="groupForm" label="#{messages['customizedEntities.'.concat(customEntityTemplateBean.selectedFieldGrouping.type).concat('DialogHeader')]}">
            <ui:define name="fields">
                <hftl:decorateFormField fieldId="parentName" label="#{messages['customizedEntities.parentTabTitle']}"
                    rendered="#{customEntityTemplateBean.selectedFieldGrouping.parent!=null and customEntityTemplateBean.selectedFieldGrouping.parent.type!='root'}">
                    <h:outputText id="parentName" value="#{customEntityTemplateBean.selectedFieldGrouping.parent.data.label}" styleClass="field-value" />
                </hftl:decorateFormField>

                <hftl:formLanguageFields label="#{messages['customizedEntities.title']}" field="label" entity="#{customEntityTemplateBean.selectedFieldGroupingLabel}" required="true" size="50"
                    maxlength="50" componentWidth="100" />

            </ui:define>
            <ui:define name="buttons">
                <p:commandButton value="#{messages['action.save']}" action="#{customEntityTemplateBean.saveUpdateFieldGrouping}" update="@form :fieldsForm:fields"
                    oncomplete="if (args &amp;&amp; !args.validationFailed){PF('groupDialog').hide();}" />
                <p:commandButton value="#{messages['action.cancel']}" action="#{customEntityTemplateBean.cancelFieldGrouping}" oncomplete="PF('groupDialog').hide()" update=":fieldsForm:fields"
                    immediate="true" />
            </ui:define>
        </hftl:decorateFormPanel>
    </p:dialog>


    <p:dialog id="cftDialog" header="#{messages['customFieldTemplate.panel']}" modal="true" closeOnEscape="true" maximizable="true" widgetVar="cftDialog" width="90%" appendTo="@(body)">

        <p:scrollPanel mode="native" style="max-height:550px;">

            <hftl:formPanel formId="cftForm" label="#{messages['customFieldTemplate.panel']}" backingBean="#{customFieldTemplateBean}" showFormButtons="false">

                <f:event listener="#{customFieldTemplateBean.validateMatrixColumns(customFieldTemplateBean.entity)}" type="postValidate" />

                <h:panelGrid columns="2" columnClasses="Wid40 Responsive100 VAlignTop, Wid60 Responsive100 VAlignTop">
                    <h:panelGroup>
                        <hftl:formField label="#{messages['BusinessEntity.code']}" field="code" pattern="[A-Za-z0-9_]+" required="true" allowEdit="false" componentWidth="100" size="56" />
                        <hftl:decorateFormField label="#{messages['customFieldTemplate.dbFieldname']}" rendered="#{!customEntityTemplateBean.entity.transient and customEntityTemplateBean.customTable}">
                            <h:outputText value="#{customFieldTemplateBean.entity.dbFieldname}" />
                        </hftl:decorateFormField>
                        <hftl:formLanguageFields label="#{messages['customFieldTemplate.fieldLabel']}" field="description" required="true" size="50" maxlength="100" componentWidth="100" />
                    </h:panelGroup>

                    <h:panelGroup>
                        <hftl:formField label="#{messages['customFieldTemplate.fieldType']}" field="fieldType" required="true" componentWidth="30"
                            listenerUpdate="listValuesField defaultValueField displayFormat entityClazzField validations versioning storageType_enum matrixColumns childEntityFields protectableField customTableWrapper"
                            actionListenerBean="#{customFieldTemplateBean}" actionListenerMethod="updateDefaultValues" listValues="#{customEntityTemplateBean.fieldTypes}" allowEdit="false" />
                        <!--                 <hftl:formField label="#{messages['customFieldTemplate.appliesTo']}" field="appliesTo" componentWidth="20" edit="false" /> -->
                        <!--                 <hftl:formField label="#{messages['customFieldTemplate.guipos']}" field="guiPosition" componentWidth="20" edit="false" /> -->
                        <hftl:formField label="#{messages['customFieldTemplate.storageType']}" field="storageType" required="true" componentWidth="30"
                            listenerUpdate="@this defaultValueField mapKeyTypeField matrixColumns" actionListenerBean="#{customFieldTemplateBean}" allowEdit="false"
                            actionListenerMethod="updateDefaultValues" rendered="#{!customEntityTemplateBean.customTable}" />
                        <h:panelGroup id="protectableField" rendered="#{!customEntityTemplateBean.customTable}">
                            <c:if test="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}">
                                <hftl:formField label="#{messages['customFieldTemplate.protectable']}" field="protectable" isMessage="true" componentWidth="30" />
                            </c:if>
                        </h:panelGroup>

                        <h:panelGroup id="mapKeyTypeField">
                            <hftl:formField label="#{messages['customFieldTemplate.mapKeyType']}" field="mapKeyType" required="true" componentWidth="30"
                                listValues="#{CustomFieldMapKeyEnum.enumValuesForKey}" rendered="#{customFieldTemplateBean.entity.storageType == 'MAP'}" />
                        </h:panelGroup>

                        <h:panelGroup id="defaultValueField">
                            <hftl:formField label="#{messages['customFieldTemplate.defaultValue']}" field="defaultValue" componentWidth="60" size="55"
                                rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.DATE and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.storageType == 'SINGLE'}"
                                newLine="true" />
                            <hftl:formField label="#{messages['customFieldTemplate.useInheritedAsDefaultValue']}" field="useInheritedAsDefaultValue" componentWidth="40"
                                rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.DATE and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.storageType == 'SINGLE' and !customEntityTemplateBean.customTable}" />
                        </h:panelGroup>

                        <h:panelGroup id="displayFormat">
                            <hftl:formField label="#{messages['customFieldTemplate.displayFormat']}" field="displayFormat" componentWidth="60" size="80"
                                rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LONG or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DATE}" />
                        </h:panelGroup>

                        <hftl:formField label="#{messages['customFieldTemplate.tags']}" field="tags" componentWidth="100" textArea="true" maxlength="2000" rows="1"
                            rendered="#{!customEntityTemplateBean.customTable}" />

                        <h:panelGroup id="entityClazzField">
                            <hftl:formField label="#{messages['entity.notification.classNameFilter']}" field="entityClazz" required="true" size="90" maxlength="255" allowEdit="false"
                                autocompleteBean="#{customFieldTemplateBean}" isAutocomplete="true"
                                autocompleteMethod="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY?'autocompleteClassNamesCEIOnly':'autocompleteClassNames'}"
                                newLine="true" componentWidth="100" listenerUpdate="childEntityFields" actionListenerBean="#{customFieldTemplateBean}" actionListenerMethod="resetChildEntityFields"
                                rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.ENTITY or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY}" />
                        </h:panelGroup>
                        <h:panelGroup id="customTableWrapper">
                            <hftl:formField label="#{messages['customFieldTemplate.customTableCodeEL']}" field="customTableCodeEL" componentWidth="100" maxlength="2000" rows="1"
                                            rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CUSTOM_TABLE_WRAPPER}" required="true"/>
                            <hftl:formField label="#{messages['customFieldTemplate.dataFilterEL']}" field="dataFilterEL" componentWidth="100" maxlength="2000" rows="1"
                                            rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CUSTOM_TABLE_WRAPPER}"/>
                            <hftl:formField label="#{messages['customFieldTemplate.fieldsEL']}" field="fieldsEL" componentWidth="100" maxlength="2000" rows="1"
                                            rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CUSTOM_TABLE_WRAPPER}"/>
                        </h:panelGroup>
                    </h:panelGroup>

                </h:panelGrid>



                <h:panelGroup id="childEntityFields" styleClass="clearLeft">
                    <p:fieldset legend="#{messages['customFieldTemplate.childEntity.fieldset']}" styleClass="clearLeft"
                        rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.entityClazzCetCode!=null}">
                        <hftl:decorateFormField fieldId="cheFields" required="true" label="#{messages['customFieldTemplate.childEntity.fields']}">
                            <p:pickList id="cheFields" value="#{customFieldTemplateBean.childEntityFieldListModel}" required="true" var="item" itemLabel="#{item.label}" itemValue="#{item}"
                            converter="org.jboss.seam.faces.conversion.ObjectConverter">
                            </p:pickList>
                        </hftl:decorateFormField>
                    </p:fieldset>
                </h:panelGroup>

                <h:panelGroup id="matrixColumns" styleClass="clearfix">
                    <p:fieldset legend="#{messages['customFieldTemplate.matrixColumn.columns']}" styleClass="clearLeft" rendered="#{customFieldTemplateBean.entity.storageType == 'MATRIX'}">
                        <p:dataTable editable="true" editMode="cell" value="#{customFieldTemplateBean.entity.matrixColumns}" var="matrixColumn" style="width: 850px" sortBy="#{matrixColumn.columnUse}">
                            <!--                                 <p:ajax event="cellEdit" update=":cftForm:matrixColumns" partialSubmit="true" /> -->
                            <p:headerRow>
                                <p:column colspan="#{customFieldTemplateBean.edit?5:4}">
                                    <h:outputText value="#{messages['customFieldTemplate.matrixColumn.columnUse.'.concat(matrixColumn.columnUse)]}" />
                                </p:column>
                            </p:headerRow>

                            <p:column headerText="#{messages['customFieldTemplate.matrixColumn.position']}" width="50">
                                <h:outputText value="#{matrixColumn.position}" styleClass="field-value" />
                            </p:column>
                            <p:column headerText="#{messages['BusinessEntity.code']}" width="150">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText value="#{matrixColumn.code}" styleClass="field-value" />
                                    </f:facet>
                                    <f:facet name="input">
                                        <h:inputText value="#{matrixColumn.code}" required="true" size="20" maxlength="20" />
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                            <p:column headerText="#{messages['customFieldTemplate.matrixColumn.label']}" width="300">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText value="#{matrixColumn.label}" styleClass="field-value" />
                                    </f:facet>
                                    <f:facet name="input">
                                        <h:inputText value="#{matrixColumn.label}" required="true" size="50" maxlength="50" />
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>
                            <p:column headerText="#{messages['customFieldTemplate.matrixColumn.keyType']}" width="150">
                                <p:cellEditor>
                                    <f:facet name="output">
                                        <h:outputText value="#{messages[matrixColumn.keyType.label]}" styleClass="field-value" />
                                    </f:facet>
                                    <f:facet name="input">
                                        <h:selectOneMenu value="#{matrixColumn.keyType}" required="true">
                                            <f:converter converterId="enumConverter" />
                                            <f:attribute name="GenericEnumConverter.enumType" value="org.meveo.model.crm.custom.CustomFieldMapKeyEnum" />
                                            <f:selectItem />
                                            <f:selectItems
                                                value="#{matrixColumn.columnUse == CustomFieldColumnUseEnum.USE_KEY? CustomFieldMapKeyEnum.enumValuesForKey:CustomFieldMapKeyEnum.enumValuesForValue}"
                                                var="item" itemValue="#{item}" itemLabel="#{messages[item.label]}" />
                                        </h:selectOneMenu>
                                    </f:facet>
                                </p:cellEditor>
                            </p:column>

                            <c:if test="#{customFieldTemplateBean.edit}">
                                <p:column width="50">
                                    <p:commandButton id="deletelink" action="#{customFieldTemplateBean.entity.removeMatrixColumn(matrixColumn)}" partialSubmit="true" icon="ui-icon-trash"
                                        process="@this" update=":cftForm:matrixColumns">
                                    </p:commandButton>
                                </p:column>
                            </c:if>
                            <c:if test="#{customFieldTemplateBean.edit}">
                                <f:facet name="footer" layout="block">
                                    <p:commandButton value="#{messages['customFieldTemplate.addKeyColumn']}" partialSubmit="true" process="@this" update=":cftForm:matrixColumns"
                                        action="#{customFieldTemplateBean.entity.addMatrixKeyColumn()}" />
                                    <p:commandButton value="#{messages['customFieldTemplate.addValueColumn']}" partialSubmit="true" process="@this" update=":cftForm:matrixColumns"
                                        action="#{customFieldTemplateBean.entity.addMatrixValueColumn()}" rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.MULTI_VALUE}" />
                                </f:facet>
                            </c:if>
                        </p:dataTable>
                    </p:fieldset>
                </h:panelGroup>

                <h:panelGroup id="validations">
                    <p:fieldset legend="#{messages['customFieldTemplate.validations']}" styleClass="validations clearfix">
	                    <p:fieldset rendered="#{!customEntityTemplateBean.customTable}">
	                        <h:outputLabel style="margin-left:5px" value="#{messages['customFieldTemplate.hideOnNew']}"/>
	                        <p:selectBooleanButton style="margin-left:10px" value="#{customFieldTemplateBean.entity.hideOnNew}" 
		                    onLabel="#{messages['commons.yes']}" offLabel="#{messages['commons.no']}" />
		                    <h:outputLabel style="margin-left:50px" value="#{messages['customFieldTemplate.allowEdit']}"/>
		                    <p:selectBooleanButton style="margin-left:10px" value="#{customFieldTemplateBean.entity.allowEdit}"
		                    onLabel="#{messages['commons.yes']}" offLabel="#{messages['commons.no']}"/>
		                    <h:outputLabel style="margin-left:50px" value="#{messages['customFieldTemplate.anonymizeGdpr']}" rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}"/>
		                    <p:selectBooleanButton style="margin-left:10px" value="#{customFieldTemplateBean.entity.anonymizeGdpr}" 
		                    onLabel="#{messages['commons.yes']}" offLabel="#{messages['commons.no']}" rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}"/>
                        </p:fieldset>
                        <hftl:formField label="#{messages['customFieldTemplate.fieldRequired']}" field="valueRequired" isMessage="true" componentWidth="10"/>
                        <hftl:formField label="#{messages['customFieldTemplate.applicableOnEl']}" field="applicableOnEl" textArea="true" maxlength="2000" rows="1"
                            rendered="#{!customEntityTemplateBean.customTable}" />
                        <hftl:formField label="#{messages['customFieldTemplate.minValue']}" field="minValue" negativeValue="true" componentWidth="15"
                            rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LONG or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE}" />
                        <hftl:formField label="#{messages[customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING?'customFieldTemplate.maxValueTxt':'customFieldTemplate.maxValue']}"
                            field="maxValue" required="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}"
                            negativeValue="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.STRING}"
                            rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LONG or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}"
                            componentWidth="10" />
                        <hftl:formField label="#{messages['customFieldTemplate.regExp']}" field="regExp" rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}" size="29"
                            componentWidth="19" />
                        <hftl:formField label="#{messages['customFieldTemplate.nbDecimal']}" field="nbDecimal"
                                        rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE}" />
                        <hftl:formField label="#{messages['customFieldTemplate.roundingMode']}" field="roundingMode"
                                        rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE}" />
                    </p:fieldset>
                    <p:fieldset>
                        <p:selectBooleanCheckbox itemLabel="#{messages['customFieldTemplate.uniqueConstraint']}" valueChangeListener="#{customFieldTemplateBean.updateUniqueConstraint}" rendered="#{customEntityTemplateBean.customTable}" value="#{customFieldTemplateBean.entity.uniqueConstraint}"/>
                    </p:fieldset>
                </h:panelGroup>
                <p:fieldset legend="#{messages['customFieldTemplate.versioningAndCaching']}" styleClass="clearfix versioning-and-caching" rendered="#{!customEntityTemplateBean.customTable}">
                    <!-- 					<hftl:formField label="#{messages['customFieldTemplate.cacheValue']}" field="cacheValue" isMessage="true" componentWidth="15" /> -->
                    <h:panelGroup id="versioning" >
                        <hftl:formField label="#{messages['customFieldTemplate.versionable']}" field="versionable" isMessage="true" allowEdit="true" componentWidth="15"
                            listenerUpdate=":cftForm:versionableFields" rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}" />
                        <h:panelGroup id="versionableFields" rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}">
                            <hftl:formField label="#{messages['customFieldTemplate.calendar']}" field="calendar" valueLabelField="code" listBean="#{calendarBean}"
                                rendered="#{customFieldTemplateBean.entity.versionable}" />
                            <!-- 							<hftl:formField label="#{messages['customFieldTemplate.cacheTimeperiod']}" field="cacheValueTimeperiod" rendered="#{customFieldTemplateBean.entity.versionable}" componentWidth="30" /> -->
                            <hftl:formField label="#{messages['customFieldTemplate.triggerEndPeriodEvent']}" field="triggerEndPeriodEvent" rendered="#{customFieldTemplateBean.entity.versionable}"
                                componentWidth="15" />
                        </h:panelGroup>
                    </h:panelGroup>
                </p:fieldset>
                <h:panelGroup id="listValuesField">
                    <p:fieldset legend="#{messages['customFieldTemplate.listValues']}" styleClass="clearLeft" rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LIST or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHECKBOX_LIST}">
                        <hftl:formField label="#{messages['customFieldTemplate.listValues']}" field="listValues" mapKeyLabel="#{messages['commons.value']}" mapValueLabel="#{messages['commons.label']}"
                            componentWidth="75" newLine="true" />
                    </p:fieldset>
                </h:panelGroup>
                <hftl:formField label="#{messages['enableEntity.disabled']}" doNotShowOnNew="true" allowEdit="false" field="disabled" isMessage="true" newLine="true" />
                <hftl:decorateFormField label="#{messages['meveoModule.partOfModules']}" rendered="#{!customFieldTemplateBean.entity.transient}">
                    <h:outputText value="#{customFieldTemplateBean.partOfModules}" />
                </hftl:decorateFormField>
                <ui:param name="buttons" value="true" />
                <ui:define name="buttons">
                    <hf:formButtons backingBean="#{customFieldTemplateBean}" showBackButton="false" ajaxSubmit="true" submitUpdate="@form :fieldsForm:fields" edit="true" killConversationOnBack="false"
                        killConversationOnSave="false" showEditButton="false" showDeleteButton="false">
                        <p:remoteCommand action="#{customEntityTemplateBean.refreshFields}" name="refreshFields" update=":fieldsForm:fields" />
                        <p:commandButton value="#{messages['action.save']}" onclick="delayDisable(this);"
                            oncomplete="if (args &amp;&amp; !args.validationFailed){refreshFields();PF('cftDialog').hide();}" actionListener="#{customFieldTemplateBean.saveOrUpdateForPopup}"
                            icon="ui-icon-check" process="@form" update="@form">
                            <f:param name="edit" value="true" />
                        </p:commandButton>
                        <p:commandButton value="#{messages['commons.disable']}" rendered="#{not empty customFieldTemplateBean.entity.id and customFieldTemplateBean.entity.active}"
                            oncomplete="refreshFields()" action="#{customFieldTemplateBean.disable}" update="@form">
                            <p:confirm header="#{messages['commons.disable']}" message="#{messages['commons.confirmDisable']}" />
                        </p:commandButton>

                        <p:commandButton value="#{messages['commons.enable']}" rendered="#{not empty customFieldTemplateBean.entity.id and customFieldTemplateBean.entity.disabled}"
                            oncomplete="refreshFields()" action="#{customFieldTemplateBean.enable}" update="@form">
                            <p:confirm header="#{messages['commons.enable']}" message="#{messages['commons.confirmEnable']}" />
                        </p:commandButton>
                        <p:commandButton id="deleteButton" icon="ui-icon-trash" value="#{messages['commons.delete']}" action="#{customFieldTemplateBean.delete}"
                            rendered="#{customFieldTemplateBean.entity.id!=null and customFieldTemplateBean.canUserDeleteEntity()}"
                            oncomplete="if (args &amp;&amp; !args.validationFailed){refreshFields();PF('cftDialog').hide();}">
                            <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['commons.confirmDelete']}" icon="ui-icon-alert" />
                        </p:commandButton>

                        <p:commandButton id="copyButton" icon="ui-icon-copy" value="#{messages['customFieldTemplate.copyCFT.action']}"
                            rendered="#{customFieldTemplateBean.entity.id!=null and customFieldTemplateBean.canUserUpdateEntity()}" oncomplete="PF('copyCFTDialog').show()" update=":copyCFTForm">
                        </p:commandButton>

                        <p:commandButton value="#{messages['commons.close']}" onclick="PF('cftDialog').hide()" type="button" process="@this" />

                    </hf:formButtons>

                </ui:define>
            </hftl:formPanel>
        </p:scrollPanel>
    </p:dialog>



    <p:dialog id="actionDialog" header="#{messages['customizedEntities.actionHeader']}" modal="true" closeOnEscape="true" maximizable="true" widgetVar="actionDialog" width="90%" appendTo="@(body)">

        <hftl:formPanel formId="actionForm" label="#{messages['customizedEntities.actionHeader']}" backingBean="#{entityCustomActionBean}" showFormButtons="false">


            <h:panelGrid columns="2" columnClasses="Wid40 Responsive100 VAlignTop, Wid60 Responsive100 VAlignTop">
                <h:panelGroup>
                    <hftl:formField label="#{messages['BusinessEntity.code']}" field="code" required="true" allowEdit="false" componentWidth="100" size="56" />
                    <hftl:formLanguageFields label="#{messages['customizedEntities.actionLabel']}" field="label" required="true" size="50" maxlength="50" componentWidth="100" />
                </h:panelGroup>

                <h:panelGroup>
                    <hftl:formField label="#{messages['BusinessEntity.description']}" field="description" useConverter="false" maxlength="50" componentWidth="100" />
                    <!--                     <hftl:formField label="#{messages['entityCustomAction.guiPosition']}" field="guiPosition" /> -->
                    <hftl:formField label="#{messages['customizedEntities.actionApplicableOnEl']}" field="applicableOnEl" componentWidth="50" textArea="true" maxlength="2000" rows="1" />

                    <hftl:formField id="script" label="#{messages['customizedEntities.actionScript']}" field="script" valueLabelField="code" newLine="true" componentWidth="100" popup="true"
                        popupId="actionScriptPopup" createEditPopup="true" createEditPopupId="scriptDialog" createEditPopupListenerBean="#{entityCustomActionBean}"
                        createEditPopupListenerViewMethod="viewEditScript" createEditPopupListenerNewMethod="newScript" createEditPopupListenerUpdate=":scriptForm" required="true" />

                    <hftl:formField label="#{messages['enableEntity.disabled']}" doNotShowOnNew="true" allowEdit="false" field="disabled" isMessage="true" newLine="true" />
                </h:panelGroup>
            </h:panelGrid>
            <ui:param name="buttons" value="true" />
            <ui:define name="buttons">
                <hf:formButtons backingBean="#{entityCustomActionBean}" showBackButton="false" ajaxSubmit="true" submitUpdate="@form :fieldsForm:fields" edit="true" killConversationOnBack="false"
                    killConversationOnSave="false">
                    <p:commandButton value="#{messages['commons.disable']}" rendered="#{not empty entityCustomActionBean.entity.id and entityCustomActionBean.entity.active}"
                        actionListener="#{customEntityTemplateBean.refreshFields}" action="#{entityCustomActionBean.disable}" update="@form :fieldsForm:fields">
                        <p:confirm header="#{messages['commons.disable']}" message="#{messages['commons.confirmDisable']}" />
                    </p:commandButton>

                    <p:commandButton value="#{messages['commons.enable']}" rendered="#{not empty entityCustomActionBean.entity.id and entityCustomActionBean.entity.disabled}"
                        actionListener="#{customEntityTemplateBean.refreshFields}" action="#{entityCustomActionBean.enable}" update="@form :fieldsForm:fields">
                        <p:confirm header="#{messages['commons.enable']}" message="#{messages['commons.confirmEnable']}" />
                    </p:commandButton>

                    <p:commandButton value="#{messages['commons.close']}" onclick="PF('actionDialog').hide()" actionListener="#{customEntityTemplateBean.refreshFields}" update=":fieldsForm:fields"
                        process="@this" />
                </hf:formButtons>
            </ui:define>
        </hftl:formPanel>
    </p:dialog>

    <hftl:entityPopup id="actionScriptPopup" header="#{messages['scriptInstance.search']}" backingBean="#{scriptInstanceListBean}" searchField1Label="#{messages['BusinessEntity.code']}"
        searchField1="code" searchField2Label="#{messages['BusinessEntity.description']}" searchField2="description" column1Label="#{messages['BusinessEntity.code']}" column1="code"
        column2Label="#{messages['BusinessEntity.description']}" column2="description" selection="#{entityCustomActionBean.entity.script}" updateField=":actionForm:script_entity">
    </hftl:entityPopup>



    <p:dialog id="scriptDialog" header="#{messages['customizedEntities.actionScriptHeader']}" modal="true" closeOnEscape="false" maximizable="true" closable="false" widgetVar="scriptDialog"
        width="90%" height="550px" appendTo="@(body)">

        <p:scrollPanel mode="native" style="max-height:550px">
            <hftl:formPanel formId="scriptForm" label="#{messages['customizedEntities.actionScriptHeader']}" backingBean="#{scriptInstanceBean}" showFormButtons="false">
                <h:panelGroup rendered="#{scriptInstanceBean.entity.isError()}">
                    <div class="ui-messages ui-widget">
                        <div class="ui-messages-error ui-corner-all">
                            <span class="ui-messages-error-icon"></span>
                            <ul>
                                <li><h:outputText value="#{messages['scriptInstance.compilationFailed']}" styleClass="ui-messages-error-summary" /></li>
                            </ul>
                        </div>
                    </div>
                </h:panelGroup>

                <hftl:formField label="#{messages['BusinessEntity.code']}" disabled="true" field="code" required="true" allowEdit="false" componentWidth="15" />
                <hftl:formField label="#{messages['BusinessEntity.description']}" field="description" required="false" componentWidth="15" />
                <hftl:formField label="#{messages['scriptInstance.sourceTypeEnum']}" field="sourceTypeEnum" />
                <hftl:decorateFormField fieldId="codeMirror" label="#{messages['scriptInstance.script']}" newLine="true" componentWidth="100">
                    <pe:codeMirror id="codeMirror" theme="eclipse" mode="text/x-java" value="#{scriptInstanceBean.entity.script}" lineNumbers="true" required="true" />
                </hftl:decorateFormField>
                <hftl:formField label="#{messages['enableEntity.disabled']}" doNotShowOnNew="true" allowEdit="false" field="disabled" isMessage="true" newLine="true" />

                <h:panelGroup id="scriptErrors" rendered="#{scriptInstanceBean.entity.isError()}">
                    <hftl:decorateFormField label="#{messages['scriptInstance.compilationErrors']}" componentWidth="100" newLine="true" rendered="#{scriptInstanceBean.entity.isError()}">
                        <p:dataTable id="entityScripts" var="entity" value="#{scriptInstanceBean.entity.scriptErrors}" paginator="true" rows="10" sortBy="#{entity.lineNumber}" sortField="lineNumber"
                            paginatorAlwaysVisible="false" paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                            rowsPerPageTemplate="10" lazy="false" styleClass="custom-grid" reflow="true">
                            <hftl:column label="#{messages['scriptInstance.compilation.lineNumber']}" field="lineNumber" width="10%" />
                            <hftl:column label="#{messages['scriptInstance.compilation.columnNumber']}" field="columnNumber" width="15%" />
                            <hftl:column label="#{messages['scriptInstance.compilation.message']}" field="message" />
                        </p:dataTable>
                    </hftl:decorateFormField>
                </h:panelGroup>

                <ui:param name="buttons" value="true" />
                <ui:define name="buttons">

                    <p:remoteCommand action="#{entityCustomActionBean.refreshScript}" name="refreshScript" update=":actionForm:script_entity" />

                    <p:commandButton value="#{messages['action.save']}" action="#{scriptInstanceBean.saveOrUpdateForPopup}"
                        oncomplete="refreshScript(); if (args &amp;&amp; !args.validationFailed) PF('scriptDialog').hide()" update="@form :actionForm:messages">
                    </p:commandButton>
                    <p:commandButton value="#{messages['scriptInstance.testCompilation']}" action="#{scriptInstanceBean.testCompilation}" update="@form" />
                    <p:commandButton value="#{messages['commons.disable']}" rendered="#{not empty scriptInstanceBean.entity.id and scriptInstanceBean.entity.active}"
                        action="#{scriptInstanceBean.disable}" update="@form">
                        <p:confirm header="#{messages['commons.disable']}" message="#{messages['commons.confirmDisable']}" />
                    </p:commandButton>
                    <p:commandButton value="#{messages['commons.enable']}" rendered="#{not empty scriptInstanceBean.entity.id and scriptInstanceBean.entity.disabled}"
                        action="#{scriptInstanceBean.enable}" update="@form">
                        <p:confirm header="#{messages['commons.enable']}" message="#{messages['commons.confirmEnable']}" />
                    </p:commandButton>

                    <p:commandButton value="#{messages['commons.close']}" immediate="true" oncomplete="PF('scriptDialog').hide()" actionListener="#{entityCustomActionBean.refreshScript}"
                        update=":actionForm:messages" />
                </ui:define>
            </hftl:formPanel>
        </p:scrollPanel>
    </p:dialog>

</ui:composition>
