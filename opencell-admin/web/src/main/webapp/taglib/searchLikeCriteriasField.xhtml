<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:p="http://primefaces.org/ui" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:s="http://jboss.org/seam/faces" xmlns:hftl="http://hftl.org"  xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions" >


<!--
    Makes part of "happy faces" component group.
    A custom component to display a search field with a label and a data entry control for search between criteria fields 
    
    Must be located inside a searchPanel component or have the following attributes provided if used as standalone: backingBean
    
    An applicable input control is determined automatically based on a field, of an entity type associated to a backing bean, type. The following field types are supported:
        Text -  as regular text entry

     Attributes applicable to all types of fields
        backingBean - backing bean associated with search. If not provided a backing bean passed to a parent searchPanel will be used.
        label - a label
        fields - value search between two fields. Can NOT (currently) contain "." for hierarchy of fields e.g. address.email
        disabled - is data entry control disabled        
       
     Attributes applicable to Text type fields
        size - a size attribute of inputText control
        maxlength - a maxlength attribute of inputText control 

-->

<ui:composition>

    <c:if test="${empty(id)}">
        <c:set var="id" value="#{fn:replace(fields, ',', '_').concat('_minmaxRange')}" />
    </c:if>

    <c:if test="${empty(disabled)}">
        <c:set var="disabled" value="false" />
    </c:if>

    <c:if test="${empty(size)}">
        <c:set var="size" value="20" />
    </c:if>

    <c:if test="${empty(maxlength)}">
        <c:set var="maxlength" value="40" />
    </c:if>

    <c:if test="${empty(componentWidth)}">
        <c:set var="componentWidth" value="${size>40?50:25}" />
    </c:if>

    <hftl:decorateFormField fieldId="${id}" label="#{label}" componentWidth="#{componentWidth}" newLine="#{newLine}" displayOneLine="#{displayOneLine}" styleClass="#{styleClass}"
        style="#{style}" labelStyle="#{labelStyle}" labelStyleClass="#{labelStyleClass}" inputStyle="#{inputStyle}" inputStyleClass="#{inputStyleClass}" labelWidth="#{labelWidth}"
        inputWidth="#{inputWidth}">

        <p:inputText id="${id}" size="#{size}" maxlength="#{maxlength}" value="#{backingBean.filters[fn:replace(fields, ',', '_')]}" disabled="#{disabled}" />
    </hftl:decorateFormField>
</ui:composition>

</html>
