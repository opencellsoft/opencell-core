<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	  xmlns:h="http://xmlns.jcp.org/jsf/html"
	  xmlns:f="http://xmlns.jcp.org/jsf/core"
	  xmlns:p="http://primefaces.org/ui"
	  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	  xmlns:o="http://omnifaces.org/ui" xmlns:hftl="http://hftl.org"
	  xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags">

<!-- 
    A tag displaying or editing a custom field value of type list/map and bound to CustomFieldValue type variable
    Makes part of custom field management tag group 

    Attributes
        cft - current field's template definition
        edit - should value be displayed, or edit control be shown
        field - field storing a value - CustomFieldValue type variable only
        datePattern - date pattern for date entry/display
        entity - entity, custom fields are related to
        messagesId - messages id tag to update for general errors
        popupWidgetVar - a name of a popup widget var if used inside a popup
        updateOnAddEdit - ids of controlls to update uppon data changes (value edit/create/delete)
        disabled - is field non-editable
        inherited - is tag used to show inherited CF values
        prefix - prefix for component to distinguish when used multiple times in the same page (for different entities)
        clientGuiId - current component's ID
        componentWidth - component width
        hasInheritedValue - if value is set in parent CF entity
 -->

<ui:composition>
	<h:outputText value="#{''}" />
	<c:if test="${empty(inherited)}">
		<c:set var="inherited" value="false" />
	</c:if>
	<c:if test="${empty(componentWidth)}">
		<c:set var="componentWidth"
			value="#{cft.storageType eq CustomFieldStorageTypeEnum.LIST or cft.storageType eq CustomFieldStorageTypeEnum.MAP?45:100}" />
	</c:if>
	<c:if test="#{empty(hasInheritedValue)}">
		<c:set var="hasInheritedValue" value="false" />
	</c:if>
	<c:set var="idPrefix" value="#{prefix}_#{inherited?'i':'c'}" />
	<c:set var="cfValueHolder"
		value="#{customFieldDataEntryBean.getFieldValueHolderByUUID(entity.uuid)}" />
	<o:importConstants
		type="org.meveo.model.crm.custom.CustomFieldStorageTypeEnum" />
	<o:importConstants
		type="org.meveo.model.crm.custom.CustomFieldTypeEnum" />
	<o:importConstants
		type="org.meveo.model.crm.custom.CustomFieldMapKeyEnum" />


	<hftl:decorateFormField
		label="#{cft.getDescription(customFieldDataEntryBean.currentLocale.ISO3Language)}#{cft.valueRequired and !hasInheritedValue and !inherited?' *':''} #{inherited?messages['customField.inheritedValue']:''}"
		componentWidth="#{componentWidth}" displayOneLine="false">

		<p:messages id="#{idPrefix}_cfMessages" globalOnly="false" redisplay="false" />

		<c:if
			test="#{cft.storageType eq CustomFieldStorageTypeEnum.LIST or cft.storageType eq CustomFieldStorageTypeEnum.MAP}">
			<p:dataTable id="#{idPrefix}_customFields_omitFromSubmit"
				lazy="true" value="#{customFieldDataEntryBean.getValueDataset(field, cft.storageType)}" var="mapValues"
				editable="#{edit and !disabled}" editMode="cell" reflow="false"
				resizableColumns="true" rowIndexVar="rowIndex" paginator="true"
                rows="10" styleClass="custom-grid" paginatorAlwaysVisible="false"
                paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                rowsPerPageTemplate="10,20,30">

				<p:ajax event="cellEdit" update="#{messagesId} #{updateOnAddEdit}"
					partialSubmit="true"
					partialSubmitFilter=":not([name*='addNewFields'])" />
				<p:column headerText="#{messages['commons.key']}"
					rendered="#{cft.storageType eq CustomFieldStorageTypeEnum.MAP}"
					sortBy="#{mapValues['key']}">
					<p:cellEditor>
						<f:facet name="output">
							<h:outputText value="#{mapValues['key']}"
								styleClass="field-value" />
						</f:facet>
						<f:facet name="input">
							<h:inputText value="#{mapValues['key']}" size="20" maxlength="50" />
						</f:facet>
					</p:cellEditor>
				</p:column>
				<p:column headerText="#{messages['commons.value']}"
					sortBy="#{mapValues['value']}">
					<p:cellEditor>
						<f:facet name="output">
							<hftl:customFieldValueMuteField edit="false" id="cfValue_out"
								cft="#{cft}" field="#{mapValues['value']}"
								label="#{messages['commons.value']}"
								datePattern="#{datePattern}" />
						</f:facet>
						<f:facet name="input">
							<hftl:customFieldValueMuteField edit="true" id="cfValue_in"
								cft="#{cft}" field="#{mapValues['value']}"
								label="#{messages['commons.value']}"
								datePattern="#{datePattern}" />
						</f:facet>
					</p:cellEditor>
				</p:column>
				<p:column headerText="#{messages['commons.actions']}"
					rendered="#{edit and !disabled}" width="15%">
					<c:if test="#{!empty(popupWidgetVar) and edit and !disabled}">
						<p:commandButton icon="ui-icon-minus"
										 action="#{customFieldDataEntryBean.removeValue(field, cft.storageType, mapValues)}"
										 partialSubmit="true" process="@this"
										 update="#{updateOnAddEdit} #{idPrefix}_customFields_omitFromSubmit">
							<p:confirm header="#{messages['commons.confirmationHeader']}"
									   message="#{messages['commons.confirmDelete']}"
									   icon="ui-icon-alert" />
						</p:commandButton>
					</c:if>
					<c:if test="#{empty(popupWidgetVar) and edit and !disabled}">
						<p:commandButton icon="ui-icon-minus" onclick="PF('confirmCanotDeleteWidget_#{idPrefix}_#{cft.id}').show()">
							<f:setPropertyActionListener value="#{mapValues}" target="#{customFieldDataEntryBean.selectedItem}" />
						</p:commandButton>
					</c:if>
				</p:column>
				<c:if test="#{!inherited}">
					<f:facet name="footer" layout="block">

						<p:messages id="cfNewFieldsMessage" globalOnly="false"
							redisplay="false" rendered="#{edit and !disabled}" />
						<hf:namingContainer id="addNewFields"
							rendered="#{edit and !disabled}">

							<c:if test="#{cft.storageType eq CustomFieldStorageTypeEnum.MAP}">
								<c:if test="#{cft.mapKeyType eq CustomFieldMapKeyEnum.STRING}">
									<p:inputText id="newKey"
										value="#{cfValueHolder.newValues[cft.code.concat('_key')]}"
										placeholder="#{messages['commons.key']}"
										label="#{messages['commons.key']}" size="30" maxlength="50" />
								</c:if>

								<c:if test="#{cft.mapKeyType eq CustomFieldMapKeyEnum.RON}">

									<p:inputText id="newRonKeyFrom"
										value="#{cfValueHolder.newValues[cft.code.concat('_key_one_from')]}"
										converter="javax.faces.Double"
										placeholder="#{messages['customFieldTemplate.mapKeyRonFrom']}"
										label="#{messages['customFieldTemplate.mapKeyRonFrom']}"
										size="9" maxlength="15" />
									<h:outputText value=" - " />
									<p:inputText id="newRonKeyTo"
										value="#{cfValueHolder.newValues[cft.code.concat('_key_one_to')]}"
										converter="javax.faces.Double"
										placeholder="#{messages['customFieldTemplate.mapKeyRonTo']}"
										label="#{messages['customFieldTemplate.mapKeyRonTo']}"
										size="9" maxlength="15" />
								</c:if>

								<h:outputText value=" &nbsp; " escape="false" />
							</c:if>

							<hftl:customFieldValueMuteField id="newValue" edit="true"
								cft="#{cft}"
								field="#{cfValueHolder.newValues[cft.code.concat('_value')]}"
								label="#{messages['commons.value']}"
								placeholder="#{messages['commons.value']}"
								datePattern="#{datePattern}" />
						</hf:namingContainer>

						<c:if test="#{!empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton value="#{messages['commons.addNew']}"
							 	partialSubmit="true" process="@this addNewFields"
								update="#{idPrefix}_customFields_omitFromSubmit"
								action="#{customFieldDataEntryBean.addValueToMap(cfValueHolder, field, cft)}"
								oncomplete="if (args &amp;&amp; !args.validationFailed) updateMasterTable()">
								<p:resetInput target="addNewFields" />
							</p:commandButton>
						</c:if>

						<c:if test="#{empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton value="#{messages['commons.addNew']}"
							 	process="@this addNewFields" update="#{idPrefix}_customFields_omitFromSubmit"
								action="#{customFieldDataEntryBean.addValueToMap(cfValueHolder, field, cft)}">
								<p:resetInput target="addNewFields" />
							</p:commandButton>
						</c:if>

						<c:if test="${not empty cft.id and empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton
								value="#{messages['customFieldTemplate.import']}"
								onclick="PF('importDialog_#{idPrefix}_#{cft.id}').show()"
								icon="fa fa-arrow-up" type="button">
							</p:commandButton>
						</c:if>

						<p:commandButton value="#{messages['commons.close']}"
							process="@this"
							rendered="#{!empty(popupWidgetVar) and edit and !disabled}"
							update="@this #{updateOnAddEdit}"
							oncomplete="PF('#{popupWidgetVar}').hide(); updateMasterTable()"
							actionListener="#{cfValueHolder.populateNewValueDefaults(null, cft)}">
						</p:commandButton>

						<p:button value="#{messages['commons.close']}"
							rendered="#{!empty(popupWidgetVar) and (!edit or disabled)}"
							onclick="PF('#{popupWidgetVar}').hide();return false;">
						</p:button>

					</f:facet>
				</c:if>
			</p:dataTable>
		</c:if>

		<c:if test="#{cft.storageType eq CustomFieldStorageTypeEnum.MATRIX}">
			<p:dataTable id="#{idPrefix}_customFields_omitFromSubmit"
				lazy="true" value="#{customFieldDataEntryBean.getValueDataset(field, cft.storageType)}" var="mapValues"
				editable="#{edit and !disabled}" editMode="cell" reflow="false"
				resizableColumns="true" rowIndexVar="rowIndex" paginator="true"
				rows="10" styleClass="custom-grid" paginatorAlwaysVisible="false"
				paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
				rowsPerPageTemplate="10,20,30">

				<p:ajax event="cellEdit" process="@this" update="#{messagesId} #{updateOnAddEdit}"
					immediate="true"
					partialSubmitFilter=":not([name*='addNewFields'])" />
				<p:columns value="#{cft.matrixColumns}" var="column"
					headerText="#{column.label}" sortBy="#{mapValues[column.code]}"
					style="height:25px;">
					<p:cellEditor>
						<f:facet name="output">
							<h:outputText value="#{mapValues[column.code]}"
								styleClass="field-value">
								<f:converter
									converterId="org.meveo.util.view.CFMultiValueConverter" />
							</h:outputText>
						</f:facet>
						<f:facet name="input">
							<h:inputText value="#{mapValues[column.code]}" size="20"
								maxlength="50"
								rendered="#{column.keyType eq CustomFieldMapKeyEnum.STRING}" />
							<h:inputText value="#{mapValues[column.code]}" size="9"
								maxlength="15"
								rendered="#{column.keyType eq CustomFieldMapKeyEnum.LONG}"
								converter="javax.faces.Long" />
							<h:inputText value="#{mapValues[column.code]}" size="9"
								maxlength="15"
								rendered="#{column.keyType eq CustomFieldMapKeyEnum.DOUBLE}"
								converter="javax.faces.Double" />
							<p:inputText value="#{mapValues[column.code]}" size="20"
								maxlength="30"
								rendered="#{column.keyType eq CustomFieldMapKeyEnum.RON}">
								<p:keyFilter regEx="/[0-9.&lt;]/" />
								<f:validator binding="#{ronValidator}" />
							</p:inputText>
						</f:facet>
					</p:cellEditor>
				</p:columns>
				<p:column headerText="#{messages['commons.value']}" width="20%"
					sortBy="#{mapValues['value']}"
					rendered="#{cft.fieldType ne CustomFieldTypeEnum.MULTI_VALUE}">
					<p:cellEditor>
						<f:facet name="output">
							<hftl:customFieldValueMuteField edit="false" cft="#{cft}"
								field="#{mapValues['value']}"
								label="#{messages['commons.value']}"
								datePattern="#{datePattern}" />
						</f:facet>
						<f:facet name="input">
							<hftl:customFieldValueMuteField edit="true" cft="#{cft}"
								field="#{mapValues['value']}"
								label="#{messages['commons.value']}"
								datePattern="#{datePattern}" />
						</f:facet>
					</p:cellEditor>
				</p:column>
				<p:column headerText="#{messages['commons.actions']}" width="10%"
					rendered="#{edit and !disabled}">
					<c:if test="#{!empty(popupWidgetVar) and edit and !disabled}">
						<p:commandButton icon="ui-icon-minus"
									 action="#{customFieldDataEntryBean.removeValue(field, cft.storageType, mapValues)}"
									 partialSubmit="true" process="@this"
									 update="#{updateOnAddEdit} #{idPrefix}_customFields_omitFromSubmit">
							<p:confirm header="#{messages['commons.confirmationHeader']}"
								   message="#{messages['commons.confirmDelete']}"
								   icon="ui-icon-alert" />
						</p:commandButton>
					</c:if>
					<c:if test="#{empty(popupWidgetVar) and edit and !disabled}">
						<p:commandButton icon="ui-icon-minus" onclick="PF('confirmCanotDeleteWidget_#{idPrefix}_#{cft.id}').show()">
							<f:setPropertyActionListener value="#{mapValues}" target="#{customFieldDataEntryBean.selectedItem}" />
						</p:commandButton>
					</c:if>
				</p:column>
				<c:if test="#{!inherited}">
					<f:facet name="footer" layout="block">

						<p:messages id="cfNewFieldsMessage" globalOnly="false"
							redisplay="false" rendered="#{edit and !disabled}" />

						<div>
							<span class="text-red">#{messages['message.allFields.areRequired']}</span>
						</div>

						<hf:namingContainer id="addNewFields"
							rendered="#{edit and !disabled}">

							<c:forEach items="#{cft.matrixColumns}" var="column">
								<c:if test="#{column.keyType eq CustomFieldMapKeyEnum.STRING}">
									<p:inputText 
										value="#{cfValueHolder.newValues[cft.code.concat('_').concat(column.code)]}"
										placeholder="#{column.label}" label="#{column.label}"
										size="30" maxlength="50" validatorMessage="matrix separator character '|' may not be used">
											<f:validateRegex  pattern="^$|[^|]+"/>
										</p:inputText>
								</c:if>

								<c:if test="#{column.keyType eq CustomFieldMapKeyEnum.LONG}">
									<p:inputText
										value="#{cfValueHolder.newValues[cft.code.concat('_').concat(column.code)]}"
										converter="javax.faces.Long" placeholder="#{column.label}"
										label="#{column.label}" size="9" maxlength="15" />
								</c:if>

								<c:if test="#{column.keyType eq CustomFieldMapKeyEnum.DOUBLE}">
									<p:inputText
										value="#{cfValueHolder.newValues[cft.code.concat('_').concat(column.code)]}"
										converter="javax.faces.Double" placeholder="#{column.label}"
										label="#{column.label}" size="9" maxlength="15" />
								</c:if>

								<c:if test="#{column.keyType eq CustomFieldMapKeyEnum.RON}">

									<p:inputText
										value="#{cfValueHolder.newValues[cft.code.concat('_').concat(column.code).concat('_from')]}"
										converter="javax.faces.Double" placeholder="#{column.label}"
										label="#{column.label}" size="9" maxlength="15" />
									<h:outputText value=" - " />
									<p:inputText id="newRonKeyTo"
										value="#{cfValueHolder.newValues[cft.code.concat('_').concat(column.code).concat('_to')]}"
										converter="javax.faces.Double" placeholder="#{column.label}"
										label="#{column.label}" size="9" maxlength="15" />
								</c:if>

								<h:outputText value=" &nbsp; " escape="false" />
							</c:forEach>

							<hftl:customFieldValueMuteField id="newValue" edit="true"
								cft="#{cft}"
								field="#{cfValueHolder.newValues[cft.code.concat('_value')]}"
								label="#{messages['commons.value']}"
								placeholder="#{messages['commons.value']}"
								datePattern="#{datePattern}"
								rendered="#{cft.fieldType ne CustomFieldTypeEnum.MULTI_VALUE}" />

						</hf:namingContainer>

						<c:if test="#{!empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton value="#{messages['commons.addNew']}"
							 	partialSubmit="true" process="@this addNewFields"
								update="#{idPrefix}_customFields_omitFromSubmit"
								action="#{customFieldDataEntryBean.addMatrixRow(cfValueHolder, field, cft)}"
								oncomplete="if (args &amp;&amp; !args.validationFailed) updateMasterTable()">
								<p:resetInput target="addNewFields" />
							</p:commandButton>
						</c:if>

						<c:if test="#{empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton value="#{messages['commons.addNew']}"
							 	partialSubmit="true" process="@this addNewFields" ajax="false"
								update="#{idPrefix}_customFields_omitFromSubmit"
								action="#{customFieldDataEntryBean.addMatrixRow(cfValueHolder, field, cft)}">
								<p:resetInput target="addNewFields" />
							</p:commandButton>
						</c:if>

						<c:if test="${not empty cft.id and empty(popupWidgetVar) and edit and !disabled}">
							<p:commandButton
								value="#{messages['customFieldTemplate.import']}"
								onclick="PF('importDialog_#{idPrefix}_#{cft.id}').show()"
								icon="fa fa-arrow-up" type="button">
							</p:commandButton>
						</c:if>

						<p:commandButton value="#{messages['commons.close']}"
							process="@this"
							rendered="#{!empty(popupWidgetVar) and edit and !disabled}"
							update="@this #{updateOnAddEdit}"
							oncomplete="PF('#{popupWidgetVar}').hide(); updateMasterTable()"
							actionListener="#{cfValueHolder.populateNewValueDefaults(null, cft)}">
						</p:commandButton>

						<p:button value="#{messages['commons.close']}"
							rendered="#{!empty(popupWidgetVar) and (!edit or disabled)}"
							onclick="PF('#{popupWidgetVar}').hide();return false;">
						</p:button>

					</f:facet>
				</c:if>
			</p:dataTable>
		</c:if>

		<c:if test="${not empty cft.id and empty(popupWidgetVar) and edit and !disabled}">
			<p:dialog modal="true" widgetVar="importDialog_#{idPrefix}_#{cft.id}"
				header="#{messages['customFieldTemplate.importFile.values']}"
				draggable="false" closable="true" resizable="false" width="600px">
				<p:panelGrid columns="1" styleClass="ui-panelgrid-blank">
					<h:panelGroup layout="block"
						styleClass="formFieldGroup #{'clearLeft'}" style="width:120%;">
						<p:outputLabel for="import_file_#{idPrefix}_#{cft.id}"
							style="width:20%;"
							value="#{messages['customFieldTemplate.importFile']}" />
						<h:panelGroup layout="block" styleClass="#{'formFieldItem'}"
							style="width:80%;">
							<p:fileUpload id="import_file_#{idPrefix}_#{cft.id}"
								widgetVar="fileUploadWidget_#{idPrefix}_#{cft.id}"
								fileUploadListener="#{customFieldDataEntryBean.handleFileUpload}"
								allowTypes="/(\.|\/)(csv)$/" auto="false"
								update="@this #{idPrefix}_customFields_omitFromSubmit"
								label="#{messages['customFieldTemplate.importFile.selectFile']}"
								uploadLabel="#{messages['export.importFile.upload']}"
								fileLimit="1"
								fileLimitMessage="#{messages['customFieldTemplate.importFile.fileLimitMessage']}"
								multiple="false"
								oncomplete="PF('fileUploadWidget_#{idPrefix}_#{cft.id}').reset(); PF('importDialog_#{idPrefix}_#{cft.id}').hide()">
								<f:attribute name="cfv" value="#{field}" />
								<f:attribute name="cft" value="#{cft}" />
							</p:fileUpload>
						</h:panelGroup>
					</h:panelGroup>
				</p:panelGrid>
			</p:dialog>

			<c:if test="#{empty(popupWidgetVar) and edit and !disabled}">
				<p:confirmDialog styleClass="confirm-dialog" message="#{messages['commons.confirmDelete']}"
								 header="#{messages['commons.confirmationHeader']}" severity="alert"
								 widgetVar="confirmCanotDeleteWidget_#{idPrefix}_#{cft.id}">
					<p:commandButton value="#{messages['commons.yes']}"
									 action="#{customFieldDataEntryBean.removeValue(field, cft.storageType, customFieldDataEntryBean.selectedItem)}"
									 partialSubmit="true" process="@this" ajax="false"
									 update="#{updateOnAddEdit} #{idPrefix}_customFields_omitFromSubmit"
									 oncomplete="PF('confirmCanotDeleteWidget_#{idPrefix}_#{cft.id}').hide()"/>
					<p:commandButton value="#{messages['commons.no']}"
									 oncomplete="PF('confirmCanotDeleteWidget_#{idPrefix}_#{cft.id}').hide()"/>
				</p:confirmDialog>
			</c:if>

			<script type="application/javascript">
			 	PrimeFaces.widget.FileUpload.prototype.reset = function() {   
			        this.clearMessages();
			        return this.init(this.cfg);
			    }
			</script>
		</c:if>

	</hftl:decorateFormField>

</ui:composition>
</html>