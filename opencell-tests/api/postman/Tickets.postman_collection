{
	"info": {
		"_postman_id": "8878e2c4-7a70-4f7d-a468-a49f7d78a768",
		"name": "Opencell Tickets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "#5284 - [WF] A workflow is applied to CE not related to it",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider/Seller/Account",
									"item": [
										{
											"name": "Update Provider",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"script": {
														"type": "text/javascript",
														"id": "5630c18d-c5f2-4439-9b44-10d271f28e8c",
														"exec": [
															""
														]
													},
													"listen": "prerequest"
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "S|MAIN_SELLER|Opencell",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"script": {
												"type": "text/javascript",
												"id": "f13195a6-8553-4bfb-82c6-3981cf05acf8",
												"exec": [
													""
												]
											},
											"listen": "prerequest"
										},
										{
											"script": {
												"type": "text/javascript",
												"id": "fef900eb-7f7e-49c4-8b6a-492eb59f19e6",
												"exec": [
													""
												]
											},
											"listen": "test"
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "bb87ddf4-0fbe-4bdf-8f08-09b253a3d698",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "6bcb3888-6a93-4eaf-b8dc-fe178fb9e5ba",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Taux à 16% pour la Polynésie Française (taux nominal)"
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "0f8a90b5-331c-4543-835a-a7746b2e3808",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														},
														"description": "Permettra d'identifier qu'il faut enlever les lignes de taxe (différent d'une ligne avec Taxe à 0)"
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=STANDARD|desc=Standard accounts",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "7c53fb29-0cfd-4549-a064-4c9c2d3a1ed1",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=NO_TAX|desc=Exempted accounts",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "1c13fec7-292c-4f2f-8aec-3fe5536cb631",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=REGULAR|desc=Regular products",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "b2efe67a-ccbc-4a6a-abea-787832c69fae",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=REDUCED|desc=Products with reduced tax",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "5181c4c5-9ba0-4cf8-911e-2e3ea3546081",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "7537d736-eefe-45a7-a006-3dd688d1c9e4",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=NO_TAX|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "35d640d2-a11c-4845-ab41-a516251075d2",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=STANDARD|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "55bc5791-4eca-487f-99ba-deffb9667eaa",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=STANDARD|taxClass=REGULAR|buyer=|tax=TAX_20",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "19ef0ba3-1348-45d7-976d-00404bee3c34",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=2|taxCat=STANDARD|taxClass=REDUCED|buyer=|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "257b1a91-7fea-4025-b741-9b619e5476b7",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=10|taxCat=STANDARD|taxClass=REGULAR|buyer=US|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "4675e0fd-2f92-44e9-9ce4-fecfa00a9323",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "custCat|code=CLIENT|taxCat=STANDARD",
											"request": {
												"method": "POST",
												"header": [
													{
														"value": "application/json",
														"key": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"STANDARD\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "script|rating.LogWalletOperation|Logs the WalletOperation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05bfa8b0-23b6-4458-a348-22f72981abc6",
												"exec": [
													"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/xml",
												"type": "text",
												"name": "Content-Type",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"scriptInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=MONTHLY|desc=Accumulates quantities on the Customer",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "counter|CN_USG_COUNTER|Counter",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"MONTHLY\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"counterTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "charge|CH_USG_UNIT|Charge unit",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"CMP_DATA\",\n    \"taxClassCode\": \"REDUCED\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10,\n    \"triggerNextCharge\": false\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"usageChargeTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "pp|code=PP_USG_UNIT|charge=CH_USG_UNIT",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"eventCode\": \"{{charge}}\",\n    \"amountWithoutTax\": 1,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": null,\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"pricePlan",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "se|code=SE_USG_UNIT|desc=Unit usage service",
									"event": [
										{
											"script": {
												"id": "30099f9d-8ffa-48ea-a1e4-055d9884185d",
												"exec": [
													""
												],
												"type": "text/javascript"
											},
											"listen": "prerequest"
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": []\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null,\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": {\n                \t\"counterTemplate\": [\n                \t\t\"CN_USG_ACCUM_C\"\n                \t]\n                }\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"serviceTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "of|code=OF",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"SE_USG_UNIT\",\n                \"customFields\": null\n            },\n            \"mandatory\": false,\n            \"incompatibleServiceTemplate\": []\n        }\n    ],\n    \"customFields\": null\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"catalog",
												"offerTemplate",
												"createOrUpdate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Account",
					"item": [
						{
							"name": "C|Jean|Bonnot",
							"event": [
								{
									"script": {
										"id": "8f7c8aea-88ef-4aa1-84ad-ed3b5ff587bc",
										"exec": [
											"var parts = pm.variables.get(\"request.label\").split(\"|\");",
											"var index = pm.globals.get(\"index\");",
											"",
											"if (typeof index === 'undefined') {",
											"    console.log(\"index global variable is undefined -> setting to \\\"00\\\"\");",
											"    pm.globals.set(\"index\", \"00\");",
											"    index = \"00\";",
											"}",
											"",
											"var prefix = pm.variables.get(\"template.code\") + \"-\";",
											"var suffix = \" \" + prefix + index;",
											"",
											"switch (parts.length) {",
											"    case 1:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[0] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 2:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", \"\");",
											"        pm.globals.set(\"account.lastname\", \"\");",
											"        break;",
											"    case 3:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + \" \" + parts[2] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[1]);",
											"        pm.globals.set(\"account.lastname\", parts[2]);",
											"        break;",
											"    case 4:",
											"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
											"        pm.globals.set(\"account.description\", parts[1] + suffix);",
											"        pm.globals.set(\"account.firstname\", parts[2]);",
											"        pm.globals.set(\"account.lastname\", parts[3]);",
											"        break;",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									},
									"listen": "prerequest"
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"{{seller.code}}\",\r\n  \"code\" : \"{{account.code}}\",\r\n  \"description\": \"{{account.description}}\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"{{account.firstname}}\",\r\n    \"lastName\" : \"{{account.lastname}}\"\r\n  },\r\n  \"subscriptionDate\": \"2018-01-10\",\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"Bâtiment A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n    \"mobile\" : \"+33123546789\",\r\n    \"phone\":\"+33123546789\"\r\n  },\r\n  \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"CHECK\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"CYC_INV_MT_1\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdateCRMAccountHierarchy"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "workflow",
					"item": [
						{
							"name": "CE",
							"item": [
								{
									"name": "CE CE_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "859007cd-b305-4f5e-8a4e-4fdbbf481b99",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"code\": \"CE_TEST_1\",\r\n        \"description\": \"Entité personnalisé TEST\",\r\n        \"disabled\": false,\r\n        \"name\": \" TEST_1\",\r\n        \"field\": [\r\n            {\r\n                \"code\": \"test1\",\r\n                \"description\": \"Description\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 100,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            },\r\n\t\t\t {\r\n              \r\n                \"code\": \"test2\",\r\n                \"description\": \"Destinataire\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": true,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 50,\r\n                \"indexType\": \"INDEX\"\r\n            },\r\n            {\r\n                \"code\": \"test3\",\r\n                \"description\": \"Réinitailiser les Nb d'essai\",\r\n                \"disabled\": false,\r\n                \"languageDescriptions\": [],\r\n                \"fieldType\": \"BOOLEAN\",\r\n                \"accountLevel\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"appliesTo\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"defaultValue\": true,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            }\r\n           \r\n        ],\r\n        \"action\": []\r\n    }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "FILL|CE_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "171163b6-6b89-4346-81de-81a276bf2925",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cetCode\": \"CE_TEST_1\",\n    \"code\":\"test_1\",\n    \"description\":\"Test 1\",\n    \"customFields\": {\n    \t\"customField\":[\n        {\n                \"code\": \"test1\",\n                \"description\":\"description\",\n                \"stringValue\": \"Bonjour, Un ticket de teste \"\n             \n        },{\n                \"code\": \"test2\",\n                \"stringValue\": \"4\"\n             \n        },{\n                \"code\": \"test3\",\n                \"stringValue\": \"Subject\"\n             \n        }\n        \n    ]\n}\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customEntityInstance/{{request.label.1}}/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customEntityInstance",
												"{{request.label.1}}",
												"createOrUpdate"
											]
										},
										"description": "Injection des codes articles dans la base"
									},
									"response": []
								},
								{
									"name": "CE CE_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2a0e459-ba66-46fd-abec-71c6c2f0fcff",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n     \"code\": \"CE_TEST_2\",\r\n        \"description\": \"Entité personnalisé TEST\",\r\n        \"disabled\": false,\r\n        \"name\": \" TEST_2\",\r\n        \"field\": [\r\n            {\r\n                \"code\": \"test1\",\r\n                \"description\": \"Description\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 100,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            },\r\n\t\t\t {\r\n              \r\n                \"code\": \"test2\",\r\n                \"description\": \"Destinataire\",\r\n                \"disabled\": false,\r\n                \"fieldType\": \"STRING\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": true,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"maxValue\": 50,\r\n                \"indexType\": \"INDEX\"\r\n            },\r\n            {\r\n                \"code\": \"test3\",\r\n                \"description\": \"Réinitailiser les Nb d'essai\",\r\n                \"disabled\": false,\r\n                \"languageDescriptions\": [],\r\n                \"fieldType\": \"BOOLEAN\",\r\n                \"accountLevel\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"appliesTo\": \"CE_CE_TICKET_ZENDESK\",\r\n                \"useInheritedAsDefaultValue\": false,\r\n                \"storageType\": \"SINGLE\",\r\n                \"valueRequired\": false,\r\n                \"uniqueConstraint\": false,\r\n                \"versionable\": false,\r\n                \"triggerEndPeriodEvent\": false,\r\n                \"allowEdit\": true,\r\n                \"hideOnNew\": false,\r\n                \"defaultValue\": true,\r\n                \"indexType\": \"STORE_ONLY\"\r\n            }\r\n           \r\n        ],\r\n        \"action\": []\r\n    }",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/entityCustomization/entity/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"entityCustomization",
												"entity",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "FILL|CE_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df6fa189-7ef4-4b23-9728-4edea158b9ec",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cetCode\": \"CE_TEST_2\",\n    \"code\":\"test_2\",\n    \"description\":\"Test 2\",\n    \"customFields\": {\n    \t\"customField\":[\n        {\n                \"code\": \"test1\",\n                \"description\":\"description\",\n                \"stringValue\": \"Bonjour, Un ticket de teste \"\n             \n        },{\n                \"code\": \"test2\",\n                \"stringValue\": \"4\"\n             \n        },{\n                \"code\": \"test3\",\n                \"stringValue\": \"Subject\"\n             \n        }\n        \n    ]\n}\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/customEntityInstance/{{request.label.1}}/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"customEntityInstance",
												"{{request.label.1}}",
												"createOrUpdate"
											]
										},
										"description": "Injection des codes articles dans la base"
									},
									"response": []
								},
								{
									"name": "Create Workflow|WF_TEST_1",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.customEntities.CustomEntityInstance\",\r\n    \"targetCetCode\": \"CE_TEST_1\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer TEST 1\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"B\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T3\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"F\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow Job|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d46f9d60-f274-4f7e-b671-bb16b19da493",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"active\": \"false\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Customer Workflow Job\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"gwfJob_generic_wf\",\r\n                \"entityReferenceValue\": { \"code\" : \"{{request.label.1}}\", \"classname\": \"org.meveo.model.generic.wf.GenericWorkflow\" }\r\n            }\r\n        ]\r\n    },\r\n    \"timerCode\": \"Daily-midnight\",\r\n    \"jobCategory\": \"MISC\",\r\n    \"jobTemplate\": \"GenericWorkflowJob\"\r\n    \r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f65b20c2-c29a-492c-be49-b354ba738cec",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "de282db9-60cc-4eb4-a2cd-cf7267fd9305",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_TEST_1|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f7ebece-ee65-44e2-930b-414428288b6e",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b7dbffd5-8e98-4674-beb7-1001fbc5b316",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_TEST_1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "052d9f9d-af18-4d77-89f9-3d6e58804fb0",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"    pm.expect(jsonData.workflowHistory[1].transitionName).to.eql(\"T2\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=test_1&workflowCode=WF_TEST_1",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "test_1"
												},
												{
													"key": "workflowCode",
													"value": "WF_TEST_1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_TEST_2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36007f5d-ec64-45a7-90e3-e7d347c67953",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory.length).to.eql(0);\r",
													"\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=test_2&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "test_2"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "115108bb-f64d-48aa-b0d4-f5241899ebaf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "93e0aeb4-dd92-4094-9fd2-35bd97d5a9b2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "T1-T3-T8",
							"item": [
								{
									"name": "Create Workflow|WF_T1_T3_T8",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.crm.Customer\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"com.opencellsoft.script.ActionScriptExample1\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"F\", \"description\": \"T3\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"G\", \"description\": \"T7\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"G\", \"description\": \"T6\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"F\", \"toStatus\": \"H\", \"description\": \"T8\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"G\", \"toStatus\": \"H\", \"description\": \"T9\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Workflow Job|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8eafd83f-524b-4afd-b72a-211ade665ea5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"active\": \"false\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Customer Workflow Job\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"gwfJob_generic_wf\",\r\n                \"entityReferenceValue\": { \"code\" : \"{{request.label.1}}\", \"classname\": \"org.meveo.model.generic.wf.GenericWorkflow\" }\r\n            }\r\n        ]\r\n    },\r\n    \"timerCode\": \"Daily-midnight\",\r\n    \"jobCategory\": \"MISC\",\r\n    \"jobTemplate\": \"GenericWorkflowJob\"\r\n    \r\n}\r\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"jobInstance",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e77903d-68d6-4b52-8fd7-3d0284f3609c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6567464-d782-4085-af18-a1314787ac5f",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9798cf0c-c7ee-46e8-838d-75e89b919afb",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "75a9ece3-9275-44dc-ad9f-d2384fa8739e",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb3303d9-085f-4573-b2be-9b13f91b7d6d",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Job - Again|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a641eb60-161f-4504-bd07-b3320d91b254",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "56b77470-21e0-4d8e-9aeb-a1385cfa5ca2",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report  - Again|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "111d7a27-4732-4649-8499-9b7d8b38a11d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "74b9c531-4e2b-4ee4-bc16-a2fce0bdf13b",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow - Again|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "815ef384-97e5-4ae7-ac69-fc7a5ce8e2ea",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update Workflow|WF_T1_T3_T8",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"targetEntityClass\": \"org.meveo.model.crm.Customer\",\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"workflow Customer\",\r\n    \"status\": [ \r\n    \t{ \"code\": \"A\", \"description\": \"A\" },\r\n    \t{ \"code\": \"B\", \"description\": \"B\" },\r\n    \t{ \"code\": \"C\", \"description\": \"C\" },\r\n    \t{ \"code\": \"D\", \"description\": \"D\" },\r\n    \t{ \"code\": \"E\", \"description\": \"E\" },\r\n    \t{ \"code\": \"F\", \"description\": \"F\" },\r\n    \t{ \"code\": \"G\", \"description\": \"G\" },\r\n    \t{ \"code\": \"H\", \"description\": \"H\" }\r\n    ],\r\n    \"initStatus\": \"A\",\r\n    \"transition\": [\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"B\", \"description\": \"T1\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\"},\r\n    \t\t{ \"fromStatus\": \"A\", \"toStatus\": \"C\", \"description\": \"T2\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"com.opencellsoft.script.ActionScriptExample1\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"F\", \"description\": \"T3\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"B\", \"toStatus\": \"E\", \"description\": \"T4\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"C\", \"toStatus\": \"D\", \"description\": \"T5\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"D\", \"toStatus\": \"G\", \"description\": \"T7\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"E\", \"toStatus\": \"G\", \"description\": \"T6\", \"conditionEl\": \"#{false}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"F\", \"toStatus\": \"H\", \"description\": \"T8\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" },\r\n    \t{ \"fromStatus\": \"G\", \"toStatus\": \"H\", \"description\": \"T9\", \"conditionEl\": \"#{true}\", \"actionScriptCode\": \"\" }\r\n    \t\r\n    \t\r\n    \t\t\r\n    \r\n    \r\n    \r\n    ]\r\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c98d3f56-8abd-492f-b58c-8e0d2ab37f95",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"",
													"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f197805d-8091-4701-8687-c4e8b71484c8",
												"exec": [
													"pm.globals.set(\"task.code\", pm.variables.get(\"request.label.1\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"type": "any"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\":\"{{request.label.1}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/job/execute",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"execute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Job Report|WF_T1_T3_T8|wait=5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c2643e5-90b1-4ac7-b1b7-e0ea0134e15f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
													"var task=pm.variables.get(\"task.code\");",
													"",
													"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
													"    tests[\"is.done.\"+task] = true;",
													"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
													"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
													"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
													"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
													"    }",
													"} else {",
													"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
													"    tests[\"is.not.done.yet.\"+task] = true;",
													"    console.log(\"Not done yet (\"+task+\").\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7e3b98f2-d089-456d-a597-ea588c7e32e9",
												"exec": [
													"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{opencell.username}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{opencell.password}}",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"url": {
											"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"job",
												"jobReport"
											],
											"query": [
												{
													"key": "id",
													"value": "{{jobRun.id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "find History Workflow|WF_T1_T3_T8",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f29710d3-0fe6-4795-8b76-36d4d1d26895",
												"exec": [
													"\r",
													"pm.test(\"check workflow\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.workflowHistory[0].transitionName).to.eql(\"T1\");\r",
													"    pm.expect(jsonData.workflowHistory[1].transitionName).to.eql(\"T3\");\r",
													"    pm.expect(jsonData.workflowHistory[2].transitionName).to.eql(\"T8\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode={{account.code}}&workflowCode={{request.label.1}}",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"admin",
												"genericWorkflow",
												"history"
											],
											"query": [
												{
													"key": "entityInstanceCode",
													"value": "{{account.code}}"
												},
												{
													"key": "workflowCode",
													"value": "{{request.label.1}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{opencell.password}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{opencell.username}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b1c5b796-f19f-41bb-b3d7-6d73c554c8f7",
						"type": "text/javascript",
						"exec": [
							"var now = new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for (let i = 0; i < parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\" + i, parts[i]);",
							"",
							"    if (parts[i].indexOf(\"=\") != -1) {",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5712a1ab-29fa-4629-8bea-d630c564d6a0",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#4895 - Create a fixed date calendar ",
			"item": [
				{
					"name": "FIXED_CALENDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9815193f-8c74-4666-924d-ee17930e0edb",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(request.name + \" - Check Status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(request.name + \" - Check ErrorCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorCode).to.eql();",
									"});",
									"",
									"pm.test(request.name + \" - Check Message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"FIXED_CALENDAR_2020\",\n    \"description\":\"FIXED_CALENDAR_2020\",\n    \"calendarType\": \"FIXED\",\n     \"fixedDates\": [\n            \"01/01/2020 15:15 - 31/05/2020 15:15\"\n        ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/calendar/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"calendar",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE_FIXED_CALENDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f1dbdc8-b3e3-46d1-a1b9-71c5f5109afe",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/calendar/FIXED_CALENDAR_2020",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"calendar",
								"FIXED_CALENDAR_2020"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5064 - Add fileFormat attribute (CF) to FlatFile job and finish fileFormat Rest api",
			"item": [
				{
					"name": "File Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9f1250b-d06b-4568-b82a-60f771859b87",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"csv\"\n    ],\n    \"configurationTemplate\": \"test1\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da591519-b74b-4e06-9df5-6f01d00bea66",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check File Format code\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.code).to.eql(\"test\");\r",
									"    });\r",
									"pm.test(\"Check File Format type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.fileTypes).to.eql([ 'csv' ] );\r",
									"    });\r",
									"\r",
									"    pm.test(\"Check configurationTemplate\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.configurationTemplate).to.eql(\"test1\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check recordName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.recordName).to.eql(\"record\");\r",
									"    });\r",
									"    \r",
									"      pm.test(\"Check input Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.inputDirectory).to.eql(\"imports/catalog/input\");\r",
									"    });\r",
									"\r",
									"       pm.test(\"Check output Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.outputDirectory).to.eql(\"imports/catalog/output\");\r",
									"    });\r",
									"       pm.test(\"Check reject Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.rejectDirectory).to.eql(\"imports/catalog/reject\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check archive Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.archiveDirectory).to.eql(\"imports/test\");\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update fileFormat",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa5abc10-969f-4032-a76f-26e6cbf194ea",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(request.name + \" - Check Status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
									"});",
									"",
									"pm.test(request.name + \" - Check ErrorCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorCode).to.eql();",
									"});",
									"",
									"pm.test(request.name + \" - Check Message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"txt\"\n    ],\n    \"configurationTemplate\": \"test2\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c533554f-23ef-4da5-9321-3e291d432653",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.message).to.eql();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List file formats",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae1dda75-caf8-433b-9fbf-61cacc8a6387",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actionStatus.message).to.eql();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa5970a9-8fd3-44fa-9e6e-b3322435c145",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f8cb14c-7bbb-46c2-9a2b-9df277bad494",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"FAIL\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"FileFormat with code=test does not exists.\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "File Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef35f000-18df-47d0-b85b-fc28beb140a6",
								"exec": [
									"pm.test(request.name + \" - Check Code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check ErrorCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorCode).to.eql();\r",
									"});\r",
									"\r",
									"pm.test(request.name + \" - Check Message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"test\",\n    \"fileTypes\": [\n        \"csv\"\n    ],\n    \"configurationTemplate\": \"test1\",\n    \"recordName\": \"record\",\n    \"inputDirectory\": \"imports/catalog/input\",\n    \"outputDirectory\": \"imports/catalog/output\",\n    \"rejectDirectory\": \"imports/catalog/reject\",\n    \"archiveDirectory\": \"imports/test\",\n    \"jobCode\": \"Catalog import job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat/createOrUpdate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat",
								"createOrUpdate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find file format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b494517-0b87-47e4-a43e-c29b6034cfd5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check File Format code\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.code).to.eql(\"test\");\r",
									"    });\r",
									"pm.test(\"Check File Format type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.fileTypes).to.eql([ 'csv' ] );\r",
									"    });\r",
									"\r",
									"    pm.test(\"Check configurationTemplate\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.configurationTemplate).to.eql(\"test1\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check recordName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.recordName).to.eql(\"record\");\r",
									"    });\r",
									"    \r",
									"      pm.test(\"Check input Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.inputDirectory).to.eql(\"imports/catalog/input\");\r",
									"    });\r",
									"\r",
									"       pm.test(\"Check output Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.outputDirectory).to.eql(\"imports/catalog/output\");\r",
									"    });\r",
									"       pm.test(\"Check reject Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.rejectDirectory).to.eql(\"imports/catalog/reject\");\r",
									"    });\r",
									"    \r",
									"     pm.test(\"Check archive Directory\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.dto.archiveDirectory).to.eql(\"imports/test\");\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{opencell.url}}/admin/fileFormat?code=test",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"admin",
								"fileFormat"
							],
							"query": [
								{
									"key": "code",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5291 - [API] Missing List APIs",
			"item": [
				{
					"name": "Filter on UsageChargeTemplate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70af6a78-38a1-4df1-aed4-060e86996ac3",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 1rst template\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[0].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 2nd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[1].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 3rd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[2].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 4rd template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[3].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 5th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[4].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 6th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[5].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 7th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[6].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 8th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[7].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 9th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[8].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});\r",
									"pm.test(\"Check Invoice invoiceSubCategory for the 10th template \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usageChargeTemplates.usageChargeTemplates[9].invoiceSubCategory).to.eql(\"CLASSIC_USAGE_TIER\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"invoiceSubCategory.code\": \"CLASSIC_USAGE_TIER\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/usageChargeTemplate/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"usageChargeTemplate",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter on InvoiceSubCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86555899-53cb-446b-9426-d01c1c7933e3",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check invoiceSubCategory's description\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoiceSubCategories.invoiceSubCategory[0].description).to.eql(\"Commission\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"invoiceCategory.description\": \"Commission\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoiceSubCategory/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoiceSubCategory",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter on InvoiceCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc004bb6-9a04-4529-b4fc-070be144a8fa",
								"exec": [
									"pm.test(\"Check total Number Of Records\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check invoiceSubCategory's description\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.invoiceCategories.invoiceCategory[0].code).to.eql(\"CLASSIC_COMMISSION\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "opencell.admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "opencell.admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"fullTextFilter\" : null,\r\n\t\"filters\" : {\r\n\t\t\"code\": \"CLASSIC_COMMISSION\"\r\n\t},\r\n\t\"fields\" : null,\r\n\t\"offset\" : null,\r\n\t\"limit\" : null,\r\n\t\"sortBy\" : \"code\",\r\n\t\"sortOrder\" : \"DESCENDING\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoiceCategory/list",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoiceCategory",
								"list"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5402 - BA update API",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "859d05cc-3df5-4608-bdde-84a10946ade9",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5402_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a55c0e62-a9c2-41e9-b833-f2860a8a644f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5402_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5402_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "985b846c-4eca-4526-9f0a-3ae066a58eaf",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5402\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8a909e0-6027-49fd-a97a-38127687ce2b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5402\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24dc70ad-55a3-425a-bf1d-f99717f911e0",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5402_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5402\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5402_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5402\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check BA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c01b9fb-d35c-4fb7-ac7f-82979e927197",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"MR\").is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"TEST\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "251948dc-c846-4c6f-9b73-21e26252b6a8",
										"exec": [
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n        \"lastName\": \"Changed\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update - last name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86446e56-9535-4371-84ac-b4aa758d8b46",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"MR\").is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"Changed\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - title",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a674e601-b5e6-4515-914c-4ddd93bd5763",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n    \t\"title\":\"\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update - title",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8e1b754-4483-44d8-a6e6-fb969cc2f358",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(null).is.to.equal(jsonData.billingAccount.name.title);\r",
											"    pm.expect(\"created\").is.to.equal(jsonData.billingAccount.name.firstName);\r",
											"    pm.expect(\"Changed\").is.to.equal(jsonData.billingAccount.name.lastName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update BA - delete name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16979328-1859-4971-acaa-ad2a6e0d94e2",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\"SUCCESS\").is.to.equal(jsonData.status);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"BA_{{testCode}}_CH_5402_1\",\n    \"name\": {\n        \"title\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\"\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check BA after update",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b872dde5-9af1-4487-954c-08a33d086413",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(undefined).is.to.equal(jsonData.billingAccount.name);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode=BA_{{testCode}}_CH_5402_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"billingAccount"
									],
									"query": [
										{
											"key": "billingAccountCode",
											"value": "BA_{{testCode}}_CH_5402_1"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e31e30f3-78af-4f1d-855c-02256ddb08f1",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"timestamp.iso\", (new Date()).toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "52725c5e-3543-4b73-b1ae-bafbff2e43e1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5411 - Customer account balance",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c7320dcc-9ead-46e7-bd3c-26d31d67248a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5411_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "750e34a3-4422-427b-bbcb-33e4f11e91c6",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5411_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5411_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b885a9fc-7f12-4c0a-84d7-9102a56b30fa",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5411\",\r\n\t\t\"description\":\"Seller 5411\",\r\n    \t\"countryCode\": \"{{counrty_code}}\",\r\n    \t\"languageCode\": \"{{language}}\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "420a312b-82f6-4757-a7a1-af725ce8b64c",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5411\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18678403-3925-4185-a537-ee6cdbe64908",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"{{test_email}}\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5411_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5411\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"{{currency}}\",\r\n\t\"countryCode\": \"{{counrty_code}}\",\r\n\t\"languageCode\": \"{{language}}\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5411_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"{{first_name}}\",\r\n\t\"lastName\": \"{{last_name}}\",\r\n\t\"phoneNumber\": \"{{phone}}\",\r\n\t\"address1\": \"{{address}}\",\r\n\t\"address2\": \"{{address}}\",\r\n\t\"zipCode\": \"{{zip_code}}\",\r\n\t\"city\": \"{{city}}\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5411\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create accounting code 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e1ac203-084b-40f9-9da7-5e96c9dd896a",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_AccountingCode_1\",\n    \"description\": \"Accounting code 1\",\n    \"chartOfAccountTypeEnum\": \"EXPENSE\",\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\",\n    \"reportingAccount\": \"sales\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/accountingCode",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"accountingCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create accounting code 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18972981-2877-4b41-b1e5-0323c9392b69",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_AccountingCode_2\",\n    \"description\": \"Accounting code 2\",\n    \"chartOfAccountTypeEnum\": \"EXPENSE\",\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\",\n    \"reportingAccount\": \"sales\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/accountingCode",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"accountingCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 1 - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9f46b27-4a19-4306-8783-c2581d733c00",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C1</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>1</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>1</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_2</code>\n    <description>{{testCode}}_AccountingCode_2</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 1 - 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dbc371cd-4c7f-4528-9376-4a74a02d7a9a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D1</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>2</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>2</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 2 - 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "590ff381-13b9-497d-9fe3-9641631180be",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.environment.set('creditOP',jsonData.message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C2</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>3</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>3</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>FOR_MATCH_20</code>\n    <description>FOR_MATCH_20</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 2 - 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1309a53-97d6-492b-bbdc-940b4746d005",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.environment.set('debitOP',jsonData.message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D2</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>3</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>3</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create debit account op 3 - 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdbd7a86-3800-4dc5-9148-badf8b883369",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>DEBIT</transactionCategory>\n    <reference>D3</reference>\n    <accountCode>{{testCode}}_AccountingCode_1</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_1</accountCodeClientSide>\n    <amount>5</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>5</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>{{testCode}}_AccountingCode_1</code>\n    <description>Fact test</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 4 - 10 Litigation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abfa51a6-1cb3-443a-a60e-c9f3cf28dbcd",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>2017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>2017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>10</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>10</unMatchingAmount>\n    <matchingStatus>I</matchingStatus>\n    <code>LITIGATION1</code>\n    <description>LITIGATION1</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <excludedFromDunning>false</excludedFromDunning>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 5 - 15 future date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01b80150-1635-46c3-82cf-d9cf4b0c9b99",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>3017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>3017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>15</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>15</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>FUTURE_DATE</code>\n    <description>Future Date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>3017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 6 - 20  past date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09719b74-96c3-4997-887e-74167b7b99c0",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>1017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>1017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>20</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>20</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>PAST_DATE</code>\n    <description>Past Date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>1017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create credit account op 7 - 25 future due date, past tx date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e839e98b-fc32-4636-8cf0-fb942a440613",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<AccountOperation>\n    <dueDate>3017-10-31</dueDate>\n    <type>OCC</type>\n    <transactionDate>1017-10-13</transactionDate>\n    <transactionCategory>CREDIT</transactionCategory>\n    <reference>C3</reference>\n    <accountCode>{{testCode}}_AccountingCode_2</accountCode>\n    <accountCodeClientSide>{{testCode}}_AccountingCode_2</accountCodeClientSide>\n    <amount>25</amount>\n    <matchingAmount>0</matchingAmount>\n    <unMatchingAmount>25</unMatchingAmount>\n    <matchingStatus>O</matchingStatus>\n    <code>X1234</code>\n    <description>Future due date, past tx date</description>\n    <customerAccount>CA_{{testCode}}_CH_5411_1</customerAccount>\n    <otherCreditAndCharge>\n        <operationDate>2017-10-13</operationDate>\n    </otherCreditAndCharge>\n</AccountOperation>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Match operations debit and credit 2-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d828d05-5013-45f3-9a02-bc442ce9b2f2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<MatchOperationRequest>\n    <customerAccountCode>CA_{{testCode}}_CH_5411_1</customerAccountCode>\n    <accountOperations>\n        <accountOperation>\n            <id>{{creditOP}}</id>\n        </accountOperation>\n        <accountOperation>\n            <id>{{debitOP}}</id>\n        </accountOperation>\n    </accountOperations>\n</MatchOperationRequest>"
								},
								"url": {
									"raw": "{{opencell.url}}/accountOperation/matchOperations",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"accountOperation",
										"matchOperations"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "560c253f-39e7-4c23-b43c-c8c1eba55f0d",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(-24).is.to.equal(jsonData.customerAccount.balance);\r",
											"    pm.expect(-14).is.to.equal(jsonData.customerAccount.totalInvoiceBalance);\r",
											"    pm.expect(-49).is.to.equal(jsonData.customerAccount.accountBalance);\r",
											"    pm.expect(-56).is.to.equal(jsonData.customerAccount.creditBalance);\r",
											"    pm.expect(-64).is.to.equal(jsonData.customerAccount.totalBalance);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode=CA_{{testCode}}_CH_5411_1",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"customerAccount"
									],
									"query": [
										{
											"key": "customerAccountCode",
											"value": "CA_{{testCode}}_CH_5411_1"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5388 - Invoice notifications",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create calendar for BC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82bfc7d1-2df5-4e9a-b2e7-a2eb63af7146",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{testCode}}_CAL_5388_BC\",\n  \"description\": \"Monthly (1st of the month)\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JANUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"FEBRUARY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MARCH\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"APRIL\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"MAY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JUNE\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"JULY\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"AUGUST\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"SEPTEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"OCTOBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"NOVEMBER\"\n\t  },\n\t  {\n\t    \"day\": \"1\",\n\t    \"month\": \"DECEMBER\"\n\t  }\n  ]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create calendar for Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ba22eb6-05b0-4626-bb56-82ca48bf03c4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_CAL_5388_REC\",\n    \"description\": \"1 day period\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/calendar/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"calendar",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create BillingCycle 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912004b1-3536-4ebc-906d-f3214c174ffd",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_BC_5388_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"0\",\r\n\t\"invoiceDateDelay\": \"0\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5388_BC\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billingCycle",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Seller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0148e796-ee02-41d1-bf30-2bf202f755a5",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n    \t\"code\": \"{{testCode}}_SELLER_5388\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\"\r\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/seller/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"seller",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Class",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b82ad967-ab91-4997-b856-67fb23ded572",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_taxClass_5388\",\r\n    \"description\": \"Tax class\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxClass/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxClass",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aaabe9d7-e306-42ab-b14b-f19f92a26c79",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\":\"{{testCode}}_taxCategory_5388\",\r\n\t\"description\":\"Tax category\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "tax|{{testCode}}_TAX_5388_20|VAT 20%|20|445710000",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "818182a4-1033-4757-a6b2-b7eec9489566",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{request.label.1}}\",\n  \"description\": \"{{request.label.2}}\",\n  \"percent\": \"{{request.label.3}}\",\n  \"accountingCode\": \"{{request.label.4}}\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/tax/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"tax",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tax Mapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2549d62a-88e6-4e91-91f0-4886bfecbe61",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountTaxCategoryCode\": \"{{testCode}}_taxCategory_5388\",\r\n    \"chargeTaxClassCode\": \"{{testCode}}_taxClass_5388\",\r\n    \"taxCode\": \"{{testCode}}_TAX_5388_20\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"taxMapping",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5388",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0eba22ca-b002-495b-8bea-7c66727f46ca",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.1}}\",\n\t\"description\": \"Invoice category\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "INV_CATEGORY|{{testCode}}_INV_CAT_5388|{{testCode}}_INV_SUBCAT_5388",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ceec3c14-1b73-4df3-84ae-7c81bd06e6a7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\": \"{{request.label.2}}\",\n\t\"invoiceCategory\": \"{{request.label.1}}\",\n\t\"accountingCode\": \"701000000\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"invoiceSubCategory",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6bd994a0-b400-4203-b12f-89cbba236d5b",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5388\",\r\n\t\"invoiceSubCategory\": \"{{testCode}}_INV_SUBCAT_5388\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"calendar\": \"{{testCode}}_CAL_5388_REC\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{testCode}}_taxClass_5388\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"recurringChargeTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1f2c52c-ff3f-422f-bc32-95877c2f24e7",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_SERVICE_5388\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{testCode}}_REC_5388\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"serviceTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Offer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "955dc9a4-d9a6-4b49-bac4-c103dd53d7ff",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_OFFER_5388\",\n    \"name\": \"{{testCode}}_OFFER_5388\",\n    \"disabled\": \"false\",\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{testCode}}_SERVICE_5388\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"offerTemplate",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Price Plan  Recurring",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65ac61da-717a-49ca-a4d1-702ce40838ba",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"code\": \"{{testCode}}_REC_5388\",\r\n\t\"eventCode\": \"{{testCode}}_REC_5388\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"catalog",
										"pricePlan",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrUpdate Account Hierarchy 1 SUCCESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "659a612d-7ff7-4193-8d32-edf476d412d7",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH_5388_1\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER_5388\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC_5388_1\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\",\r\n\t\"taxCategoryCode\":\"{{testCode}}_taxCategory_5388\"\r\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"account",
										"accountHierarchy",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5987fbfd-3589-42f2-ab66-ce8971167ce8",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "089c6853-1000-44e6-9669-5b326f7554d3",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-2, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus2Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"code\": \"{{testCode}}_SUB_5388_1\",\r\n    \"userAccount\": \"UA_{{testCode}}_CH_5388_1\",\r\n    \"offerTemplate\": \"{{testCode}}_OFFER_5388\",\r\n    \"subscriptionDate\": \"{{todayMinus2Month}}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate services 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8788cc78-7924-4cd6-b3d8-9f1c660f081c",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a0c1c536-3018-424d-8a30-5c186aac4a2c",
										"exec": [
											"var moment = require('moment');",
											"",
											"var todayMinus2Month = moment().startOf('month').add(-2, 'month').zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\")",
											"pm.variables.set(\"todayMinus2Month\", todayMinus2Month);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscription\": \"{{testCode}}_SUB_5388_1\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{testCode}}_SERVICE_5388\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{todayMinus2Month}}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/activateServices",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"activateServices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create script",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "799b0841-c828-4ad2-b5c2-b88ebce0281b",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql();",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "         \t\n\n<ScriptInstance code=\"org.meveo.test.InvoiceNotifications{{testCode}}Script\">\n    <type>JAVA</type>\n    <script>\n        <![CDATA[\n\t\t\tpackage org.meveo.test;\t\t\t\n\t\t\timport java.util.Map;\n\t\t\timport java.math.BigDecimal;\n\t\t\timport org.meveo.admin.exception.BusinessException;\n\t\t\timport org.meveo.model.admin.User;\n\t\t\timport org.meveo.model.crm.Provider;\n\t\t\timport org.slf4j.Logger;\n\t\t\timport org.slf4j.LoggerFactory;\n\t\t\timport org.meveo.service.script.Script;\n\t\t\timport org.meveo.model.billing.Invoice;\n\t\t\t\n\t\t\tpublic class InvoiceNotifications{{testCode}}Script extends Script {\n\t\t\t  \t\n\t\t\t\tpublic void execute(Map<String,Object> context) throws BusinessException{\n\t\t\t\t\tInvoice invoice = (Invoice)context.get(Script.CONTEXT_ENTITY_OR_EVENT);\n\t\t\t\t\tinvoice.setComment((invoice.getComment()==null?\"\":invoice.getComment())+\" \"+context.get(\"comment\"));\n\t\t\t\t}\n\t\t\t}\n\t\t   ]]>\n            \n    \n    </script>\n</ScriptInstance>"
								},
								"url": {
									"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"scriptInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice number assigned notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2505ee2-8b56-4416-be21-a7b999e22dce",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"INVOICE_NUMBER_ASSIGNED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"invoice_number_assigned\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice xml generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bae8416f-29a7-4c0b-8ff4-6062911d7d7b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"XML_GENERATED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"xml_generated\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Invoice pdf generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09501e6c-3683-48bc-a042-be889b580d41",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED\",\n    \"disabled\": false,\n    \"classNameFilter\": \"org.meveo.model.billing.Invoice\",\n    \"eventTypeFilter\": \"PDF_GENERATED\",\n    \"scriptInstanceCode\": \"org.meveo.test.InvoiceNotifications{{testCode}}Script\",\n    \"scriptParams\": {\n        \"comment\": \"pdf_generated\"\n    },\n    \"priority\": 1,\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/notification/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"createOrUpdate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test",
					"item": [
						{
							"name": "Check wallet operations for account 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532c7196-d1bb-4658-ba6f-1b5ab136a12c",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    var expected = moment().zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\");\r",
											"    pm.expect(expected).is.to.equal(moment(jsonData.data[0].operationDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"operationDate\",\n    \"sortOrder\":\"DESCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"operationDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/WalletOperation",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"WalletOperation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute RT job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50e36cad-7cf9-456f-9c28-967b340286d3",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){",
											"          console.log(\"Sleeping for 5 seconds before next request.\");",
											"  }, 5000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"RT_Job\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check rated transactions status Open",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0d43392-79d4-498f-b077-99a846997bbe",
										"exec": [
											"var moment = require('moment');\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    var expected = moment().zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\");\r",
											"    pm.expect(expected).is.to.equal(moment(jsonData.data[0].usageDate).zone(Number(pm.environment.get(\"timezoneOffset\"))).format(\"YYYY-MM-DD\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"subscription.code\": \"{{testCode}}_SUB_5388_1\",\n        \"status\":\"OPEN\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"usageDate\",\n    \"sortOrder\":\"DESCENDING\",\n    \"genericFields\":[\"id\",\"code\", \"description\", \"usageDate\", \"startDate\", \"endDate\", \"amountWithoutTax\", \"quantity\", \"status\"]\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/RatedTransaction",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"RatedTransaction"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Billing run",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07560523-c7a0-46eb-a028-5081ff9d6a5d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billingCycleCode\": \"{{testCode}}_BC_5388_1\",\n    \"billingRunTypeEnum\": \"FULL_AUTOMATIC\",\n    \"referenceDate\": \"NEXT_INVOICE_DATE\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/invoicing/createBillingRun",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"invoicing",
										"createBillingRun"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute Invoicing job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5829ac35-6c17-4bf6-a291-865e0d73dcff",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"INV_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61cece47-23ee-4842-9d2a-b220e27c814b",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute XML job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99d34f3f-eaa1-4336-b260-138acad43183",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"XML_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice after XML",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f07aec5a-1419-4903-813b-03b747008501",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned xml_generated\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Execute PDF job",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ff2c92d-2a96-429c-ae25-efd19cc20b58",
										"exec": [
											"pm.test(request.name + \" - Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(request.name + \" - Check Status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(request.name + \" - Check ErrorCode\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
											"});",
											"",
											"pm.test(request.name + \" - Check Message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.message).to.eql(jsonData.jobExecutionResultDto.id+\"\");",
											"});",
											"",
											"setTimeout(function(){}, 10000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"PDF_JOB\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Invoice after PDF",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2739847-13d1-4583-b53b-c39bc0ebf8f4",
										"exec": [
											"\r",
											"\r",
											"var jsonData = pm.response.json(); \r",
											"\r",
											"// Compare results\r",
											"pm.test(\"Results\", function () {\r",
											"    pm.expect(\" invoice_number_assigned xml_generated pdf_generated\").is.to.equal(jsonData.data[0].comment);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": {\n        \"billingAccount.code\": \"BA_{{testCode}}_CH_5388_1\"\n    },\n    \"limit\":1,\n    \"sortBy\": \"id\",\n    \"sortOrder\":\"DESCENDING\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/v2/generic/all/Invoice",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"v2",
										"generic",
										"all",
										"Invoice"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cleanup",
					"item": [
						{
							"name": "Delete Invoice number assigned notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04ae4e01-bd0a-430a-9370-412f6a14bab2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_NUMBER_ASSIGNED"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invoice XML generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "acca26fa-10ef-4151-ac46-c882f8603780",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_XML_GENERATED"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Invoice PDF generated notification",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9715b8f6-f84f-428a-8c55-73b4b4939974",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{opencell.url}}/notification/{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"notification",
										"{{testCode}}_NOTIF_5388_INVOICE_PDF_GENERATED"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "87b2a3dc-668f-46b3-b511-6fdd5a39fef2",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"timestamp.iso\", (new Date()).toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cbc63dfb-befc-4cdb-a9f2-4d8773835f98",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5404 - Order WO by startDate before aggregation",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Settings",
							"item": [
								{
									"name": "Provider & Seller",
									"item": [
										{
											"name": "Seller hierarchy",
											"item": [
												{
													"name": "S|MAIN_SELLER|Opencell",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"code\" : \"{{request.label.1}}\",\r\n\t\"description\" : \"{{request.label.2}}\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"countryCode\": \"FR\",\r\n    \"languageCode\": \"ENG\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": \"Esc. A\",\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": null\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"billing@opencellsoft.com\",\r\n        \"phone\": \"0123456789\",\r\n        \"mobile\": \"0678912345\",\r\n        \"fax\": null\r\n    }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL1|Seller level 1|MAIN_SELLER",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Proxy-Authorization",
																"value": "{{proxy.auth}}"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"address\": {\n        \"address1\": \"52 rue Kléber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"invoiceTypeSequences\": {\n        \"COM\": {\n            \"prefixEL\": \"{{request.label.1}}\",\n            \"sequenceSize\": 6\n        }\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "S|S_LVL2|Seller level 2|S_LVL1",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"code\" : \"{{request.label.1}}\",\n\t\"description\" : \"{{request.label.2}}\",\n\t\"parentSeller\" : \"{{request.label.3}}\",\n\t\"currencyCode\" : \"EUR\",\n\t\"countryCode\" : \"FR\",\n\t\"languageCode\" : \"FRA\",\n    \"contactInformation\": null,\n    \"registrationNo\": \"REG999999999\",\n    \"vatNo\": \"VAT999999999\",\n    \"address\": {\n        \"address1\": \"52 rue Kléber\",\n        \"address2\": null,\n        \"address3\": null,\n        \"zipCode\": \"92300\",\n        \"city\": \"Levallois-Perret\",\n        \"country\": \"FR\",\n        \"state\": null\n    },\n    \"customFields\": { \"customField\": []}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/seller/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"seller",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "CFT|code=CF_PROV_MATRIX_MULTI|target=Provider|type=MULTI_VALUE|storage=MATRIX",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{testCode}}\",\n    \"description\": \"Custom field {{storage}} of {{inputType}} on {{target}}\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"[fr] Champ personnalisé {{storage}} de {{inputType}} sur {{target}}\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"[en] Custom field {{storage}} of {{inputType}} on {{target}}\"\n        }\n    ],\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"useInheritedAsDefaultValue\": false,\n    \"storageType\": \"{{storage}}\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:CustomTab|ENG=CustomTab(en)|FRA=CustomTab(fr):0;fieldGroup:CustomGroup|ENG=CustomGroup(en)|FRA=CustomGroup(fr):0;field:0\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"inputString\",\n            \"label\": \"Input string\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 2,\n            \"code\": \"inputRON\",\n            \"label\": \"Input RON\",\n            \"keyType\": \"RON\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"outputLong\",\n            \"label\": \"Output long\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"outputDouble\",\n            \"label\": \"Output double\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"outputString\",\n            \"label\": \"Output string\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "providerCF|code=CF_PROV_MATRIX_MULTI",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customFields\": {\n        \"customField\": [\n                {\n                    \"code\": \"{{testCode}}\",\n                    \"mapValue\": {\n                        \"AAA|<0.0\": {\n                            \"value\": \"0|0.0|Zero\"\n                        },\n                        \"AAA|0.0<111.1\": {\n                            \"value\": \"1|1.1|One\"\n                        },\n                        \"AAA|111.1<\": {\n                            \"value\": \"2|2.2|Two\"\n                        },\n                        \"BBB|0.0<111.1\": {\n                            \"value\": \"3|3.3|Three\"\n                        },\n                        \"BBB|111.1<\": {\n                            \"value\": \"4|4.4|Four\"\n                        }\n                    }\n                }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/updateProviderCF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"updateProviderCF"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{provider.code}}\",\n    \"description\": \"{{template.label}}\",\n    \"enterprise\": \"true\",\n    \"rounding\": 6,\n    \"roundingMode\": \"NEAREST\",\n    \"invoiceRounding\": 2,\n    \"invoiceRoundingMode\": \"NEAREST\",\n    \"invoiceConfiguration\": {\n        \"displaySubscriptions\": \"true\",\n        \"displayServices\": \"true\",\n        \"displayOffers\": \"true\",\n        \"displayEdrs\": \"true\",\n        \"displayProvider\": \"true\",\n        \"displayCfAsXML\": \"true\",\n        \"displayPricePlans\": \"true\",\n        \"displayDetail\": \"true\",\n        \"displayChargesPeriods\": \"true\",\n        \"displayFreeTransacInInvoice\": \"true\",\n        \"displayBillingCycle\": \"true\",\n        \"displayOrders\": \"true\"\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CF_PROV_PROJECT_VERSION",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "2a261cc4-617a-4427-adbf-46408ea84f01",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label}}_{{$timestamp}}\",\r\n    \"description\": \"{{project.code}} {{project.type}} {{project.version}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"Provider\",\r\n    \"defaultValue\": \"{{timestamp.iso}}\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false,\r\n    \"guiPosition\": \"tab:Project versions:999\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Calendars",
									"item": [
										{
											"name": "CAL_PERIOD_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_YEARLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 12,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 1\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_MONTHLY_1ST",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "9d775cf0-4edb-4920-b5ad-a95cd07204db",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"1st of the month\",\n  \"calendarType\": \"YEARLY\",\n  \"days\": [\n  {\n    \"day\": \"1\",\n    \"month\": \"JANUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"FEBRUARY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MARCH\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"APRIL\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"MAY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JUNE\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"JULY\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"AUGUST\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"SEPTEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"OCTOBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"NOVEMBER\"\n  },\n  {\n    \"day\": \"1\",\n    \"month\": \"DECEMBER\"\n  }\n  ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 1,\n    \"periodUnit\": \"DAY_OF_MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 5,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAL_PERIOD_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"calendarType\": \"PERIOD\",\n    \"periodLength\": 2,\n    \"periodUnit\": \"MONTH\",\n    \"nbPeriods\": 0\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Billing cycles",
									"item": [
										{
											"name": "BC_PERIOD_DAILY_ONCE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"One day period, only once\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"0\",\n  \"invoicingThreshold\": 0.01,\n  \"calendar\": \"CAL_PERIOD_DAILY_ONCE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_1ST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly 1st\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"1\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_MONTHLY_1ST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "BC_MONTHLY_PERIOD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{request.label}}\",\n  \"description\": \"Monthly period\",\n  \"billingTemplateName\": null,\n  \"invoiceDateDelay\": \"0\",\n  \"dueDateDelay\": \"30\",\n  \"invoiceDateProductionDelay\": \"0\",\n  \"transactionDateDelay\": \"2\",\n  \"invoicingThreshold\": null,\n  \"calendar\": \"CAL_PERIOD_MONTHLY\",\n  \"referenceDate\": \"NEXT_INVOICE_DATE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Taxes",
									"item": [
										{
											"name": "Tax rates",
											"item": [
												{
													"name": "tax|code=TAX_20|desc=VAT 20%|percentage=20|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "bb1f8db1-7e25-42b4-adc4-00e26dc3754a",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=TAX_10|desc=VAT 10%|percentage=10|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "2e06b495-785b-4b4d-84d2-c0865886265e",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "tax|code=NO_TAX|desc=No tax|percentage=0|accCode=445710000",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "cd30bdb3-13ee-4bf7-8079-2aafea5cdec9",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"{{code}}\",\n  \"description\": \"{{desc}}\",\n  \"percent\": \"{{percentage}}\",\n  \"accountingCode\": \"{{accCode}}\",\n  \"languageDescriptions\": [\n  {\n    \"languageCode\": \"FRA\",\n    \"description\": \"{{desc}}\"\n  }\n  ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/tax/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"tax",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax categories (account)",
											"item": [
												{
													"name": "taxCat|code=REGULAR|desc=Regular accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "fff1b0f4-3f97-4e13-98dd-78c1488d1ae5",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxCat|code=EXEMPTED|desc=Exempted accounts",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "2d779dda-1dd5-4d1c-8332-6e84d23d662d",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax classes (charge)",
											"item": [
												{
													"name": "taxClass|code=NORMAL|desc=Product with normal tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "6f98244a-781a-4e8d-89e9-eb87e2e59909",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=REDUCED|desc=Products with reduced tax",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d6ab3d4a-592c-4053-af35-b2ee68d106d6",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxClass|code=NO_TAX|desc=Products with no VAT",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "91f5dadc-e6b1-4dca-9bcd-792ca175bd0b",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"descriptionI18n\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{desc}}\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxClass/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxClass",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Tax mapping",
											"item": [
												{
													"name": "taxMapping|priority=100|taxCat=EXEMPTED|taxClass=|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "03f152e1-508c-4083-a16f-95156ae1bf02",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=20|taxCat=REGULAR|taxClass=NO_TAX|buyer=|tax=NO_TAX",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "de48dd4e-0393-4626-83c1-b4689aedf89e",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=1|taxCat=REGULAR|taxClass=NORMAL|buyer=|tax=TAX_20",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "6e348678-d9dd-4fbf-8a13-e714e8a9f4ff",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=2|taxCat=REGULAR|taxClass=REDUCED|buyer=|tax=TAX_10",
													"event": [
														{
															"script": {
																"type": "text/javascript",
																"id": "5a5e52bd-51eb-4382-8538-4bf757376ec4",
																"exec": [
																	""
																]
															},
															"listen": "prerequest"
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												},
												{
													"name": "taxMapping|priority=10|taxCat=REGULAR|taxClass=NORMAL|buyer=US|tax=TAX_10",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"id": "daeeb02e-c1b6-4c7c-a566-b9efbd126b4a",
																"exec": [
																	""
																]
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"accountTaxCategoryCode\": \"{{taxCat}}\",\n    \"chargeTaxClassCode\": \"{{taxClass}}\",\n    \"buyerCountryCode\": \"{{buyer}}\",\n    \"taxCode\": \"{{tax}}\",\n    \"priority\": {{priority}}\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/taxMapping",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"taxMapping"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account",
									"item": [
										{
											"name": "title|code=MR|desc=Mr",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"isCompany\": \"false\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "custCat|code=CLIENT|taxCat=REGULAR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"Client\",\r\n    \"taxCategoryCode\": \"{{taxCat}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "Invoice Categories",
											"item": [
												{
													"name": "ICAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_PRD\",\n  \"description\": \"Product category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_PRD\",\n  \"description\": \"Product sub-category\",\n  \"invoiceCategory\": \"ICAT_PRD\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_REC\",\n  \"description\": \"Recurring category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_REC",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_REC\",\n  \"description\": \"Recurring default sub-category\",\n  \"invoiceCategory\": \"ICAT_REC\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_OSH",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_OSH\",\n  \"description\": \"One shot category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSS\",\n  \"description\": \"Oneshot Subscription sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OST",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OST\",\n  \"description\": \"Oneshot Termination sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_OSO",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_OSO\",\n  \"description\": \"Oneshot Other sub-category\",\n  \"invoiceCategory\": \"ICAT_OSH\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ICAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ICAT_USG\",\n  \"description\": \"Usage category\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "ISCAT_USG",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"ISCAT_USG\",\n  \"description\": \"Usage default sub-category\",\n  \"invoiceCategory\": \"ICAT_USG\",\n  \"customFields\": null\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"invoiceSubCategory",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "invoiceType|code=COM|desc=Invoice",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{code}}\",\r\n  \"description\": \"{{desc}}\",\r\n  \"occTemplateCode\": \"INV_STD\",\r\n  \"occTemplateNegativeCode\": null,\r\n  \"billingTemplateName\": \"default\",\r\n  \"sequenceDto\": {\r\n    \"prefixEL\": \"#{invoice.invoiceType.code}-{{template.code}}-#{invoice.seller.code}-#{mv:formatDate(invoice.getInvoiceDate(),'yyyyMMdd')}-\",\r\n    \"sequenceSize\": 4,\r\n    \"currentInvoiceNb\":null\r\n  },\r\n  \"xmlFilenameEL\": \"XML_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"pdfFilenameEL\": \"PDF_#{invoice.billingAccount.code}_#{invoice.invoiceNumber}\",\r\n  \"sellerSequence\": null,\r\n  \"appliesTo\": [\r\n    \"COM\",\r\n    \"ADJ\"\r\n  ],\r\n  \"matchingAuto\": false,\r\n  \"useSelfSequence\": true\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Termination reasons",
									"item": [
										{
											"name": "TR_NONE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_NONE\",\n\t\"description\": \"Termination with no action (no fees, no reimbursment)\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_AGREEMENT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"TR_AGREEMENT\",\n\t\"description\": \"Termination with Charge Agreement\",\n\t\"applyAgreement\": true,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": false,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_REIMBURSE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Termination with Reimbursment\",\n    \"applyAgreement\": false,\n    \"applyReimbursment\": true,\n    \"applyTerminationCharges\": false,\n    \"reimburseOneshots\": true,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "TR_FEE",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{request.label}}\",\n\t\"description\": \"Termination fee\",\n\t\"applyAgreement\": false,\n\t\"applyReimbursment\": false,\n\t\"applyTerminationCharges\": true,\n    \"reimburseOneshots\": false,\n    \"overrideProrata\": \"NO_OVERRIDE\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Notifications",
									"item": [
										{
											"name": "SCRIPT|CreateAccess|Creates an access on Subscription creation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2adc9f64-d6b6-4a8b-85cc-bc76c0a7bdac",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Date;\r\nimport java.util.Map;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.admin.User;\r\nimport org.meveo.model.billing.Subscription;\r\nimport org.meveo.model.mediation.Access;\r\n\r\nimport org.meveo.service.medina.impl.AccessService;\r\nimport org.meveo.service.script.Script;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class CreateAccess extends Script {    \r\n    private static final Logger log = LoggerFactory.getLogger(CreateAccess.class);        \r\n\r\n    private AccessService accessService = (AccessService) getServiceInterface(\"AccessService\");\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context={}\", context);\r\n\r\n        Subscription subscription = (Subscription) context.get(\"entity\");\r\n        if(subscription == null){\r\n            throw new BusinessException(\"subscription is null\");\r\n        }\r\n        log.debug(\"subscription={}\", subscription);\r\n\r\n        Access access = new Access();\r\n        access.setSubscription(subscription);\r\n        access.setAccessUserId(subscription.getCode());\r\n        access.setStartDate(null);\r\n        access.setEndDate(null);\r\n        accessService.create(access);\r\n    }\r\n}]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "notifSubscriptionCreate",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"updatedCode\": null,\r\n    \"code\": \"subscriptionCreate\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.CreateAccess\",\r\n    \"scriptParams\": {\r\n      \"entity\": \"#{event}\"\r\n    },\r\n    \"counterTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Channels",
									"item": [
										{
											"name": "chan|code=PHONE|desc=Telephone",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=EMAIL|desc=E-mail",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=WEB|desc=Online store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "chan|code=RETAIL|desc=Retail store",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "saveHelperData",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "showPassword",
															"value": false,
															"type": "boolean"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"code\": \"{{code}}\",\n\t\"description\": \"{{desc}}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "aggregationMatrix",
									"item": [
										{
											"name": "CF WalletOperation",
											"item": [
												{
													"name": "cf_wo_option_tarifaire_fournisseur",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4478dc51-143d-4b38-a019-7d4b0bb1a85a",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label}}\",\r\n    \"description\": \"option tarifaire fournisseur\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_id_operation_de_traitement",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "182f263f-bd44-4448-b253-005bfce797cc",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label}}\",\r\n    \"description\": \"operation de traitement\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_niveau_elec_verte|niveau elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f62d711d-7b38-41e2-9a93-9189a3aa1d71",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_origine_elec_verte|origine elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f25e096f-2b4d-42a3-995b-56db95272faf",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_wo_techno_elec_verte|Techno elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "fb03734b-d6af-4995-a24c-4261a9c6951b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"WalletOperation\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "CF RatedTransaction",
											"item": [
												{
													"name": "cf_rt_niveau_elec_verte|niveau elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "557204f3-5b21-421e-8ad1-b417c6437dbc",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_rt_origine_elec_verte|origine elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e3d807e1-39be-4ffb-bf6c-46a3bcda1d8a",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "cf_rt_techno_elec_verte|Techno elec verte",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d549bd44-1608-4dae-9773-d95679493473",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{request.label.0}}\",\r\n    \"description\": \"{{request.label.1}}\",\r\n    \"fieldType\": \"STRING\",\r\n    \"appliesTo\": \"RatedTransaction\",\r\n    \"defaultValue\": \"\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"allowEdit\": false,\r\n    \"hideOnNew\": false,\r\n    \"cacheValue\": false\r\n}\r\n"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "aggregation ABO ENErGIE",
											"item": [
												{
													"name": "Create|WalletOperationAggregationSettings|code=aggreg_abo_energie",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "e07aa65e-f0c2-4741-a423-27230e4bbc5c",
																"exec": [
																	"\r",
																	"var jsonData = pm.response.json();\r",
																	"pm.globals.set(\"aggregationId\", jsonData.id);\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\":\"{{code}}\",\r\n    \"globalAggregation\":false,\r\n    \"periodAggregation\":true,\r\n    \"periodEndDateIncluded\":false,\r\n    \"aggregationRounding\":1,\r\n    \"aggregationRoundingMode\":\"NEAREST\",\r\n    \"additionalOrderBy\":\"id\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=invoiceSubCategory|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=tax|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=taxClass|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountWithoutTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountWithTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=amountTax|action=SUM|value=|alias=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"groupBy\":\"SIGN\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=edr|action=EMPTY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountWithoutTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountWithTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=unitAmountTax|action=AVG|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=code|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=cf_wo_option_tarifaire_fournisseur|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"customField\":true,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=cf_wo_id_operation_de_traitement|action=KEY|value=|alias=parameter1",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"customField\":true,\r\n    \"alias\":\"parameter1\",\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=endDate|action=MAX|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=startDate|action=MIN|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=operationDate|action=MIN|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=seller|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create|WalletOperationAggregationLine|field=subscription.userAccount.billingAccount|action=KEY|value=",
													"request": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"field\":\"{{field}}\",\r\n    \"action\":\"{{action}}\",\r\n    \"value\":\"{{value}}\",\r\n    \"required\":false,\r\n    \"aggregationSettings\":{\r\n        \"id\":{{aggregationId}}\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{opencell.url}}/v2/generic/{{request.label.1}}",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"v2",
																"generic",
																"{{request.label.1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Filters",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Catalog",
							"item": [
								{
									"name": "Rating scripts",
									"item": [
										{
											"name": "SCRIPT|LogContext|Logs the context",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7aa53056-ba85-4d5a-aebd-1399cd777de5",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class LogContext extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogContext.class);\r\n    \r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.trace(\"EXECUTE context {}\", context);\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|code=ThrowException|desc=Throws an exception with WO content",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a19e5032-802b-4eb1-b01e-d765844ab73d",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{code}}</code>\r\n        <description>{{desc}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception with WO content\r\n * @author schambrin\r\n */\r\npublic class ThrowException extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(ThrowException.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n\t\tString msg = \"WalletOperation {\"\r\n\t\t\t+\"code:\"+wo.getCode()+\", \"\r\n\t\t\t+\"description:\"+wo.getDescription()+\", \"\r\n\t\t\t+\"operationDate:\"+wo.getOperationDate()+\", \"\r\n\t\t\t+\"amountWithoutTax:\"+wo.getAmountWithoutTax()+\", \"\r\n\t\t\t+\"tax:\"+wo.getTax()+\", \"\r\n\t\t\t+\"tax_percent:\"+wo.getTaxPercent()\r\n\t\t\t+\"}\";\r\n        log.error(msg);\r\n        throw new BusinessException(msg);\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|InfiniteLoop|Locks into an infinite loop",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30c3b20e-2e3d-4a9a-908f-84dabd3394ae",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script;\r\n\r\nimport java.util.Map;\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\npublic class InfiniteLoop extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(InfiniteLoop.class);\r\n\r\n    @Override\r\n    public void execute(Map<String, Object> context) {\r\n        log.debug(\"EXECUTE context {}\", context);\r\n        log.info(\"CONTEXT_ENTITY={}\", context.get(Script.CONTEXT_ENTITY));\r\n        try {\r\n            while (true) {\r\n                log.trace(\"[RATING] Sleeping 5s...\");\r\n                Thread.sleep(5000);\r\n            }\r\n        } catch (java.lang.InterruptedException e) {\r\n            log.warn(\"Interrupted !!!\");\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingSetTax|Forces tax on WO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd733b77-287f-4343-9552-3e72a0e5638c",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * A Rating Script to force a tax\r\n * @author schambrin\r\n */\r\npublic class RatingSetTax extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingSetTax.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        log.info(\"EXECUTE context {}\", context);\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"edr.taxCode={}\",wo.getEdr().getParameter5());\r\n            Tax tax = taxService.findByCode(wo.getEdr().getParameter5());\r\n            \r\n            if( tax != null){\r\n                log.info(\"override tax={}\", tax);\r\n                wo.setTax(tax);\r\n                wo.setTaxPercent(tax.getPercent());\r\n                ratingService.calculateAmounts(wo,wo.getUnitAmountWithoutTax(),null);\r\n            }\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.LogWalletOperation|Logs the WalletOperation",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09cc19d2-919d-4752-8f93-3d6a8485b8eb",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.api.dto.billing.WalletOperationDto;\r\nimport org.meveo.model.billing.WalletOperation;\r\nimport org.meveo.model.billing.Tax;\r\n\r\nimport org.meveo.service.catalog.impl.TaxService;\r\nimport org.meveo.service.billing.impl.RatingService;\r\n\r\n/**\r\n * Logs the WalletOperation\r\n * @author schambrin\r\n */\r\npublic class LogWalletOperation extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(LogWalletOperation.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        context.entrySet().stream().forEach(entry->{ log.info(\"{}={}\",entry.getKey(),entry.getValue()); });\r\n        TaxService taxService = (TaxService)getServiceInterface(\"TaxService\");\r\n        RatingService ratingService = (RatingService)getServiceInterface(\"RatingService\");\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        try {\r\n        \tlog.info(\"wo={}\",new WalletOperationDto(wo));\r\n        \tlog.info(\"wo.tax={}\", wo.getTax());\r\n\r\n        } catch(Exception e) {\r\n            log.error(\"Exception:\", e);\r\n            throw new BusinessException(e.getMessage());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SCRIPT|rating.RatingError|Throws an error if parameter2 is ERROR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25b9f105-537a-4159-a285-1613ad449cc7",
														"exec": [
															"if( pm.response.code == 200 ) { tests[\"is.compiled\"] = JSON.parse(responseBody).compilationErrors.length === 0; }"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"name": "Content-Type",
														"value": "application/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<ScriptInstance>\r\n        <code>org.meveo.service.script.{{request.label.1}}</code>\r\n        <description>{{request.label.2}} {{$timestamp}}</description>\r\n        <type>JAVA</type>\r\n        <script><![CDATA[\r\npackage org.meveo.service.script.rating;\r\n\r\nimport org.meveo.service.script.Script;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport org.meveo.admin.exception.BusinessException;\r\nimport org.meveo.model.billing.WalletOperation;\r\n\r\n/**\r\n * A Rating Script that throws an exception if param2 is ERROR\r\n * takes param3 as error message\r\n * @author schambrin\r\n */\r\npublic class RatingError extends org.meveo.service.script.Script {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(RatingError.class);\r\n\r\n    public void execute(Map<String, Object> context) throws BusinessException {\r\n        // log.info(\"EXECUTE context {}\", context);\r\n        WalletOperation wo = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\r\n\r\n        if( \"ERROR\".equals(wo.getParameter2()) ){\r\n            // log.error(\"message: {}\",wo.getParameter3());\r\n            throw new BusinessException(wo.getParameter3());\r\n        }\r\n    }\r\n}\r\n]]></script>\r\n</ScriptInstance>"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "OfferTemplateCategory",
									"item": [
										{
											"name": "ocat|code=OCAT_ROOT|parent=",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "ocat|code=OCAT_CHILD|parent=OCAT_ROOT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"Offer category {{code}}\",\n    \"disabled\": false,\n    \"name\": \"OCat {{code}}\",\n    \"offerTemplateCategoryCode\": \"{{parent}}\",\n    \"active\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Custom Fields",
									"item": [
										{
											"name": "Service",
											"item": [
												{
													"name": "CF_SE_DOUBLE (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE\",\n    \"description\": \"A double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": false,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"1.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_DOUBLE_VERSION (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_DOUBLE_VERSION\",\n    \"description\": \"A versioned double on Service\",\n    \"fieldType\": \"DOUBLE\",\n    \"useInheritedAsDefaultValue\": true,\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"2.0\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": true,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_TEMPLATE_ONLY (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_TEMPLATE_ONLY\",\n    \"description\": \"A String on service template only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING_INSTANCE_ONLY (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING_INSTANCE_ONLY\",\n    \"description\": \"A String on service instance only\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (template)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service template\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceTemplate\",\n    \"defaultValue\": \"from service template\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_STRING (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_STRING\",\n    \"description\": \"A String from service instance\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"defaultValue\": \"from service instance\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CF_SE_TIER_PRICE (instance)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"CF_SE_TIER_PRICE\",\n    \"description\": \"Tiered pricing\",\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"Tarif par tranches\"\n        },\n        {\n            \"languageCode\": \"ENG\",\n            \"description\": \"Tiered pricing\"\n        }\n    ],\n    \"fieldType\": \"MULTI_VALUE\",\n    \"appliesTo\": \"ServiceInstance\",\n    \"useInheritedAsDefaultValue\": true,\n    \"storageType\": \"MATRIX\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n\t\"guiPosition\": \"tab:Pricing|ENG=Pricing|FRA=Tarification:0;fieldGroup:Price|ENG=Price|FRA=Prix:0;field:40\",\n    \"applicableOnEl\": \"#{ true }\",\n    \"matrixColumn\": [\n        {\n            \"columnUse\": \"USE_KEY\",\n            \"position\": 1,\n            \"code\": \"tier\",\n            \"label\": \"Tier\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 1,\n            \"code\": \"volume\",\n            \"label\": \"Volume\",\n            \"keyType\": \"LONG\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 2,\n            \"code\": \"price\",\n            \"label\": \"Price\",\n            \"keyType\": \"DOUBLE\"\n        },\n        {\n            \"columnUse\": \"USE_VALUE\",\n            \"position\": 3,\n            \"code\": \"label\",\n            \"label\": \"Label\",\n            \"keyType\": \"STRING\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceTemplate|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": 1.0,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "CFT|code=CF_SE_MAP_RON_DOUBLE|target=ServiceInstance|type=DOUBLE|storage=MAP|desc=Map [RON]=Double",
													"request": {
														"method": "POST",
														"header": [
															{
																"value": "application/json",
																"key": "Content-Type"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"fieldType\": \"{{type}}\",\r\n    \"appliesTo\": \"{{target}}\",\r\n    \"defaultValue\": null,\r\n    \"storageType\": \"{{storage}}\",\r\n    \"valueRequired\": false,\r\n    \"versionable\": false,\r\n    \"triggerEndPeriodEvent\": false,\r\n    \"calendar\": null,\r\n    \"cacheValueTimeperiod\": null,\r\n    \"entityClazz\": null,\r\n    \"listValues\": null,\r\n    \"allowEdit\": true,\r\n    \"hideOnNew\": false,\r\n    \"maxValue\": null,\r\n    \"minValue\": null,\r\n    \"regExp\": null,\r\n    \"cacheValue\": false,\r\n    \"mapKeyType\": \"RON\",\r\n    \"applicableOnEl\": null,\r\n    \"indexType\": null,\r\n    \"matrixColumn\": null,\r\n    \"fieldCode\": null,\r\n    \"guiPosition\": \"tab:CustomTab:0;fieldGroup:CustomGroup;field:1\"\r\n  }"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "OfferTemplate",
											"item": [
												{
													"name": "CF|code=CF_OF_STRING|target=OfferTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "ProductTemplate",
											"item": [
												{
													"name": "CF|code=CF_PR_STRING|target=ProductTemplate|type=STRING|storage=SINGLE",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"A {{storage}} {{type}} on {{target}}\",\n    \"fieldType\": \"{{type}}\",\n    \"appliesTo\": \"{{target}}\",\n    \"defaultValue\": \"from CFT on {{target}}\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": false,\n    \"versionable\": false,\n    \"triggerEndPeriodEvent\": false,\n    \"allowEdit\": true,\n    \"hideOnNew\": false,\n    \"cacheValue\": false,\n    \"maxValue\": 200,\n    \"guiPosition\": \"tab:Tab:0;group:Group;field:1\"\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/customFieldTemplate/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"customFieldTemplate",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Counters",
									"item": [
										{
											"name": "counter|CN_USG_COUNTER_3|Counter 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|CN_USG_COUNTER_4|Counter 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\" : \"{{request.label.1}}\",\r\n  \"description\" : \"{{request.label.2}}\",\r\n  \"calendar\": \"CAL_MONTHLY_1ST\",\r\n  \"unity\": null,\r\n  \"type\": \"USAGE\",\r\n  \"ceiling\": 100,\r\n  \"disabled\": false,\r\n  \"counterLevel\": \"SI\",\r\n  \"ceilingExpressionEl\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_USG_ACCUM_C|type=USAGE|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates quantities on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_EUR_ACCUM_C|type=USAGE_AMOUNT|target=CUST|calendar=CAL_MONTHLY_1ST|desc=Accumulates amounts on the Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"{{type}}\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "counter|code=CN_MULTI_ACCUM_C|type=MULTI_VALUE|target=CUST|calendar=MONTHLY|desc=Accumulates quantity for Param2 on Customer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"disabled\": false,\n    \"calendar\": \"{{calendar}}\",\n    \"type\": \"USAGE\",\n    \"ceiling\": 0,\n    \"counterLevel\": \"{{target}}\",\n    \"ceilingExpressionEl\": null,\n    \"accumulator\": true,\n    \"accumulatorType\": \"{{type}}\",\n    \"filterEl\": \"#{ true }\",\n    \"keyEl\": \"#{ op.parameter2 }\",\n    \"valueEl\": \"#{ op.quantity }\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Charges",
									"item": [
										{
											"name": "CH_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_PRD\",\n    \"description\": \"Product\",\n    \"invoiceSubCategory\": \"ISCAT_PRD\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_DAILY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_MONTHLY\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ARR\",\n    \"description\": \"Recurring charge ARREAR\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": false,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_2DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT|Charge unit 1",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{request.label.2}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"UNIT\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2|Charge unit 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 20\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_2_bis|Charge unit 2 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit2\",\r\n    \"ratingUnitDescription\": \"unit2\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT2\",\r\n    \"triggerNextCharge\": true,\r\n    \"priority\": 21\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3|Charge unit 3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 30\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_3_bis|Charge unit 3 bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit3\",\r\n    \"ratingUnitDescription\": \"unit3\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT3\",\r\n    \"priority\": 31\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_USG_UNIT_4|Charge unit 4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"{{request.label.2}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_USG\",\r\n    \"taxClassCode\": \"NORMAL\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"inputUnitDescription\": \"unit4\",\r\n    \"ratingUnitDescription\": \"unit4\",\r\n    \"unitMultiplicator\": 1,\r\n    \"unitNbDecimal\": 6,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"filterParam1\": \"UNIT4\",\r\n    \"priority\": 40\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH|code=USG_RON|desc=Charge RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.0}}_{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"invoiceSubCategory\": \"ISCAT_USG\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"inputUnitDescription\": \"unit\",\n    \"ratingUnitDescription\": \"unit\",\n    \"unitMultiplicator\": 1,\n    \"unitNbDecimal\": 6,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"filterParam1\": \"RON\",\n    \"priority\": 10\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5MONTHS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"description\": \"Recurring charge {{request.label}}\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_PERIOD_5DAYS\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Subscription\",\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSS\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Termination\",\n    \"oneShotChargeTemplateType\": \"TERMINATION\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OST\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "charge|CH_OSO",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"One Shot Other\",\n    \"oneShotChargeTemplateType\": \"OTHER\",\n    \"immediateInvoicing\": false,\n    \"invoiceSubCategory\": \"ISCAT_OSO\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"amountEditable\": true,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CH_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"CH_REC_ADV\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ true }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "recurringCharge|CH_REC_ADV|true",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"Recurring charge ADVANCE\",\n    \"invoiceSubCategory\": \"ISCAT_REC\",\n    \"taxClassCode\": \"NORMAL\",\n    \"disabled\": false,\n    \"unitNbDecimal\": 4,\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"calendar\": \"CAL_MONTHLY_1ST\",\n    \"durationTermInMonth\": null,\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"filterExpression\": \"#{ {{request.label.2}} }\",\n    \"triggeredEdrs\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Price Plans",
									"item": [
										{
											"name": "PP_REC_ADV",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ADV\",\n    \"eventCode\": \"CH_REC_ADV\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OSS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OSS\",\n    \"eventCode\": \"CH_OSS\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_OST",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_OST\",\n    \"eventCode\": \"CH_OST\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\",\n    \"scriptInstance\": null\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_PRD\",\n    \"eventCode\": \"CH_PRD\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_MONTHLY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_MONTHLY\",\n    \"amountWithoutTax\": 100.123456789\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_DAILY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_DAILY\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ARR",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_REC_ARR\",\n    \"eventCode\": \"CH_REC_ARR\",\n    \"amountWithoutTax\": 100,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValue(serviceInstance, 'CF_SE_DOUBLE') }\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT\",\n    \"eventCode\": \"CH_USG_UNIT\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT 2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2\",\n    \"eventCode\": \"CH_USG_UNIT_2\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_2_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_2_bis\",\n    \"eventCode\": \"CH_USG_UNIT_2_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 2.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3\",\n    \"eventCode\": \"CH_USG_UNIT_3\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_3_bis",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_3_bis\",\n    \"eventCode\": \"CH_USG_UNIT_3_bis\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 3.5 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_USG_UNIT_4",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"PP_USG_UNIT_4\",\n    \"eventCode\": \"CH_USG_UNIT_4\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ 4 * mv:getInheritedCFValueForDate(serviceInstance, 'CF_SE_DOUBLE_VERSION',op.operationDate) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.LogContext\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP|code=USG_RON",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label.0}}_{{code}}\",\n    \"eventCode\": \"CH_{{code}}\",\n    \"amountWithoutTax\": 100,\n    \"amountWithTax\": 1,\n    \"amountWithoutTaxEL\": \"#{ mv:getInheritedCFValueByKey(serviceInstance, 'CF_SE_MAP_RON_DOUBLE', op.quantity) }\",\n    \"woDescriptionEL\": null,\n    \"scriptInstance\": \"org.meveo.service.script.rating.LogWalletOperation\"\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_5MONTHS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_5MONTHS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "PP_REC_ADV_2DAYS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{request.label}}\",\n    \"eventCode\": \"CH_REC_ADV_2DAYS\",\n    \"amountWithoutTax\": 100\n}\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Services",
									"item": [
										{
											"name": "RESET SERVICE LIST (DO NOT EDIT)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "55257fa2-32e4-4b62-8115-1a3e0e19118e",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "HEAD",
												"header": [],
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OSS|desc=One-shot subscription service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "ee7e6b24-a651-4ba4-9f29-e5fb71205331",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OSS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_OST|desc=One-shot termination service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "5d2da8c2-8075-4624-b674-5f16c5c038e7",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 15.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": {\r\n      \"serviceChargeTemplateSubscription\": [\r\n        { \"code\": \"CH_OST\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												},
												"description": "Should stay first of the list (see script)"
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV|desc=Recurring service ADVANCE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "bd7a9bd2-01c7-47ae-b969-176d15f031eb",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT|desc=Unit usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ee8853ff-808d-4f08-b973-d321b8807229",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_DOUBLE\",\n                \"doubleValue\": 3\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_UNIT\",\n                \"wallets\": null,\n                \"counterTemplate\": null,\n                \"accumulatorCounterTemplates\": {\n                \t\"counterTemplate\": [\n                \t\t\"CN_USG_ACCUM_C\",\n                \t\t\"CN_EUR_ACCUM_C\",\n                \t\t\"CN_MULTI_ACCUM_C\"\n                \t]\n                }\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_UNIT_2_3_4|desc=Unit usage service 2, 3, 4",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "ab2cc6da-4074-4476-ad79-09dc7f0433d6",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": {\r\n      \"serviceChargeTemplateUsage\": [\r\n        { \"code\": \"CH_USG_UNIT_2\" },\r\n        { \"code\": \"CH_USG_UNIT_2_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_3\", \"counterTemplate\":\"CN_USG_COUNTER_3\" },\r\n        { \"code\": \"CH_USG_UNIT_3_bis\" },\r\n        { \"code\": \"CH_USG_UNIT_4\", \"counterTemplate\":\"CN_USG_COUNTER_4\" }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateRecurrings\": null,\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_USG_RON|desc=RON usage service",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "99e4e28c-d2d2-4604-9d2e-e1a7e0cc70c9",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_SE_MAP_RON_DOUBLE\",\n                \"mapValue\": {\n\"0<10\":   { \"value\": 2.0 },\n\"10<100\": { \"value\": 3.0 },\n\"100<\":   { \"value\": 4.0 }\n                }\n            }\n        ]\n    },\n    \"imageBase64\": null,\n    \"imagePath\": null,\n    \"invoicingCalendar\": null,\n    \"longDescription\": null,\n    \"mandatory\": true,\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"CH_USG_RON\",\n                \"wallets\": null,\n                \"counterTemplate\": null\n            }\n        ]\n    },\n    \"serviceChargeTemplateRecurrings\": null,\n    \"serviceChargeTemplateSubscriptions\": null,\n    \"serviceChargeTemplateTerminations\": null,\n    \"somCode\": null\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ARR|desc=Recurring service ARREAR",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "e588696c-d954-4052-8773-486d0a7766a6",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            { \"code\": \"CF_SE_DOUBLE\", \"doubleValue\": 3.0 }\r\n        ]\r\n    },\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ARR\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_DAY|desc=Recurring service ADVANCE DAY PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "526c29e4-4192-4c45-9857-89a47bb0d210",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2DAYS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5DAYS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIODS_MONTH|desc=Recurring service ADVANCE MONTH PERIODS",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "a31d518c-9f83-43e5-9e55-a407d4b7c0bf",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_MONTHLY\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_2MONTHS\", \"wallets\": null },\r\n        { \"code\": \"CH_REC_ADV_5MONTHS\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "SE|code=SE_REC_ADV_PERIOD_DAILY|desc=Recurring service ADVANCE DAILY",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"id": "44501185-4a4e-43f9-9824-872a2d8999e4",
														"exec": [
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n      \"serviceChargeTemplateRecurring\": [\r\n        { \"code\": \"CH_REC_ADV_DAILY\", \"wallets\": null }\r\n      ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "31eac6bf-fc4b-41d8-b79e-193f0286a9fa",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"id": "4a02d954-088b-45ad-aca7-9225ea334819",
												"exec": [
													"var services;",
													"var serviceCode;",
													"if(pm.info.requestName==='RESET SERVICE LIST (DO NOT EDIT)') {",
													"    services = \"\";",
													"} else {",
													"    services = pm.globals.get(\"offer.services\");",
													"    serviceCode = pm.globals.get(\"code\");",
													"    if(services === \"\") {",
													"        services = '{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    } else {",
													"        services += '\\n,{\"serviceTemplate\":{\"code\":\"'+serviceCode+'\",\"customFields\":null},\"mandatory\":false,\"incompatibleServiceTemplate\":[]}';",
													"    }",
													"}",
													"",
													"pm.globals.set(\"offer.services\", services);",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Products and Bundles",
									"item": [
										{
											"name": "PR_PRD",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"PR_PRD\",\r\n  \"description\": \"Product\",\r\n  \"name\": \"A product has no name (or has it)\",\r\n  \"validFrom\": null,\r\n  \"validTo\": null,\r\n  \"lifeCycleStatus\": \"ACTIVE\",\r\n  \"customFields\": null,\r\n  \"imageBase64\": null,\r\n  \"businessProductModel\": null,\r\n  \"offerTemplateCategory\": null,\r\n  \"productChargeTemplate\": [ { \"code\": \"CH_PRD\" } ],\r\n  \"walletTemplate\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Offers",
									"item": [
										{
											"name": "OF|code=OF",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{template.label}} offer {{$timestamp}}\",\n    \"disabled\": false,\n    \"lifeCycleStatus\": \"ACTIVE\",\n    \"bomCode\": null,\n    \"offerTemplateCategoryCode\": null,\n    \"offerProductTemplate\": [\n        {\n            \"productTemplate\": {\n                \"code\": \"PR_PRD\"\n            }\n        }\n    ],\n    \"offerServiceTemplate\": [\n{{offer.services}}\n    ],\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"CF_OF_STRING\",\n                \"stringValue\": \"From OfferTemplate {{code}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "OF|code=OF_EMPTY",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\":\"{{code}}\",\r\n    \"description\":\"{{template.label}} empty offer {{$timestamp}}\",\r\n    \"disabled\":false,\r\n    \"lifeCycleStatus\":\"ACTIVE\",\r\n    \"bomCode\":null,\r\n    \"offerTemplateCategoryCode\":null,\r\n    \"offerProductTemplate\": null,\r\n    \"offerServiceTemplate\":null,\r\n    \"customFields\": {\r\n    \t\"customField\": [\r\n    \t\t{\r\n    \t\t\t\"code\": \"CF_OF_STRING\",\r\n    \t\t\t\"stringValue\": \"From OfferTemplate {{code}}\"\r\n    \t\t}\r\n    \t]\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "BxM",
									"item": [
										{
											"name": "BSM",
											"item": [
												{
													"name": "BSM_OSS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_OSS\",\r\n    \"description\": \"BSM Subscription fee\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_OSS\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "BSM_REC_ADV",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"BSM_REC_ADV\",\r\n    \"description\": \"BSM Recurring Advance\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"SE_REC_ADV\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bsm|code=BSM_USG_UNIT|desc=BSM unit usage|service=SE_USG_UNIT",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"serviceTemplate\": { \"code\": \"{{service}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessServiceModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessServiceModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BPM",
											"item": [
												{
													"name": "bpm|code=BPM_PRD|desc=BPM product|target=PR_PRD",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\",\r\n    \"description\": \"{{desc}}\",\r\n    \"license\": \"COM\",\r\n    \"productTemplate\": { \"code\": \"{{target}}\" }\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessProductModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessProductModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "BOM",
											"item": [
												{
													"name": "bom|code=BOM_SERVICE|desc=BOM based on offer OF|offer=OF",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": { \"code\": \"{{offer}}\" },\n\t\"moduleItems\": null\n}\n\n"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_SERVICE",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_BSM|desc=BOM with BSMs|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": [\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_REC_ADV\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_USG_UNIT\"\n            }\n        },\n        {\n            \"businessServiceModel\": {\n                \"code\": \"BSM_OSS\"\n            }\n        },\n        {\n            \"businessProductModel\": {\n                \"code\": \"BPM_PRD\"\n            }\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|install|code=BOM_BSM",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												},
												{
													"name": "bom|code=BOM_EMPTY|desc=BOM on an empty offer|offer=OF_EMPTY",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"code\": \"{{code}}\",\n    \"description\": \"{{desc}}\",\n    \"license\": \"COM\",\n    \"offerTemplate\": {\n        \"code\": \"{{offer}}\"\n    },\n    \"moduleItems\": []\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/createOrUpdate",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"createOrUpdate"
															]
														}
													},
													"response": []
												},
												{
													"name": "installBOM|code=BOM_EMPTY",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"code\": \"{{code}}\"\r\n}"
														},
														"url": {
															"raw": "{{opencell.url}}/catalog/businessOfferModel/install",
															"host": [
																"{{opencell.url}}"
															],
															"path": [
																"catalog",
																"businessOfferModel",
																"install"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Discount plan",
									"item": [
										{
											"name": "Discount plan",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DP_DISCOUNT_PLAN\",\r\n    \"description\": \"Discount plan description\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (percent 50%)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_50P\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"invoiceCategoryCode\": \"ICAT_OSH\",\r\n    \"invoiceSubCategoryCode\": \"ISCAT_OSO\",\r\n    \"accountingCode\": \"ACCT_CODE\",\r\n    \"expressionEl\": \"#{ true }\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"PERCENTAGE\",\r\n    \"discountValue\": 50,\r\n    \"discountValueEL\": \"#{ 50 }\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Discount plan item (fixed 10)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DPI_DISCOUNT_PLAN_10F\",\r\n    \"discountPlanCode\": \"DP_DISCOUNT_PLAN\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"FIXED\",\r\n    \"discountValue\": 10,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_FIXED_200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_FIXED_200|DPI_FIXED_200|FIXED|200",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": \"#{amount}\",\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlan|DP_GLOBAL_10P",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.1}}\",\r\n    \"description\": \"Discount plan {{request.label.1}}\",\r\n    \"defaultDuration\": null,\r\n    \"durationUnit\": null,\r\n    \"startDate\": null,\r\n    \"endDate\": null,\r\n    \"customFields\": null\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "discountPlanItem|DP_GLOBAL_10P|DPI_GLOBAL_10P|PERCENTAGE|10",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{request.label.2}}\",\r\n    \"discountPlanCode\": \"{{request.label.1}}\",\r\n    \"disabled\": false,\r\n    \"discountPlanItemType\": \"{{request.label.3}}\",\r\n    \"discountValue\": {{request.label.4}},\r\n    \"discountValueEL\": null,\r\n    \"customFields\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlanItem/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlanItem",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "Default",
							"item": [
								{
									"name": "C|Jean|Bonnot",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "30989d31-899f-4c99-be38-0c7d2755e619",
												"exec": [
													"var parts = pm.variables.get(\"request.label\").split(\"|\");",
													"var index = pm.globals.get(\"index\");",
													"",
													"if (typeof index === 'undefined') {",
													"    console.log(\"index global variable is undefined -> setting to \\\"00\\\"\");",
													"    pm.globals.set(\"index\", \"00\");",
													"    index = \"00\";",
													"}",
													"",
													"var prefix = pm.variables.get(\"template.code\") + \"-\";",
													"var suffix = \" \" + prefix + index;",
													"",
													"switch (parts.length) {",
													"    case 1:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[0] + suffix);",
													"        pm.globals.set(\"account.firstname\", \"\");",
													"        pm.globals.set(\"account.lastname\", \"\");",
													"        break;",
													"    case 2:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + suffix);",
													"        pm.globals.set(\"account.firstname\", \"\");",
													"        pm.globals.set(\"account.lastname\", \"\");",
													"        break;",
													"    case 3:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + \" \" + parts[2] + suffix);",
													"        pm.globals.set(\"account.firstname\", parts[1]);",
													"        pm.globals.set(\"account.lastname\", parts[2]);",
													"        break;",
													"    case 4:",
													"        pm.globals.set(\"account.code\", prefix + parts[0] + index);",
													"        pm.globals.set(\"account.description\", parts[1] + suffix);",
													"        pm.globals.set(\"account.firstname\", parts[2]);",
													"        pm.globals.set(\"account.lastname\", parts[3]);",
													"        break;",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"crmAccountType\" : \"C_UA\",\r\n  \"crmParentCode\" : \"{{seller.code}}\",\r\n  \"code\" : \"{{account.code}}\",\r\n  \"description\": \"{{account.description}}\",\r\n  \"name\" : {\r\n    \"title\" : \"MR\",\r\n    \"firstName\" : \"{{account.firstname}}\",\r\n    \"lastName\" : \"{{account.lastname}}\"\r\n  },\r\n  \"subscriptionDate\": \"2018-01-10\",\r\n  \"jobTitle\": \"Ruler of the known Universe\",\r\n  \"vatNo\": \"FR12345678901234\",\r\n  \"registrationNo\": \"12354678901234\",\r\n  \"address\" : {\r\n    \"address1\" : \"3 rue passante\",\r\n    \"address2\" : \"Bâtiment A\",\r\n    \"address3\" : \"Bureau D42\",\r\n    \"zipCode\" : \"99999\",\r\n    \"city\" : \"METROVILLE\",\r\n    \"country\" : \"FR\"\r\n  },\r\n  \"contactInformation\" : {\r\n    \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n    \"mobile\" : \"+33123546789\"\r\n  },\r\n  \"email\" : \"stephane.chambrin@opencellsoft.com\",\r\n  \"language\" : \"FRA\",\r\n  \"paymentMethod\" : \"CHECK\",\r\n  \"customerCategory\" : \"CLIENT\",\r\n  \"currency\" : \"EUR\",\r\n  \"billingCycle\" : \"BC_MONTHLY_1ST\",\r\n  \"country\" : \"FR\",\r\n  \"electronicBilling\" : \"true\",\r\n  \"customFields\": null\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdateCRMAccountHierarchy",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"accountHierarchy",
												"createOrUpdateCRMAccountHierarchy"
											]
										}
									},
									"response": []
								},
								{
									"name": "SU|OF|MAIN_SELLER|2019-12-15T01:23:45.678Z",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "ddfbf8f1-d19f-4eb1-9ebe-f4e6e66c5c84",
												"exec": [
													"pm.globals.set(\"subscription.code\", pm.globals.get(\"account.code\")+\"-\"+pm.globals.get(\"request.label.0\"));",
													"pm.globals.set(\"subscription.date\", pm.globals.get(\"request.label.3\"));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{subscription.code}}\",\r\n    \"description\": \"Souscription {{subscription.code}}\",\r\n    \"userAccount\": \"{{account.code}}\",\r\n    \"offerTemplate\": \"{{request.label.1}}\",\r\n    \"seller\": \"{{request.label.2}}\",\r\n    \"subscriptionDate\": \"{{request.label.3}}\",\r\n    \"terminationDate\": null,\r\n    \"endAgreementDate\": \"2019-01-01\",\r\n    \"status\": null,\r\n    \"terminationReason\": null,\r\n    \"customFields\": null\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "SU|OF|S_LVL2|2020-03-15T01:23:45.678Z",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"id": "78d72a16-8131-42ac-9682-890b287e84aa",
												"exec": [
													"pm.globals.set(\"subscription.code\", pm.globals.get(\"account.code\")+\"-\"+pm.globals.get(\"request.label.0\"));",
													"pm.globals.set(\"subscription.date\", pm.globals.get(\"request.label.3\"));",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"code\": \"{{subscription.code}}\",\r\n    \"description\": \"Souscription {{subscription.code}}\",\r\n    \"userAccount\": \"{{account.code}}\",\r\n    \"offerTemplate\": \"{{request.label.1}}\",\r\n    \"seller\": \"{{request.label.2}}\",\r\n    \"subscriptionDate\": \"{{request.label.3}}\",\r\n    \"terminationDate\": null,\r\n    \"endAgreementDate\": \"2019-01-01\",\r\n    \"status\": null,\r\n    \"terminationReason\": null,\r\n    \"customFields\": null\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"createOrUpdate"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_OSS|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_OST|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_REC_ADV|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"description\": \"SE_REC_ADV OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100.123456789\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_USG_UNIT|{{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{request.label.2}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 0.30\r\n                },\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 1,\r\n                    \"doubleValue\": 10\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "updatesServices|SE_USG_UNIT|{{subscription.date}}",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"serviceToUpdate\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 2,\r\n                    \"valuePeriodStartDate\": \"2020-04-19\",\r\n                    \"doubleValue\": 5\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/updateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"updateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|code=SE_USG_RON|date={{subscription.date}}",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{code}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{date}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n\t            {\r\n\t                \"code\": \"CF_SE_MAP_RON_DOUBLE\",\r\n\t                \"mapValue\": {\r\n\"0<10\":   { \"value\": 20.0 },\r\n\"10<100\": { \"value\": 30.0 },\r\n\"100<\":   { \"value\": 40.0 }\r\n\t                }\r\n\t            }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices REC ARR",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"SE_REC_ARR\",\r\n        \"description\": \"SE_REC_ARR OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": \"2019-03-16\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 10\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices REC PERIODS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"SE_REC_ADV_PERIODS_MONTH\",\r\n        \"description\": \"SE_REC_ADV_PERIODS_MONTH OVERRIDE\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": \"2018-01-31\",\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 100.00\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "activateServices|SE_USG_UNIT_2_3_4",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscription\" : \"{{subscription.code}}\",\r\n  \"servicesToActivate\" : {\r\n    \"service\" : [ {\r\n        \"code\": \"{{request.label.1}}\",\r\n        \"quantity\": 1,\r\n        \"subscriptionDate\": \"{{subscription.date}}\",\r\n        \"rateUntilDate\": null,\r\n        \"customFields\": {\r\n            \"customField\": [\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE\",\r\n                    \"doubleValue\": 0.33\r\n                },\r\n                {\r\n                    \"code\": \"CF_SE_DOUBLE_VERSION\",\r\n                    \"valuePeriodPriority\": 1,\r\n                    \"doubleValue\": 1\r\n                }\r\n            ]\r\n        }\r\n    } ]\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/activateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"activateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "setBillingAccountDiscountPlan|{{account.code}}|DP_FIXED_200",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{account.description}} [{{$timestamp}}]\",\n\t\"billingCycle\" : \"BC_MONTHLY_1ST\",\n\t\"language\" : \"FRA\",\n\t\"country\" : \"FR\",\n    \"discountPlanForInstantiation\": [\n        {\n            \"code\": \"{{request.label.2}}\",\n            \"startDate\": null,\n            \"endDate\": null,\n            \"defaultDuration\": null,\n            \"durationUnit\": null\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "setBillingAccountDiscountPlan|{{account.code}}|DP_GLOBAL_10P",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"{{request.label.1}}\",\n    \"description\": \"{{account.description}} [{{$timestamp}}]\",\n\t\"billingCycle\" : \"BC_MONTHLY_1ST\",\n\t\"language\" : \"FRA\",\n\t\"country\" : \"FR\",\n    \"discountPlanForInstantiation\": [\n        {\n            \"code\": \"{{request.label.2}}\",\n            \"startDate\": null,\n            \"endDate\": null,\n            \"defaultDuration\": null,\n            \"durationUnit\": null\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{opencell.url}}/account/billingAccount",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"account",
												"billingAccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "terminateService|SE_REC_ADV|{{subscription.date}}|TR_REIMBURSE",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"terminationDate\" : \"{{request.label.2}}\",\r\n  \"terminationReason\" : \"{{request.label.3}}\",\r\n  \"services\" : [\"{{request.label.1}}\"]\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								},
								{
									"name": "terminateService|SE_OSS|{{subscription.date}}|TR_NONE",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"subscriptionCode\" : \"{{subscription.code}}\",\r\n  \"terminationDate\" : \"{{request.label.2}}\",\r\n  \"terminationReason\" : \"{{request.label.3}}\",\r\n  \"services\" : [\"{{request.label.1}}\"]\r\n}\r\n"
										},
										"url": {
											"raw": "{{opencell.url}}/billing/subscription/terminateServices",
											"host": [
												"{{opencell.url}}"
											],
											"path": [
												"billing",
												"subscription",
												"terminateServices"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "chargeCDR|p1=UNIT|p2=AAA|p3=100|qtt=10|isVirtual=false",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{timestamp.iso}};{{qtt}};{{subscription.code}};{{p1}};{{p2}};{{p3}}"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/mediation/chargeCdr?returnWalletOperations=true&isVirtual={{isVirtual}}&rateTriggeredEdr=true&maxDepth=0",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"mediation",
										"chargeCdr"
									],
									"query": [
										{
											"key": "returnWalletOperations",
											"value": "true"
										},
										{
											"key": "isVirtual",
											"value": "{{isVirtual}}"
										},
										{
											"key": "rateTriggeredEdr",
											"value": "true"
										},
										{
											"key": "maxDepth",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "applyOneshotCharge|CH_OSO|{{subscription.code}}|100.123456789",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"subscription\": \"{{request.label.2}}\",\r\n  \"oneShotCharge\": \"{{request.label.1}}\",\r\n  \"amountWithoutTax\": {{request.label.3}},\r\n  \"operationDate\": \"{{$timestamp}}000\",\r\n  \"description\": null,\r\n  \"criteria1\": null,\r\n  \"criteria2\": null,\r\n  \"criteria3\": null\r\n}\r\n"
								},
								"url": {
									"raw": "{{opencell.url}}/billing/subscription/applyOneShotChargeInstance",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"subscription",
										"applyOneShotChargeInstance"
									]
								}
							},
							"response": []
						},
						{
							"name": "RT_Job_aboEnergie",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d30cb97-ad00-4b82-902d-7b033a310dee",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.status === \"SUCCESS\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"code\": \"RT_Job_aboEnergie\",\n        \"disabled\": false,\n        \"jobCategory\": \"INVOICING\",\n        \"jobTemplate\": \"RatedTransactionsJob\",\n        \"active\": true,\n        \"customFields\": {\n            \"customField\": [\n                {\n                    \"code\": \"waitingMillis\",\n                    \"description\": \"Waiting before next launch (ms\",\n                    \"fieldType\": \"LONG\",\n                    \"longValue\": 0,\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Configuration:0;field:1\"\n                },\n                {\n                    \"code\": \"nbRuns\",\n                    \"description\": \"Number of parallel execution\",\n                    \"fieldType\": \"LONG\",\n                    \"longValue\": -1,\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Configuration:0;field:0\"\n                },\n                {\n                    \"code\": \"woAggregationSettings\",\n                    \"description\": \"Activate aggregation\",\n                    \"fieldType\": \"ENTITY\",\n                    \"entityReferenceValue\": {\n                        \"classname\": \"org.meveo.model.billing.WalletOperationAggregationSettings\",\n                        \"classnameCode\": null,\n                        \"code\": \"aggreg_abo_energie\"\n                    },\n                    \"guiPosition\": \"tab:Configuration:0;fieldGroup:Aggregation Settings:1;field:0\"\n                }\n            ]\n        },\n        \"limitToSingleNode\": true,\n        \"verboseReport\": true\n    }"
								},
								"url": {
									"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"jobInstance",
										"createOrUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get WO before  RT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "690c8194-18a4-4e03-aedd-11cd193e2009",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Is sucsess\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"Total WO\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(14);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "opencell.admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "opencell.admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/billing/wallet/operation/list",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"wallet",
										"operation",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "run RT_Job_aboEnergie",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56b0656c-23c5-4dc0-b822-c0b19bad6627",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"postman.setGlobalVariable(\"jobRun.id\", jsonData.actionStatus.message);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"code\":\"RT_Job_aboEnergie\"\n}"
								},
								"url": {
									"raw": "{{opencell.url}}/job/execute",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"execute"
									]
								}
							},
							"response": []
						},
						{
							"name": "Job Report|RT|wait=5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c33d348d-17dd-42d9-812a-0ddc7e7e5789",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"is.success\"] = jsonData.actionStatus.status === \"SUCCESS\";",
											"var task=pm.variables.get(\"task.code\");",
											"",
											"if( typeof jsonData.jobExecutionResultDto.endDate !== \"undefined\" && jsonData.jobExecutionResultDto.done === true ){",
											"    tests[\"is.done.\"+task] = true;",
											"    tests[\"is.jobNoWarning\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithWarning === 0;",
											"    tests[\"is.jobNoError\"] = jsonData.jobExecutionResultDto.nbItemsProcessedWithError === 0;",
											"    if( ! (tests[\"is.jobNoWarning\"] && tests[\"is.jobNoError\"]) ){",
											"        console.log(\"Errors have occured, check job \"+task+\" report.\");",
											"    }",
											"} else {",
											"    postman.setNextRequest(pm.variables.get(\"task.wait\"));",
											"    tests[\"is.not.done.yet.\"+task] = true;",
											"    console.log(\"Not done yet (\"+task+\").\");",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d884125-7dc5-4818-bd59-e15b5216fee4",
										"exec": [
											"pm.globals.set(\"task.wait\", pm.variables.get(\"request.label\"));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									}
								],
								"url": {
									"raw": "{{opencell.url}}/job/jobReport?id={{jobRun.id}}",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"job",
										"jobReport"
									],
									"query": [
										{
											"key": "id",
											"value": "{{jobRun.id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RT OPEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44d74e54-b235-430a-bbdf-5073b5dd745b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Is sucsess\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
											"});",
											"",
											"pm.test(\"Total before removing Zero WO\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(6);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "opencell.admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "opencell.admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filters\":{\n\t\t\"status\":\"OPEN\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{opencell.url}}/billing/ratedTransaction/list?query=status:OPEN",
									"host": [
										"{{opencell.url}}"
									],
									"path": [
										"billing",
										"ratedTransaction",
										"list"
									],
									"query": [
										{
											"key": "query",
											"value": "status:OPEN"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b32df8da-c0f3-40e1-9dea-5b1f0a97af7b",
						"type": "text/javascript",
						"exec": [
							"var now=new Date();",
							"pm.globals.set(\"timestamp.iso\", now.toISOString());",
							"pm.globals.set(\"request.label\", pm.info.requestName);",
							"",
							"var parts = pm.info.requestName.split(\"|\");",
							"",
							"for(let i=0; i<parts.length; i++) {",
							"    pm.globals.set(\"wait\", 0);",
							"    pm.globals.set(\"request.label.\"+i, parts[i]);",
							"",
							"    if(parts[i].indexOf(\"=\") != -1 ){",
							"        propName = parts[i].split(\"=\")[0].trim();",
							"        propValue = parts[i].split(\"=\")[1];",
							"        pm.globals.set(propName, propValue);",
							"    }",
							"}",
							"",
							"// Token auth",
							"var token = pm.variables.get(\"access_token\");",
							"//console.log(\"token=\"+token);",
							"",
							"if(!token || token === \"\" ) {",
							"    console.log(\"token is not defined\");",
							"    // Set some environment variables to use in the access token request. ",
							"    var client_id = pm.environment.get(\"client.id\") || \"opencell-web\";",
							"    var client_secret = pm.environment.get(\"client.secret\") || \"afe07e5a-68cb-4fb0-8b75-5b6053b07dc3\";",
							"    var opencell_url = pm.environment.get(\"opencell.base\");",
							"    var username = pm.environment.get(\"opencell.username\") || \"opencell.admin\";",
							"    var password = pm.environment.get(\"opencell.password\") || \"opencell.admin\";",
							"    var CryptoJS = require(\"crypto-js\")",
							"    // Encrypt the Client ID and Secret in base64 ",
							"    var rawStr = CryptoJS.enc.Utf8.parse(client_id + ':' + client_secret)",
							"    var client_cred = CryptoJS.enc.Base64.stringify(rawStr)",
							"    // Now let's get a new oauth2 access_token and set it in a variable ",
							"    pm.sendRequest(",
							"        { ",
							"            url: opencell_url + '/auth/realms/opencell/protocol/openid-connect/token', ",
							"            method: 'POST', ",
							"            header: ",
							"            { ",
							"                //'Authorization': 'Basic ' + client_cred, ",
							"                'Cache-Control': 'no-cache', ",
							"                'Content-Type': 'application/x-www-form-urlencoded' ",
							"            }, body: ",
							"            { ",
							"                mode: 'urlencoded', ",
							"                urlencoded: ",
							"                [",
							"                    { ",
							"                        key: \"client_id\", ",
							"                        value: client_id ",
							"                    }, ",
							"                    { ",
							"                        key: \"username\", ",
							"                        value: username ",
							"                    },",
							"                    { ",
							"                        key: \"password\", ",
							"                        value: password ",
							"                    },",
							"                    { ",
							"                        key: \"grant_type\", ",
							"                        value: \"password\" ",
							"                    },",
							"                    { ",
							"                        key: \"client_secret\", ",
							"                        value: client_secret",
							"                    },",
							"                ] ",
							"            } ",
							"        }, ",
							"        function (err, response) { ",
							"            //console.log(\"AUTH_RETURN_CODE\", err);",
							"            //console.log(\"AUTH_RESPONSE\", response);",
							"            const jsonResponse = response.json();",
							"            console.log(\"Saving token to variables\")",
							"            pm.variables.set(\"access_token\", jsonResponse.access_token); ",
							"        }",
							"        );",
							"} else{",
							"    console.log(\"token already exists\");",
							"}",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8c16e84e-708c-4ccc-80c4-ebe5e5e73e58",
						"type": "text/javascript",
						"exec": [
							"var wait = pm.variables.get(\"wait\");",
							"",
							"if (wait > 0) {",
							"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
							"    setTimeout(function () { }, wait * 1000);",
							"}",
							"",
							"if (pm.response.code == 401) {",
							"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
							"    pm.variables.unset(\"access_token\");",
							"    console.log(\"Jumping to \" + pm.info.requestName);",
							"    postman.setNextRequest(pm.info.requestName);",
							"} else {",
							"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
							"}",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5398 - ServiceTemplate update API should not require any fields",
			"item": [
				{
					"name": "Update service template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"4_SE_CLASSIC_COMMISSION\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/catalog/serviceTemplate",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"catalog",
								"serviceTemplate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "#5315 - [API] POST /invoice ratedTransactionsToLink",
			"item": [
				{
					"name": "ratedTransactionsToLink   ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6919298-b4e0-499f-a290-fe31e687af5d",
								"exec": [
									"pm.test(\"Check that the  API response is  200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{opencell.password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{opencell.username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ratedTransactionsToLink\": [168],\r\n    \"returnXml\": true,\r\n    \"invoiceType\": \"ADJ\",\r\n    \"billingAccountCode\": \"DEMO.CLASSIC\",\r\n    \"dueDate\": \"2020-10-13\",\r\n    \"invoiceDate\": \"2020-10-13\",\r\n    \"invoiceMode\": \"DETAILLED\",\r\n    \"categoryInvoiceAgregate\": [\r\n        {\r\n            \"categoryInvoiceCode\": \"SUBSCRIPTION\",\r\n            \"description\": \"SUBSCRIPTION\",\r\n            \"subCategoryInvoiceAgregateDto\": [\r\n                {\r\n                    \"description\": \"SUB_DATA\",\r\n                    \"invoiceSubCategoryCode\": \"SUB_DATA\",\r\n                    \"amountWithoutTax\": \"100\",\r\n                    \"amountTax\": \"20\",\r\n                    \"amountWithTax\": \"120\",\r\n                    \"ratedTransaction\": [\r\n                        {\r\n                            \"code\": \"WS_BASE_OS_OTHER\",\r\n                            \"unitAmountWithoutTax\": \"100\",\r\n                            \"amountWithoutTax\": \"100\",\r\n                            \"quantity\": \"1\",\r\n                            \"description\": \"API\",\r\n                            \"usageDate\": \"2020-10-13\",\r\n                            \"taxCode\": \"TAX_00\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{opencell.url}}/invoice",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"invoice"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "388d9e73-929f-42cd-9788-143510dfde8c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "66cf0a60-b35c-4c8e-ac23-9bb0a5549566",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "d88dd6a5-ed96-4d36-ac08-0406b834d687",
			"key": "opencell.base",
			"value": "http://localhost:8080/opencell"
		},
		{
			"id": "3fb0c526-b9d7-4dcf-aa02-69cbcab70d6b",
			"key": "opencell.url",
			"value": "{{opencell.base}}/api/rest"
		},
		{
			"id": "74e4d73d-f40d-438e-a348-c4668aa5cd96",
			"key": "opencell.username",
			"value": "opencell.admin"
		},
		{
			"id": "2b758400-a1aa-4e11-bf72-3e3d077f03a5",
			"key": "opencell.password",
			"value": "opencell.admin"
		},
		{
			"id": "2f7e3ceb-2828-4193-b3a4-0867ef6dbf13",
			"key": "opencell.superusername",
			"value": "opencell.superadmin"
		},
		{
			"id": "358dca2e-5e6f-474a-a003-311c35c53e3d",
			"key": "opencell.superpassword",
			"value": "opencell.superadmin"
		},
		{
			"id": "2825a09f-6852-4330-8d68-a375f69036f2",
			"key": "testCode",
			"value": "TST_CODE"
		},
		{
			"id": "193cb290-ebd8-4ee6-b41b-2ee5a2008282",
			"key": "currency",
			"value": "EUR"
		},
		{
			"id": "0bfc6190-5594-405e-8ac7-21b359048a86",
			"key": "language",
			"value": "FRA"
		},
		{
			"id": "5b36d324-1d1c-487f-9697-d8ef873b48ca",
			"key": "counrty_code",
			"value": "FR"
		},
		{
			"id": "934e05df-ab80-4955-8c9d-a4bc728b4750",
			"key": "test_email",
			"value": "test@test.com"
		},
		{
			"id": "ec22bcf1-08e0-4c71-b63c-b32080b2f276",
			"key": "address",
			"value": "14 Rue Crespin du Gast"
		},
		{
			"id": "284abfa6-c044-4125-a0ef-e4b22b45fd00",
			"key": "first_name",
			"value": "FNAME"
		},
		{
			"id": "8bf399e9-3b53-4246-a2c2-d7c4ca2c4526",
			"key": "last_name",
			"value": "LNAME"
		},
		{
			"id": "a407740c-70d1-4801-9b8b-23b5a8e30057",
			"key": "city",
			"value": "PARIS"
		},
		{
			"id": "a16c3986-a323-4299-b970-e1ed0d336717",
			"key": "zip_code",
			"value": "75011"
		},
		{
			"id": "ba0fed43-26f2-4717-9564-d30d512b4d4b",
			"key": "state",
			"value": "Paris Area"
		},
		{
			"id": "6b3c7694-4da9-4e80-9d6e-a5be121996b3",
			"key": "phone",
			"value": "+212587654321"
		},
		{
			"id": "b0622919-b3b7-4d33-a745-084c7227b651",
			"key": "storage",
			"value": "List of values"
		},
		{
			"id": "eea6a9f1-b103-45ad-89ef-0d894eac5a7f",
			"key": "type",
			"value": "String"
		},
		{
			"id": "b6a50a38-e787-4611-bec4-1a50706799b2",
			"key": "target",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}