{
	"info": {
		"_postman_id": "fb2bf588-64b1-47a7-a4b8-2d1d37af7ca9",
		"name": "RUN JOB",
		"description": "RUN CDR JOB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Run|code=CRM_CDR_GEN_JOB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"CRM_GEN_JOB\"\n}"
						},
						"url": {
							"raw": "{{opencell.url}}/job/execute",
							"host": [
								"{{opencell.url}}"
							],
							"path": [
								"job",
								"execute"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{opencell.password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{opencell.username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Initialize variables",
					"var now=new Date();",
					"pm.globals.set(\"timestamp.iso\", now.toISOString());",
					"pm.globals.set(\"request.label\", pm.info.requestName);",
					"",
					"var parts = pm.info.requestName.split(\"|\");",
					"",
					"for(let i=0; i<parts.length; i++) {",
					"    pm.globals.set(\"wait\", 0);",
					"    pm.globals.set(\"request.label.\"+i, parts[i]);",
					"",
					"    if(parts[i].indexOf(\"=\") != -1 ){",
					"        propName = parts[i].split(\"=\")[0].trim();",
					"        propValue = parts[i].split(\"=\")[1];",
					"        pm.globals.set(propName, propValue);",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var wait = pm.variables.get(\"wait\");",
					"if (wait > 0) {",
					"    // utils.sleep(wait); doesn't seem to work",
					"    console.log(\"Waiting for \" + pm.variables.get(\"request.label.0\") + \" for \" + wait + \" seconds...\");",
					"    setTimeout(function () { }, wait * 1000);",
					"}",
					"",
					"if (pm.response.code == 401) {",
					"    console.log(\"Unauthorized[401] : access_token may be invalid -> deleting token. Please retry...\");",
					"    pm.variables.unset(\"access_token\");",
					"    console.log(\"Jumping to \" + pm.info.requestName);",
					"    postman.setNextRequest(pm.info.requestName);",
					"} else {",
					"    tests[\"is.success\"] = (pm.response.code == 200 || pm.response.code == 204);",
					"}",
					""
				]
			}
		}
	]
}
